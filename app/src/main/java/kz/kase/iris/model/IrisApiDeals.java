// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iris_api_deals.proto

package kz.kase.iris.model;

public final class IrisApiDeals {
  private IrisApiDeals() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   **
   * Тип сделки.
   * </pre>
   *
   * Protobuf enum {@code IRIS.DealType}
   */
  public enum DealType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Рыночная.
     * </pre>
     *
     * <code>TRADE = 0;</code>
     */
    TRADE(0),
    /**
     * <pre>
     * Договорная.
     * </pre>
     *
     * <code>NEGO = 1;</code>
     */
    NEGO(1),
    /**
     * <pre>
     * Внебиржевая.
     * </pre>
     *
     * <code>OTC = 2;</code>
     */
    OTC(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Рыночная.
     * </pre>
     *
     * <code>TRADE = 0;</code>
     */
    public static final int TRADE_VALUE = 0;
    /**
     * <pre>
     * Договорная.
     * </pre>
     *
     * <code>NEGO = 1;</code>
     */
    public static final int NEGO_VALUE = 1;
    /**
     * <pre>
     * Внебиржевая.
     * </pre>
     *
     * <code>OTC = 2;</code>
     */
    public static final int OTC_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DealType valueOf(int value) {
      return forNumber(value);
    }

    public static DealType forNumber(int value) {
      switch (value) {
        case 0: return TRADE;
        case 1: return NEGO;
        case 2: return OTC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DealType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DealType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DealType>() {
            public DealType findValueByNumber(int number) {
              return DealType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.getDescriptor().getEnumTypes().get(0);
    }

    private static final DealType[] VALUES = values();

    public static DealType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DealType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:IRIS.DealType)
  }

  /**
   * <pre>
   **
   * Сектор рынка.
   * </pre>
   *
   * Protobuf enum {@code IRIS.MarketSector}
   */
  public enum MarketSector
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Первичный (размещение).
     * </pre>
     *
     * <code>PRIMARY = 0;</code>
     */
    PRIMARY(0),
    /**
     * <pre>
     * Вторичный.
     * </pre>
     *
     * <code>SECONDARY = 1;</code>
     */
    SECONDARY(1),
    /**
     * <pre>
     * Продажа государственных пакетов акций.
     * </pre>
     *
     * <code>SBS_SECTOR = 2;</code>
     */
    SBS_SECTOR(2),
    /**
     * <pre>
     * Спецторги (размещение).
     * Сектор присутствует для обратной совместимости. Не используется потому, что любое размещение - это уже спец.торги, то есть PRIMARY.
     * </pre>
     *
     * <code>OFFERING = 3;</code>
     */
    OFFERING(3),
    /**
     * <pre>
     * Спецторги (выкуп).
     * </pre>
     *
     * <code>REPURCHASE = 4;</code>
     */
    REPURCHASE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Первичный (размещение).
     * </pre>
     *
     * <code>PRIMARY = 0;</code>
     */
    public static final int PRIMARY_VALUE = 0;
    /**
     * <pre>
     * Вторичный.
     * </pre>
     *
     * <code>SECONDARY = 1;</code>
     */
    public static final int SECONDARY_VALUE = 1;
    /**
     * <pre>
     * Продажа государственных пакетов акций.
     * </pre>
     *
     * <code>SBS_SECTOR = 2;</code>
     */
    public static final int SBS_SECTOR_VALUE = 2;
    /**
     * <pre>
     * Спецторги (размещение).
     * Сектор присутствует для обратной совместимости. Не используется потому, что любое размещение - это уже спец.торги, то есть PRIMARY.
     * </pre>
     *
     * <code>OFFERING = 3;</code>
     */
    public static final int OFFERING_VALUE = 3;
    /**
     * <pre>
     * Спецторги (выкуп).
     * </pre>
     *
     * <code>REPURCHASE = 4;</code>
     */
    public static final int REPURCHASE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MarketSector valueOf(int value) {
      return forNumber(value);
    }

    public static MarketSector forNumber(int value) {
      switch (value) {
        case 0: return PRIMARY;
        case 1: return SECONDARY;
        case 2: return SBS_SECTOR;
        case 3: return OFFERING;
        case 4: return REPURCHASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MarketSector>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MarketSector> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MarketSector>() {
            public MarketSector findValueByNumber(int number) {
              return MarketSector.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.getDescriptor().getEnumTypes().get(1);
    }

    private static final MarketSector[] VALUES = values();

    public static MarketSector valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MarketSector(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:IRIS.MarketSector)
  }

  /**
   * <pre>
   * Поля по которым возможна сортировка списка сделок. 
   * </pre>
   *
   * Protobuf enum {@code IRIS.DealsSortField}
   */
  public enum DealsSortField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Время заключения сделки.
     * </pre>
     *
     * <code>DSF_DEAL_TIME = 0;</code>
     */
    DSF_DEAL_TIME(0),
    /**
     * <pre>
     * Инструмент.
     * </pre>
     *
     * <code>DSF_INSTRUMENT = 1;</code>
     */
    DSF_INSTRUMENT(1),
    /**
     * <pre>
     * Цена.
     * </pre>
     *
     * <code>DSF_PRICE = 2;</code>
     */
    DSF_PRICE(2),
    /**
     * <pre>
     * Грязная цена сделки.
     * </pre>
     *
     * <code>DSF_DIRTY_PRICE = 3;</code>
     */
    DSF_DIRTY_PRICE(3),
    /**
     * <pre>
     * Объем сдеки.
     * </pre>
     *
     * <code>DSF_VOLUME = 4;</code>
     */
    DSF_VOLUME(4),
    /**
     * <pre>
     * Объем сделки в тенге.
     * </pre>
     *
     * <code>DSF_VOL_KZT = 5;</code>
     */
    DSF_VOL_KZT(5),
    /**
     * <pre>
     * Доходность.
     * </pre>
     *
     * <code>DSF_YIELD = 6;</code>
     */
    DSF_YIELD(6),
    /**
     * <pre>
     * Версия записи.
     * </pre>
     *
     * <code>DSF_VERSION = 7;</code>
     */
    DSF_VERSION(7),
    /**
     * <pre>
     * Код записи в IRIS.
     * </pre>
     *
     * <code>DSF_ID = 8;</code>
     */
    DSF_ID(8),
    /**
     * <pre>
     * Внешний код записи (идентификатор используемый при импорте из БД BOS).
     * </pre>
     *
     * <code>DSF_EXTID = 9;</code>
     */
    DSF_EXTID(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Время заключения сделки.
     * </pre>
     *
     * <code>DSF_DEAL_TIME = 0;</code>
     */
    public static final int DSF_DEAL_TIME_VALUE = 0;
    /**
     * <pre>
     * Инструмент.
     * </pre>
     *
     * <code>DSF_INSTRUMENT = 1;</code>
     */
    public static final int DSF_INSTRUMENT_VALUE = 1;
    /**
     * <pre>
     * Цена.
     * </pre>
     *
     * <code>DSF_PRICE = 2;</code>
     */
    public static final int DSF_PRICE_VALUE = 2;
    /**
     * <pre>
     * Грязная цена сделки.
     * </pre>
     *
     * <code>DSF_DIRTY_PRICE = 3;</code>
     */
    public static final int DSF_DIRTY_PRICE_VALUE = 3;
    /**
     * <pre>
     * Объем сдеки.
     * </pre>
     *
     * <code>DSF_VOLUME = 4;</code>
     */
    public static final int DSF_VOLUME_VALUE = 4;
    /**
     * <pre>
     * Объем сделки в тенге.
     * </pre>
     *
     * <code>DSF_VOL_KZT = 5;</code>
     */
    public static final int DSF_VOL_KZT_VALUE = 5;
    /**
     * <pre>
     * Доходность.
     * </pre>
     *
     * <code>DSF_YIELD = 6;</code>
     */
    public static final int DSF_YIELD_VALUE = 6;
    /**
     * <pre>
     * Версия записи.
     * </pre>
     *
     * <code>DSF_VERSION = 7;</code>
     */
    public static final int DSF_VERSION_VALUE = 7;
    /**
     * <pre>
     * Код записи в IRIS.
     * </pre>
     *
     * <code>DSF_ID = 8;</code>
     */
    public static final int DSF_ID_VALUE = 8;
    /**
     * <pre>
     * Внешний код записи (идентификатор используемый при импорте из БД BOS).
     * </pre>
     *
     * <code>DSF_EXTID = 9;</code>
     */
    public static final int DSF_EXTID_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DealsSortField valueOf(int value) {
      return forNumber(value);
    }

    public static DealsSortField forNumber(int value) {
      switch (value) {
        case 0: return DSF_DEAL_TIME;
        case 1: return DSF_INSTRUMENT;
        case 2: return DSF_PRICE;
        case 3: return DSF_DIRTY_PRICE;
        case 4: return DSF_VOLUME;
        case 5: return DSF_VOL_KZT;
        case 6: return DSF_YIELD;
        case 7: return DSF_VERSION;
        case 8: return DSF_ID;
        case 9: return DSF_EXTID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DealsSortField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DealsSortField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DealsSortField>() {
            public DealsSortField findValueByNumber(int number) {
              return DealsSortField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.getDescriptor().getEnumTypes().get(2);
    }

    private static final DealsSortField[] VALUES = values();

    public static DealsSortField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DealsSortField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:IRIS.DealsSortField)
  }

  public interface DealOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.Deal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Первичный ключ записи сделки в ИС IRIS.
     * </pre>
     *
     * <code>int64 deal_id = 1;</code>
     */
    long getDealId();

    /**
     * <pre>
     * Время заключения сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    boolean hasDealTime();
    /**
     * <pre>
     * Время заключения сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    kz.kase.iris.model.IrisApiBase.DateTime getDealTime();
    /**
     * <pre>
     * Время заключения сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder getDealTimeOrBuilder();

    /**
     * <pre>
     * Первичный ключ записи инструмента в ИС IRIS.
     * </pre>
     *
     * <code>int32 instrument_id = 3;</code>
     */
    int getInstrumentId();

    /**
     * <pre>
     * Код инструмента.
     * </pre>
     *
     * <code>string sec_code = 4;</code>
     */
    java.lang.String getSecCode();
    /**
     * <pre>
     * Код инструмента.
     * </pre>
     *
     * <code>string sec_code = 4;</code>
     */
    com.google.protobuf.ByteString
        getSecCodeBytes();

    /**
     * <pre>
     * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
     * </pre>
     *
     * <code>string actual_sin = 5;</code>
     */
    java.lang.String getActualSin();
    /**
     * <pre>
     * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
     * </pre>
     *
     * <code>string actual_sin = 5;</code>
     */
    com.google.protobuf.ByteString
        getActualSinBytes();

    /**
     * <pre>
     * Первичный ключ записи контрагента-покупателя в ИС IRIS.
     * </pre>
     *
     * <code>int32 buyer_id = 6;</code>
     */
    int getBuyerId();

    /**
     * <pre>
     * Первичный ключ записи контрагента-продавца в ИС IRIS.
     * </pre>
     *
     * <code>int32 seller_id = 7;</code>
     */
    int getSellerId();

    /**
     * <pre>
     * Цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 8;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     * Цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 8;</code>
     */
    kz.kase.iris.model.IrisApiBase.Decimal getPrice();
    /**
     * <pre>
     * Цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 8;</code>
     */
    kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getPriceOrBuilder();

    /**
     * <pre>
     * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
     * </pre>
     *
     * <code>string price_unit = 9;</code>
     */
    java.lang.String getPriceUnit();
    /**
     * <pre>
     * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
     * </pre>
     *
     * <code>string price_unit = 9;</code>
     */
    com.google.protobuf.ByteString
        getPriceUnitBytes();

    /**
     * <pre>
     * Грязная цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal dirty_price = 10;</code>
     */
    boolean hasDirtyPrice();
    /**
     * <pre>
     * Грязная цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal dirty_price = 10;</code>
     */
    kz.kase.iris.model.IrisApiBase.Decimal getDirtyPrice();
    /**
     * <pre>
     * Грязная цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal dirty_price = 10;</code>
     */
    kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getDirtyPriceOrBuilder();

    /**
     * <pre>
     * Объем сдеки.
     * </pre>
     *
     * <code>int64 volume = 11;</code>
     */
    long getVolume();

    /**
     * <pre>
     * Объем сделки в тенге.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_kzt = 12;</code>
     */
    boolean hasVolKzt();
    /**
     * <pre>
     * Объем сделки в тенге.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_kzt = 12;</code>
     */
    kz.kase.iris.model.IrisApiBase.Decimal getVolKzt();
    /**
     * <pre>
     * Объем сделки в тенге.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_kzt = 12;</code>
     */
    kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getVolKztOrBuilder();

    /**
     * <pre>
     * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_usd = 13;</code>
     */
    boolean hasVolUsd();
    /**
     * <pre>
     * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_usd = 13;</code>
     */
    kz.kase.iris.model.IrisApiBase.Decimal getVolUsd();
    /**
     * <pre>
     * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_usd = 13;</code>
     */
    kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getVolUsdOrBuilder();

    /**
     * <pre>
     * Курс принятый на &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal usd_rate = 14;</code>
     */
    boolean hasUsdRate();
    /**
     * <pre>
     * Курс принятый на &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal usd_rate = 14;</code>
     */
    kz.kase.iris.model.IrisApiBase.Decimal getUsdRate();
    /**
     * <pre>
     * Курс принятый на &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal usd_rate = 14;</code>
     */
    kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getUsdRateOrBuilder();

    /**
     * <pre>
     * Доходность.
     * </pre>
     *
     * <code>.IRIS.Decimal yield = 15;</code>
     */
    boolean hasYield();
    /**
     * <pre>
     * Доходность.
     * </pre>
     *
     * <code>.IRIS.Decimal yield = 15;</code>
     */
    kz.kase.iris.model.IrisApiBase.Decimal getYield();
    /**
     * <pre>
     * Доходность.
     * </pre>
     *
     * <code>.IRIS.Decimal yield = 15;</code>
     */
    kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getYieldOrBuilder();

    /**
     * <pre>
     * Первичный ключ статуса сделки в ИС IRIS.
     * </pre>
     *
     * <code>int32 state_id = 16;</code>
     */
    int getStateId();

    /**
     * <pre>
     * Тип сделки.
     * </pre>
     *
     * <code>.IRIS.DealType deal_type = 17;</code>
     */
    int getDealTypeValue();
    /**
     * <pre>
     * Тип сделки.
     * </pre>
     *
     * <code>.IRIS.DealType deal_type = 17;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealType getDealType();

    /**
     * <pre>
     * Описание типа сделки.
     * </pre>
     *
     * <code>string deal_type_desc = 18;</code>
     */
    java.lang.String getDealTypeDesc();
    /**
     * <pre>
     * Описание типа сделки.
     * </pre>
     *
     * <code>string deal_type_desc = 18;</code>
     */
    com.google.protobuf.ByteString
        getDealTypeDescBytes();

    /**
     * <pre>
     * Сектор рынка.
     * </pre>
     *
     * <code>.IRIS.MarketSector market_sector = 19;</code>
     */
    int getMarketSectorValue();
    /**
     * <pre>
     * Сектор рынка.
     * </pre>
     *
     * <code>.IRIS.MarketSector market_sector = 19;</code>
     */
    kz.kase.iris.model.IrisApiDeals.MarketSector getMarketSector();

    /**
     * <pre>
     * Описание сектора рынка.
     * </pre>
     *
     * <code>string market_sector_desc = 20;</code>
     */
    java.lang.String getMarketSectorDesc();
    /**
     * <pre>
     * Описание сектора рынка.
     * </pre>
     *
     * <code>string market_sector_desc = 20;</code>
     */
    com.google.protobuf.ByteString
        getMarketSectorDescBytes();

    /**
     * <pre>
     * Внутренняя версия записи в IRIS.
     * </pre>
     *
     * <code>int64 version = 21;</code>
     */
    long getVersion();
  }
  /**
   * <pre>
   * Сделка 
   * </pre>
   *
   * Protobuf type {@code IRIS.Deal}
   */
  public  static final class Deal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.Deal)
      DealOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Deal.newBuilder() to construct.
    private Deal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Deal() {
      dealId_ = 0L;
      instrumentId_ = 0;
      secCode_ = "";
      actualSin_ = "";
      buyerId_ = 0;
      sellerId_ = 0;
      priceUnit_ = "";
      volume_ = 0L;
      stateId_ = 0;
      dealType_ = 0;
      dealTypeDesc_ = "";
      marketSector_ = 0;
      marketSectorDesc_ = "";
      version_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Deal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              dealId_ = input.readInt64();
              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiBase.DateTime.Builder subBuilder = null;
              if (dealTime_ != null) {
                subBuilder = dealTime_.toBuilder();
              }
              dealTime_ = input.readMessage(kz.kase.iris.model.IrisApiBase.DateTime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dealTime_);
                dealTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              instrumentId_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              secCode_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              actualSin_ = s;
              break;
            }
            case 48: {

              buyerId_ = input.readInt32();
              break;
            }
            case 56: {

              sellerId_ = input.readInt32();
              break;
            }
            case 66: {
              kz.kase.iris.model.IrisApiBase.Decimal.Builder subBuilder = null;
              if (price_ != null) {
                subBuilder = price_.toBuilder();
              }
              price_ = input.readMessage(kz.kase.iris.model.IrisApiBase.Decimal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(price_);
                price_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              priceUnit_ = s;
              break;
            }
            case 82: {
              kz.kase.iris.model.IrisApiBase.Decimal.Builder subBuilder = null;
              if (dirtyPrice_ != null) {
                subBuilder = dirtyPrice_.toBuilder();
              }
              dirtyPrice_ = input.readMessage(kz.kase.iris.model.IrisApiBase.Decimal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dirtyPrice_);
                dirtyPrice_ = subBuilder.buildPartial();
              }

              break;
            }
            case 88: {

              volume_ = input.readInt64();
              break;
            }
            case 98: {
              kz.kase.iris.model.IrisApiBase.Decimal.Builder subBuilder = null;
              if (volKzt_ != null) {
                subBuilder = volKzt_.toBuilder();
              }
              volKzt_ = input.readMessage(kz.kase.iris.model.IrisApiBase.Decimal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(volKzt_);
                volKzt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              kz.kase.iris.model.IrisApiBase.Decimal.Builder subBuilder = null;
              if (volUsd_ != null) {
                subBuilder = volUsd_.toBuilder();
              }
              volUsd_ = input.readMessage(kz.kase.iris.model.IrisApiBase.Decimal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(volUsd_);
                volUsd_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              kz.kase.iris.model.IrisApiBase.Decimal.Builder subBuilder = null;
              if (usdRate_ != null) {
                subBuilder = usdRate_.toBuilder();
              }
              usdRate_ = input.readMessage(kz.kase.iris.model.IrisApiBase.Decimal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(usdRate_);
                usdRate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              kz.kase.iris.model.IrisApiBase.Decimal.Builder subBuilder = null;
              if (yield_ != null) {
                subBuilder = yield_.toBuilder();
              }
              yield_ = input.readMessage(kz.kase.iris.model.IrisApiBase.Decimal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(yield_);
                yield_ = subBuilder.buildPartial();
              }

              break;
            }
            case 128: {

              stateId_ = input.readInt32();
              break;
            }
            case 136: {
              int rawValue = input.readEnum();

              dealType_ = rawValue;
              break;
            }
            case 146: {
              java.lang.String s = input.readStringRequireUtf8();

              dealTypeDesc_ = s;
              break;
            }
            case 152: {
              int rawValue = input.readEnum();

              marketSector_ = rawValue;
              break;
            }
            case 162: {
              java.lang.String s = input.readStringRequireUtf8();

              marketSectorDesc_ = s;
              break;
            }
            case 168: {

              version_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_Deal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_Deal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.Deal.class, kz.kase.iris.model.IrisApiDeals.Deal.Builder.class);
    }

    public static final int DEAL_ID_FIELD_NUMBER = 1;
    private long dealId_;
    /**
     * <pre>
     * Первичный ключ записи сделки в ИС IRIS.
     * </pre>
     *
     * <code>int64 deal_id = 1;</code>
     */
    public long getDealId() {
      return dealId_;
    }

    public static final int DEAL_TIME_FIELD_NUMBER = 2;
    private kz.kase.iris.model.IrisApiBase.DateTime dealTime_;
    /**
     * <pre>
     * Время заключения сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    public boolean hasDealTime() {
      return dealTime_ != null;
    }
    /**
     * <pre>
     * Время заключения сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DateTime getDealTime() {
      return dealTime_ == null ? kz.kase.iris.model.IrisApiBase.DateTime.getDefaultInstance() : dealTime_;
    }
    /**
     * <pre>
     * Время заключения сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder getDealTimeOrBuilder() {
      return getDealTime();
    }

    public static final int INSTRUMENT_ID_FIELD_NUMBER = 3;
    private int instrumentId_;
    /**
     * <pre>
     * Первичный ключ записи инструмента в ИС IRIS.
     * </pre>
     *
     * <code>int32 instrument_id = 3;</code>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    public static final int SEC_CODE_FIELD_NUMBER = 4;
    private volatile java.lang.Object secCode_;
    /**
     * <pre>
     * Код инструмента.
     * </pre>
     *
     * <code>string sec_code = 4;</code>
     */
    public java.lang.String getSecCode() {
      java.lang.Object ref = secCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        secCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Код инструмента.
     * </pre>
     *
     * <code>string sec_code = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSecCodeBytes() {
      java.lang.Object ref = secCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        secCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTUAL_SIN_FIELD_NUMBER = 5;
    private volatile java.lang.Object actualSin_;
    /**
     * <pre>
     * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
     * </pre>
     *
     * <code>string actual_sin = 5;</code>
     */
    public java.lang.String getActualSin() {
      java.lang.Object ref = actualSin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        actualSin_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
     * </pre>
     *
     * <code>string actual_sin = 5;</code>
     */
    public com.google.protobuf.ByteString
        getActualSinBytes() {
      java.lang.Object ref = actualSin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        actualSin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BUYER_ID_FIELD_NUMBER = 6;
    private int buyerId_;
    /**
     * <pre>
     * Первичный ключ записи контрагента-покупателя в ИС IRIS.
     * </pre>
     *
     * <code>int32 buyer_id = 6;</code>
     */
    public int getBuyerId() {
      return buyerId_;
    }

    public static final int SELLER_ID_FIELD_NUMBER = 7;
    private int sellerId_;
    /**
     * <pre>
     * Первичный ключ записи контрагента-продавца в ИС IRIS.
     * </pre>
     *
     * <code>int32 seller_id = 7;</code>
     */
    public int getSellerId() {
      return sellerId_;
    }

    public static final int PRICE_FIELD_NUMBER = 8;
    private kz.kase.iris.model.IrisApiBase.Decimal price_;
    /**
     * <pre>
     * Цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 8;</code>
     */
    public boolean hasPrice() {
      return price_ != null;
    }
    /**
     * <pre>
     * Цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 8;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Decimal getPrice() {
      return price_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : price_;
    }
    /**
     * <pre>
     * Цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 8;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getPriceOrBuilder() {
      return getPrice();
    }

    public static final int PRICE_UNIT_FIELD_NUMBER = 9;
    private volatile java.lang.Object priceUnit_;
    /**
     * <pre>
     * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
     * </pre>
     *
     * <code>string price_unit = 9;</code>
     */
    public java.lang.String getPriceUnit() {
      java.lang.Object ref = priceUnit_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        priceUnit_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
     * </pre>
     *
     * <code>string price_unit = 9;</code>
     */
    public com.google.protobuf.ByteString
        getPriceUnitBytes() {
      java.lang.Object ref = priceUnit_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        priceUnit_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIRTY_PRICE_FIELD_NUMBER = 10;
    private kz.kase.iris.model.IrisApiBase.Decimal dirtyPrice_;
    /**
     * <pre>
     * Грязная цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal dirty_price = 10;</code>
     */
    public boolean hasDirtyPrice() {
      return dirtyPrice_ != null;
    }
    /**
     * <pre>
     * Грязная цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal dirty_price = 10;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Decimal getDirtyPrice() {
      return dirtyPrice_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : dirtyPrice_;
    }
    /**
     * <pre>
     * Грязная цена сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal dirty_price = 10;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getDirtyPriceOrBuilder() {
      return getDirtyPrice();
    }

    public static final int VOLUME_FIELD_NUMBER = 11;
    private long volume_;
    /**
     * <pre>
     * Объем сдеки.
     * </pre>
     *
     * <code>int64 volume = 11;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int VOL_KZT_FIELD_NUMBER = 12;
    private kz.kase.iris.model.IrisApiBase.Decimal volKzt_;
    /**
     * <pre>
     * Объем сделки в тенге.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_kzt = 12;</code>
     */
    public boolean hasVolKzt() {
      return volKzt_ != null;
    }
    /**
     * <pre>
     * Объем сделки в тенге.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_kzt = 12;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Decimal getVolKzt() {
      return volKzt_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : volKzt_;
    }
    /**
     * <pre>
     * Объем сделки в тенге.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_kzt = 12;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getVolKztOrBuilder() {
      return getVolKzt();
    }

    public static final int VOL_USD_FIELD_NUMBER = 13;
    private kz.kase.iris.model.IrisApiBase.Decimal volUsd_;
    /**
     * <pre>
     * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_usd = 13;</code>
     */
    public boolean hasVolUsd() {
      return volUsd_ != null;
    }
    /**
     * <pre>
     * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_usd = 13;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Decimal getVolUsd() {
      return volUsd_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : volUsd_;
    }
    /**
     * <pre>
     * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal vol_usd = 13;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getVolUsdOrBuilder() {
      return getVolUsd();
    }

    public static final int USD_RATE_FIELD_NUMBER = 14;
    private kz.kase.iris.model.IrisApiBase.Decimal usdRate_;
    /**
     * <pre>
     * Курс принятый на &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal usd_rate = 14;</code>
     */
    public boolean hasUsdRate() {
      return usdRate_ != null;
    }
    /**
     * <pre>
     * Курс принятый на &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal usd_rate = 14;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Decimal getUsdRate() {
      return usdRate_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : usdRate_;
    }
    /**
     * <pre>
     * Курс принятый на &amp;KASE_Q; на день совершения сделки.
     * </pre>
     *
     * <code>.IRIS.Decimal usd_rate = 14;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getUsdRateOrBuilder() {
      return getUsdRate();
    }

    public static final int YIELD_FIELD_NUMBER = 15;
    private kz.kase.iris.model.IrisApiBase.Decimal yield_;
    /**
     * <pre>
     * Доходность.
     * </pre>
     *
     * <code>.IRIS.Decimal yield = 15;</code>
     */
    public boolean hasYield() {
      return yield_ != null;
    }
    /**
     * <pre>
     * Доходность.
     * </pre>
     *
     * <code>.IRIS.Decimal yield = 15;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Decimal getYield() {
      return yield_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : yield_;
    }
    /**
     * <pre>
     * Доходность.
     * </pre>
     *
     * <code>.IRIS.Decimal yield = 15;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getYieldOrBuilder() {
      return getYield();
    }

    public static final int STATE_ID_FIELD_NUMBER = 16;
    private int stateId_;
    /**
     * <pre>
     * Первичный ключ статуса сделки в ИС IRIS.
     * </pre>
     *
     * <code>int32 state_id = 16;</code>
     */
    public int getStateId() {
      return stateId_;
    }

    public static final int DEAL_TYPE_FIELD_NUMBER = 17;
    private int dealType_;
    /**
     * <pre>
     * Тип сделки.
     * </pre>
     *
     * <code>.IRIS.DealType deal_type = 17;</code>
     */
    public int getDealTypeValue() {
      return dealType_;
    }
    /**
     * <pre>
     * Тип сделки.
     * </pre>
     *
     * <code>.IRIS.DealType deal_type = 17;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealType getDealType() {
      @SuppressWarnings("deprecation")
      kz.kase.iris.model.IrisApiDeals.DealType result = kz.kase.iris.model.IrisApiDeals.DealType.valueOf(dealType_);
      return result == null ? kz.kase.iris.model.IrisApiDeals.DealType.UNRECOGNIZED : result;
    }

    public static final int DEAL_TYPE_DESC_FIELD_NUMBER = 18;
    private volatile java.lang.Object dealTypeDesc_;
    /**
     * <pre>
     * Описание типа сделки.
     * </pre>
     *
     * <code>string deal_type_desc = 18;</code>
     */
    public java.lang.String getDealTypeDesc() {
      java.lang.Object ref = dealTypeDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dealTypeDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Описание типа сделки.
     * </pre>
     *
     * <code>string deal_type_desc = 18;</code>
     */
    public com.google.protobuf.ByteString
        getDealTypeDescBytes() {
      java.lang.Object ref = dealTypeDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dealTypeDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MARKET_SECTOR_FIELD_NUMBER = 19;
    private int marketSector_;
    /**
     * <pre>
     * Сектор рынка.
     * </pre>
     *
     * <code>.IRIS.MarketSector market_sector = 19;</code>
     */
    public int getMarketSectorValue() {
      return marketSector_;
    }
    /**
     * <pre>
     * Сектор рынка.
     * </pre>
     *
     * <code>.IRIS.MarketSector market_sector = 19;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.MarketSector getMarketSector() {
      @SuppressWarnings("deprecation")
      kz.kase.iris.model.IrisApiDeals.MarketSector result = kz.kase.iris.model.IrisApiDeals.MarketSector.valueOf(marketSector_);
      return result == null ? kz.kase.iris.model.IrisApiDeals.MarketSector.UNRECOGNIZED : result;
    }

    public static final int MARKET_SECTOR_DESC_FIELD_NUMBER = 20;
    private volatile java.lang.Object marketSectorDesc_;
    /**
     * <pre>
     * Описание сектора рынка.
     * </pre>
     *
     * <code>string market_sector_desc = 20;</code>
     */
    public java.lang.String getMarketSectorDesc() {
      java.lang.Object ref = marketSectorDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        marketSectorDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Описание сектора рынка.
     * </pre>
     *
     * <code>string market_sector_desc = 20;</code>
     */
    public com.google.protobuf.ByteString
        getMarketSectorDescBytes() {
      java.lang.Object ref = marketSectorDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        marketSectorDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 21;
    private long version_;
    /**
     * <pre>
     * Внутренняя версия записи в IRIS.
     * </pre>
     *
     * <code>int64 version = 21;</code>
     */
    public long getVersion() {
      return version_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dealId_ != 0L) {
        output.writeInt64(1, dealId_);
      }
      if (dealTime_ != null) {
        output.writeMessage(2, getDealTime());
      }
      if (instrumentId_ != 0) {
        output.writeInt32(3, instrumentId_);
      }
      if (!getSecCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, secCode_);
      }
      if (!getActualSinBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, actualSin_);
      }
      if (buyerId_ != 0) {
        output.writeInt32(6, buyerId_);
      }
      if (sellerId_ != 0) {
        output.writeInt32(7, sellerId_);
      }
      if (price_ != null) {
        output.writeMessage(8, getPrice());
      }
      if (!getPriceUnitBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, priceUnit_);
      }
      if (dirtyPrice_ != null) {
        output.writeMessage(10, getDirtyPrice());
      }
      if (volume_ != 0L) {
        output.writeInt64(11, volume_);
      }
      if (volKzt_ != null) {
        output.writeMessage(12, getVolKzt());
      }
      if (volUsd_ != null) {
        output.writeMessage(13, getVolUsd());
      }
      if (usdRate_ != null) {
        output.writeMessage(14, getUsdRate());
      }
      if (yield_ != null) {
        output.writeMessage(15, getYield());
      }
      if (stateId_ != 0) {
        output.writeInt32(16, stateId_);
      }
      if (dealType_ != kz.kase.iris.model.IrisApiDeals.DealType.TRADE.getNumber()) {
        output.writeEnum(17, dealType_);
      }
      if (!getDealTypeDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, dealTypeDesc_);
      }
      if (marketSector_ != kz.kase.iris.model.IrisApiDeals.MarketSector.PRIMARY.getNumber()) {
        output.writeEnum(19, marketSector_);
      }
      if (!getMarketSectorDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, marketSectorDesc_);
      }
      if (version_ != 0L) {
        output.writeInt64(21, version_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dealId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, dealId_);
      }
      if (dealTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDealTime());
      }
      if (instrumentId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, instrumentId_);
      }
      if (!getSecCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, secCode_);
      }
      if (!getActualSinBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, actualSin_);
      }
      if (buyerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, buyerId_);
      }
      if (sellerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sellerId_);
      }
      if (price_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getPrice());
      }
      if (!getPriceUnitBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, priceUnit_);
      }
      if (dirtyPrice_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getDirtyPrice());
      }
      if (volume_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, volume_);
      }
      if (volKzt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getVolKzt());
      }
      if (volUsd_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getVolUsd());
      }
      if (usdRate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getUsdRate());
      }
      if (yield_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getYield());
      }
      if (stateId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, stateId_);
      }
      if (dealType_ != kz.kase.iris.model.IrisApiDeals.DealType.TRADE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, dealType_);
      }
      if (!getDealTypeDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, dealTypeDesc_);
      }
      if (marketSector_ != kz.kase.iris.model.IrisApiDeals.MarketSector.PRIMARY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, marketSector_);
      }
      if (!getMarketSectorDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, marketSectorDesc_);
      }
      if (version_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, version_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.Deal)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.Deal other = (kz.kase.iris.model.IrisApiDeals.Deal) obj;

      boolean result = true;
      result = result && (getDealId()
          == other.getDealId());
      result = result && (hasDealTime() == other.hasDealTime());
      if (hasDealTime()) {
        result = result && getDealTime()
            .equals(other.getDealTime());
      }
      result = result && (getInstrumentId()
          == other.getInstrumentId());
      result = result && getSecCode()
          .equals(other.getSecCode());
      result = result && getActualSin()
          .equals(other.getActualSin());
      result = result && (getBuyerId()
          == other.getBuyerId());
      result = result && (getSellerId()
          == other.getSellerId());
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && getPrice()
            .equals(other.getPrice());
      }
      result = result && getPriceUnit()
          .equals(other.getPriceUnit());
      result = result && (hasDirtyPrice() == other.hasDirtyPrice());
      if (hasDirtyPrice()) {
        result = result && getDirtyPrice()
            .equals(other.getDirtyPrice());
      }
      result = result && (getVolume()
          == other.getVolume());
      result = result && (hasVolKzt() == other.hasVolKzt());
      if (hasVolKzt()) {
        result = result && getVolKzt()
            .equals(other.getVolKzt());
      }
      result = result && (hasVolUsd() == other.hasVolUsd());
      if (hasVolUsd()) {
        result = result && getVolUsd()
            .equals(other.getVolUsd());
      }
      result = result && (hasUsdRate() == other.hasUsdRate());
      if (hasUsdRate()) {
        result = result && getUsdRate()
            .equals(other.getUsdRate());
      }
      result = result && (hasYield() == other.hasYield());
      if (hasYield()) {
        result = result && getYield()
            .equals(other.getYield());
      }
      result = result && (getStateId()
          == other.getStateId());
      result = result && dealType_ == other.dealType_;
      result = result && getDealTypeDesc()
          .equals(other.getDealTypeDesc());
      result = result && marketSector_ == other.marketSector_;
      result = result && getMarketSectorDesc()
          .equals(other.getMarketSectorDesc());
      result = result && (getVersion()
          == other.getVersion());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEAL_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDealId());
      if (hasDealTime()) {
        hash = (37 * hash) + DEAL_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getDealTime().hashCode();
      }
      hash = (37 * hash) + INSTRUMENT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getInstrumentId();
      hash = (37 * hash) + SEC_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getSecCode().hashCode();
      hash = (37 * hash) + ACTUAL_SIN_FIELD_NUMBER;
      hash = (53 * hash) + getActualSin().hashCode();
      hash = (37 * hash) + BUYER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBuyerId();
      hash = (37 * hash) + SELLER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSellerId();
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + getPrice().hashCode();
      }
      hash = (37 * hash) + PRICE_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + getPriceUnit().hashCode();
      if (hasDirtyPrice()) {
        hash = (37 * hash) + DIRTY_PRICE_FIELD_NUMBER;
        hash = (53 * hash) + getDirtyPrice().hashCode();
      }
      hash = (37 * hash) + VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVolume());
      if (hasVolKzt()) {
        hash = (37 * hash) + VOL_KZT_FIELD_NUMBER;
        hash = (53 * hash) + getVolKzt().hashCode();
      }
      if (hasVolUsd()) {
        hash = (37 * hash) + VOL_USD_FIELD_NUMBER;
        hash = (53 * hash) + getVolUsd().hashCode();
      }
      if (hasUsdRate()) {
        hash = (37 * hash) + USD_RATE_FIELD_NUMBER;
        hash = (53 * hash) + getUsdRate().hashCode();
      }
      if (hasYield()) {
        hash = (37 * hash) + YIELD_FIELD_NUMBER;
        hash = (53 * hash) + getYield().hashCode();
      }
      hash = (37 * hash) + STATE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getStateId();
      hash = (37 * hash) + DEAL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + dealType_;
      hash = (37 * hash) + DEAL_TYPE_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getDealTypeDesc().hashCode();
      hash = (37 * hash) + MARKET_SECTOR_FIELD_NUMBER;
      hash = (53 * hash) + marketSector_;
      hash = (37 * hash) + MARKET_SECTOR_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getMarketSectorDesc().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersion());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.Deal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.Deal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Сделка 
     * </pre>
     *
     * Protobuf type {@code IRIS.Deal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.Deal)
        kz.kase.iris.model.IrisApiDeals.DealOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_Deal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_Deal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.Deal.class, kz.kase.iris.model.IrisApiDeals.Deal.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.Deal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dealId_ = 0L;

        if (dealTimeBuilder_ == null) {
          dealTime_ = null;
        } else {
          dealTime_ = null;
          dealTimeBuilder_ = null;
        }
        instrumentId_ = 0;

        secCode_ = "";

        actualSin_ = "";

        buyerId_ = 0;

        sellerId_ = 0;

        if (priceBuilder_ == null) {
          price_ = null;
        } else {
          price_ = null;
          priceBuilder_ = null;
        }
        priceUnit_ = "";

        if (dirtyPriceBuilder_ == null) {
          dirtyPrice_ = null;
        } else {
          dirtyPrice_ = null;
          dirtyPriceBuilder_ = null;
        }
        volume_ = 0L;

        if (volKztBuilder_ == null) {
          volKzt_ = null;
        } else {
          volKzt_ = null;
          volKztBuilder_ = null;
        }
        if (volUsdBuilder_ == null) {
          volUsd_ = null;
        } else {
          volUsd_ = null;
          volUsdBuilder_ = null;
        }
        if (usdRateBuilder_ == null) {
          usdRate_ = null;
        } else {
          usdRate_ = null;
          usdRateBuilder_ = null;
        }
        if (yieldBuilder_ == null) {
          yield_ = null;
        } else {
          yield_ = null;
          yieldBuilder_ = null;
        }
        stateId_ = 0;

        dealType_ = 0;

        dealTypeDesc_ = "";

        marketSector_ = 0;

        marketSectorDesc_ = "";

        version_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_Deal_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.Deal getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.Deal.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.Deal build() {
        kz.kase.iris.model.IrisApiDeals.Deal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.Deal buildPartial() {
        kz.kase.iris.model.IrisApiDeals.Deal result = new kz.kase.iris.model.IrisApiDeals.Deal(this);
        result.dealId_ = dealId_;
        if (dealTimeBuilder_ == null) {
          result.dealTime_ = dealTime_;
        } else {
          result.dealTime_ = dealTimeBuilder_.build();
        }
        result.instrumentId_ = instrumentId_;
        result.secCode_ = secCode_;
        result.actualSin_ = actualSin_;
        result.buyerId_ = buyerId_;
        result.sellerId_ = sellerId_;
        if (priceBuilder_ == null) {
          result.price_ = price_;
        } else {
          result.price_ = priceBuilder_.build();
        }
        result.priceUnit_ = priceUnit_;
        if (dirtyPriceBuilder_ == null) {
          result.dirtyPrice_ = dirtyPrice_;
        } else {
          result.dirtyPrice_ = dirtyPriceBuilder_.build();
        }
        result.volume_ = volume_;
        if (volKztBuilder_ == null) {
          result.volKzt_ = volKzt_;
        } else {
          result.volKzt_ = volKztBuilder_.build();
        }
        if (volUsdBuilder_ == null) {
          result.volUsd_ = volUsd_;
        } else {
          result.volUsd_ = volUsdBuilder_.build();
        }
        if (usdRateBuilder_ == null) {
          result.usdRate_ = usdRate_;
        } else {
          result.usdRate_ = usdRateBuilder_.build();
        }
        if (yieldBuilder_ == null) {
          result.yield_ = yield_;
        } else {
          result.yield_ = yieldBuilder_.build();
        }
        result.stateId_ = stateId_;
        result.dealType_ = dealType_;
        result.dealTypeDesc_ = dealTypeDesc_;
        result.marketSector_ = marketSector_;
        result.marketSectorDesc_ = marketSectorDesc_;
        result.version_ = version_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.Deal) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.Deal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.Deal other) {
        if (other == kz.kase.iris.model.IrisApiDeals.Deal.getDefaultInstance()) return this;
        if (other.getDealId() != 0L) {
          setDealId(other.getDealId());
        }
        if (other.hasDealTime()) {
          mergeDealTime(other.getDealTime());
        }
        if (other.getInstrumentId() != 0) {
          setInstrumentId(other.getInstrumentId());
        }
        if (!other.getSecCode().isEmpty()) {
          secCode_ = other.secCode_;
          onChanged();
        }
        if (!other.getActualSin().isEmpty()) {
          actualSin_ = other.actualSin_;
          onChanged();
        }
        if (other.getBuyerId() != 0) {
          setBuyerId(other.getBuyerId());
        }
        if (other.getSellerId() != 0) {
          setSellerId(other.getSellerId());
        }
        if (other.hasPrice()) {
          mergePrice(other.getPrice());
        }
        if (!other.getPriceUnit().isEmpty()) {
          priceUnit_ = other.priceUnit_;
          onChanged();
        }
        if (other.hasDirtyPrice()) {
          mergeDirtyPrice(other.getDirtyPrice());
        }
        if (other.getVolume() != 0L) {
          setVolume(other.getVolume());
        }
        if (other.hasVolKzt()) {
          mergeVolKzt(other.getVolKzt());
        }
        if (other.hasVolUsd()) {
          mergeVolUsd(other.getVolUsd());
        }
        if (other.hasUsdRate()) {
          mergeUsdRate(other.getUsdRate());
        }
        if (other.hasYield()) {
          mergeYield(other.getYield());
        }
        if (other.getStateId() != 0) {
          setStateId(other.getStateId());
        }
        if (other.dealType_ != 0) {
          setDealTypeValue(other.getDealTypeValue());
        }
        if (!other.getDealTypeDesc().isEmpty()) {
          dealTypeDesc_ = other.dealTypeDesc_;
          onChanged();
        }
        if (other.marketSector_ != 0) {
          setMarketSectorValue(other.getMarketSectorValue());
        }
        if (!other.getMarketSectorDesc().isEmpty()) {
          marketSectorDesc_ = other.marketSectorDesc_;
          onChanged();
        }
        if (other.getVersion() != 0L) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.Deal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.Deal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long dealId_ ;
      /**
       * <pre>
       * Первичный ключ записи сделки в ИС IRIS.
       * </pre>
       *
       * <code>int64 deal_id = 1;</code>
       */
      public long getDealId() {
        return dealId_;
      }
      /**
       * <pre>
       * Первичный ключ записи сделки в ИС IRIS.
       * </pre>
       *
       * <code>int64 deal_id = 1;</code>
       */
      public Builder setDealId(long value) {
        
        dealId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Первичный ключ записи сделки в ИС IRIS.
       * </pre>
       *
       * <code>int64 deal_id = 1;</code>
       */
      public Builder clearDealId() {
        
        dealId_ = 0L;
        onChanged();
        return this;
      }

      private kz.kase.iris.model.IrisApiBase.DateTime dealTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.DateTime, kz.kase.iris.model.IrisApiBase.DateTime.Builder, kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder> dealTimeBuilder_;
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public boolean hasDealTime() {
        return dealTimeBuilder_ != null || dealTime_ != null;
      }
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DateTime getDealTime() {
        if (dealTimeBuilder_ == null) {
          return dealTime_ == null ? kz.kase.iris.model.IrisApiBase.DateTime.getDefaultInstance() : dealTime_;
        } else {
          return dealTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public Builder setDealTime(kz.kase.iris.model.IrisApiBase.DateTime value) {
        if (dealTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dealTime_ = value;
          onChanged();
        } else {
          dealTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public Builder setDealTime(
          kz.kase.iris.model.IrisApiBase.DateTime.Builder builderForValue) {
        if (dealTimeBuilder_ == null) {
          dealTime_ = builderForValue.build();
          onChanged();
        } else {
          dealTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public Builder mergeDealTime(kz.kase.iris.model.IrisApiBase.DateTime value) {
        if (dealTimeBuilder_ == null) {
          if (dealTime_ != null) {
            dealTime_ =
              kz.kase.iris.model.IrisApiBase.DateTime.newBuilder(dealTime_).mergeFrom(value).buildPartial();
          } else {
            dealTime_ = value;
          }
          onChanged();
        } else {
          dealTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public Builder clearDealTime() {
        if (dealTimeBuilder_ == null) {
          dealTime_ = null;
          onChanged();
        } else {
          dealTime_ = null;
          dealTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DateTime.Builder getDealTimeBuilder() {
        
        onChanged();
        return getDealTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder getDealTimeOrBuilder() {
        if (dealTimeBuilder_ != null) {
          return dealTimeBuilder_.getMessageOrBuilder();
        } else {
          return dealTime_ == null ?
              kz.kase.iris.model.IrisApiBase.DateTime.getDefaultInstance() : dealTime_;
        }
      }
      /**
       * <pre>
       * Время заключения сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.DateTime, kz.kase.iris.model.IrisApiBase.DateTime.Builder, kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder> 
          getDealTimeFieldBuilder() {
        if (dealTimeBuilder_ == null) {
          dealTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.DateTime, kz.kase.iris.model.IrisApiBase.DateTime.Builder, kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder>(
                  getDealTime(),
                  getParentForChildren(),
                  isClean());
          dealTime_ = null;
        }
        return dealTimeBuilder_;
      }

      private int instrumentId_ ;
      /**
       * <pre>
       * Первичный ключ записи инструмента в ИС IRIS.
       * </pre>
       *
       * <code>int32 instrument_id = 3;</code>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <pre>
       * Первичный ключ записи инструмента в ИС IRIS.
       * </pre>
       *
       * <code>int32 instrument_id = 3;</code>
       */
      public Builder setInstrumentId(int value) {
        
        instrumentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Первичный ключ записи инструмента в ИС IRIS.
       * </pre>
       *
       * <code>int32 instrument_id = 3;</code>
       */
      public Builder clearInstrumentId() {
        
        instrumentId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object secCode_ = "";
      /**
       * <pre>
       * Код инструмента.
       * </pre>
       *
       * <code>string sec_code = 4;</code>
       */
      public java.lang.String getSecCode() {
        java.lang.Object ref = secCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          secCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Код инструмента.
       * </pre>
       *
       * <code>string sec_code = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSecCodeBytes() {
        java.lang.Object ref = secCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          secCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Код инструмента.
       * </pre>
       *
       * <code>string sec_code = 4;</code>
       */
      public Builder setSecCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        secCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Код инструмента.
       * </pre>
       *
       * <code>string sec_code = 4;</code>
       */
      public Builder clearSecCode() {
        
        secCode_ = getDefaultInstance().getSecCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Код инструмента.
       * </pre>
       *
       * <code>string sec_code = 4;</code>
       */
      public Builder setSecCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        secCode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object actualSin_ = "";
      /**
       * <pre>
       * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
       * </pre>
       *
       * <code>string actual_sin = 5;</code>
       */
      public java.lang.String getActualSin() {
        java.lang.Object ref = actualSin_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          actualSin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
       * </pre>
       *
       * <code>string actual_sin = 5;</code>
       */
      public com.google.protobuf.ByteString
          getActualSinBytes() {
        java.lang.Object ref = actualSin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          actualSin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
       * </pre>
       *
       * <code>string actual_sin = 5;</code>
       */
      public Builder setActualSin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        actualSin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
       * </pre>
       *
       * <code>string actual_sin = 5;</code>
       */
      public Builder clearActualSin() {
        
        actualSin_ = getDefaultInstance().getActualSin();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Действующий идентификационный номер ценной бумаги (НИН, ISIN и т.п.)
       * </pre>
       *
       * <code>string actual_sin = 5;</code>
       */
      public Builder setActualSinBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        actualSin_ = value;
        onChanged();
        return this;
      }

      private int buyerId_ ;
      /**
       * <pre>
       * Первичный ключ записи контрагента-покупателя в ИС IRIS.
       * </pre>
       *
       * <code>int32 buyer_id = 6;</code>
       */
      public int getBuyerId() {
        return buyerId_;
      }
      /**
       * <pre>
       * Первичный ключ записи контрагента-покупателя в ИС IRIS.
       * </pre>
       *
       * <code>int32 buyer_id = 6;</code>
       */
      public Builder setBuyerId(int value) {
        
        buyerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Первичный ключ записи контрагента-покупателя в ИС IRIS.
       * </pre>
       *
       * <code>int32 buyer_id = 6;</code>
       */
      public Builder clearBuyerId() {
        
        buyerId_ = 0;
        onChanged();
        return this;
      }

      private int sellerId_ ;
      /**
       * <pre>
       * Первичный ключ записи контрагента-продавца в ИС IRIS.
       * </pre>
       *
       * <code>int32 seller_id = 7;</code>
       */
      public int getSellerId() {
        return sellerId_;
      }
      /**
       * <pre>
       * Первичный ключ записи контрагента-продавца в ИС IRIS.
       * </pre>
       *
       * <code>int32 seller_id = 7;</code>
       */
      public Builder setSellerId(int value) {
        
        sellerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Первичный ключ записи контрагента-продавца в ИС IRIS.
       * </pre>
       *
       * <code>int32 seller_id = 7;</code>
       */
      public Builder clearSellerId() {
        
        sellerId_ = 0;
        onChanged();
        return this;
      }

      private kz.kase.iris.model.IrisApiBase.Decimal price_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> priceBuilder_;
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      public boolean hasPrice() {
        return priceBuilder_ != null || price_ != null;
      }
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal getPrice() {
        if (priceBuilder_ == null) {
          return price_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : price_;
        } else {
          return priceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      public Builder setPrice(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (priceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          price_ = value;
          onChanged();
        } else {
          priceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      public Builder setPrice(
          kz.kase.iris.model.IrisApiBase.Decimal.Builder builderForValue) {
        if (priceBuilder_ == null) {
          price_ = builderForValue.build();
          onChanged();
        } else {
          priceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      public Builder mergePrice(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (priceBuilder_ == null) {
          if (price_ != null) {
            price_ =
              kz.kase.iris.model.IrisApiBase.Decimal.newBuilder(price_).mergeFrom(value).buildPartial();
          } else {
            price_ = value;
          }
          onChanged();
        } else {
          priceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      public Builder clearPrice() {
        if (priceBuilder_ == null) {
          price_ = null;
          onChanged();
        } else {
          price_ = null;
          priceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal.Builder getPriceBuilder() {
        
        onChanged();
        return getPriceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getPriceOrBuilder() {
        if (priceBuilder_ != null) {
          return priceBuilder_.getMessageOrBuilder();
        } else {
          return price_ == null ?
              kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : price_;
        }
      }
      /**
       * <pre>
       * Цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> 
          getPriceFieldBuilder() {
        if (priceBuilder_ == null) {
          priceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder>(
                  getPrice(),
                  getParentForChildren(),
                  isClean());
          price_ = null;
        }
        return priceBuilder_;
      }

      private java.lang.Object priceUnit_ = "";
      /**
       * <pre>
       * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
       * </pre>
       *
       * <code>string price_unit = 9;</code>
       */
      public java.lang.String getPriceUnit() {
        java.lang.Object ref = priceUnit_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          priceUnit_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
       * </pre>
       *
       * <code>string price_unit = 9;</code>
       */
      public com.google.protobuf.ByteString
          getPriceUnitBytes() {
        java.lang.Object ref = priceUnit_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          priceUnit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
       * </pre>
       *
       * <code>string price_unit = 9;</code>
       */
      public Builder setPriceUnit(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        priceUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
       * </pre>
       *
       * <code>string price_unit = 9;</code>
       */
      public Builder clearPriceUnit() {
        
        priceUnit_ = getDefaultInstance().getPriceUnit();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Единица измерения цены (код валюты, проценты, единицы номинала и т.п.).
       * </pre>
       *
       * <code>string price_unit = 9;</code>
       */
      public Builder setPriceUnitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        priceUnit_ = value;
        onChanged();
        return this;
      }

      private kz.kase.iris.model.IrisApiBase.Decimal dirtyPrice_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> dirtyPriceBuilder_;
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      public boolean hasDirtyPrice() {
        return dirtyPriceBuilder_ != null || dirtyPrice_ != null;
      }
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal getDirtyPrice() {
        if (dirtyPriceBuilder_ == null) {
          return dirtyPrice_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : dirtyPrice_;
        } else {
          return dirtyPriceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      public Builder setDirtyPrice(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (dirtyPriceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dirtyPrice_ = value;
          onChanged();
        } else {
          dirtyPriceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      public Builder setDirtyPrice(
          kz.kase.iris.model.IrisApiBase.Decimal.Builder builderForValue) {
        if (dirtyPriceBuilder_ == null) {
          dirtyPrice_ = builderForValue.build();
          onChanged();
        } else {
          dirtyPriceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      public Builder mergeDirtyPrice(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (dirtyPriceBuilder_ == null) {
          if (dirtyPrice_ != null) {
            dirtyPrice_ =
              kz.kase.iris.model.IrisApiBase.Decimal.newBuilder(dirtyPrice_).mergeFrom(value).buildPartial();
          } else {
            dirtyPrice_ = value;
          }
          onChanged();
        } else {
          dirtyPriceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      public Builder clearDirtyPrice() {
        if (dirtyPriceBuilder_ == null) {
          dirtyPrice_ = null;
          onChanged();
        } else {
          dirtyPrice_ = null;
          dirtyPriceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal.Builder getDirtyPriceBuilder() {
        
        onChanged();
        return getDirtyPriceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getDirtyPriceOrBuilder() {
        if (dirtyPriceBuilder_ != null) {
          return dirtyPriceBuilder_.getMessageOrBuilder();
        } else {
          return dirtyPrice_ == null ?
              kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : dirtyPrice_;
        }
      }
      /**
       * <pre>
       * Грязная цена сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal dirty_price = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> 
          getDirtyPriceFieldBuilder() {
        if (dirtyPriceBuilder_ == null) {
          dirtyPriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder>(
                  getDirtyPrice(),
                  getParentForChildren(),
                  isClean());
          dirtyPrice_ = null;
        }
        return dirtyPriceBuilder_;
      }

      private long volume_ ;
      /**
       * <pre>
       * Объем сдеки.
       * </pre>
       *
       * <code>int64 volume = 11;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       * Объем сдеки.
       * </pre>
       *
       * <code>int64 volume = 11;</code>
       */
      public Builder setVolume(long value) {
        
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Объем сдеки.
       * </pre>
       *
       * <code>int64 volume = 11;</code>
       */
      public Builder clearVolume() {
        
        volume_ = 0L;
        onChanged();
        return this;
      }

      private kz.kase.iris.model.IrisApiBase.Decimal volKzt_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> volKztBuilder_;
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      public boolean hasVolKzt() {
        return volKztBuilder_ != null || volKzt_ != null;
      }
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal getVolKzt() {
        if (volKztBuilder_ == null) {
          return volKzt_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : volKzt_;
        } else {
          return volKztBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      public Builder setVolKzt(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (volKztBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          volKzt_ = value;
          onChanged();
        } else {
          volKztBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      public Builder setVolKzt(
          kz.kase.iris.model.IrisApiBase.Decimal.Builder builderForValue) {
        if (volKztBuilder_ == null) {
          volKzt_ = builderForValue.build();
          onChanged();
        } else {
          volKztBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      public Builder mergeVolKzt(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (volKztBuilder_ == null) {
          if (volKzt_ != null) {
            volKzt_ =
              kz.kase.iris.model.IrisApiBase.Decimal.newBuilder(volKzt_).mergeFrom(value).buildPartial();
          } else {
            volKzt_ = value;
          }
          onChanged();
        } else {
          volKztBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      public Builder clearVolKzt() {
        if (volKztBuilder_ == null) {
          volKzt_ = null;
          onChanged();
        } else {
          volKzt_ = null;
          volKztBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal.Builder getVolKztBuilder() {
        
        onChanged();
        return getVolKztFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getVolKztOrBuilder() {
        if (volKztBuilder_ != null) {
          return volKztBuilder_.getMessageOrBuilder();
        } else {
          return volKzt_ == null ?
              kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : volKzt_;
        }
      }
      /**
       * <pre>
       * Объем сделки в тенге.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_kzt = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> 
          getVolKztFieldBuilder() {
        if (volKztBuilder_ == null) {
          volKztBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder>(
                  getVolKzt(),
                  getParentForChildren(),
                  isClean());
          volKzt_ = null;
        }
        return volKztBuilder_;
      }

      private kz.kase.iris.model.IrisApiBase.Decimal volUsd_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> volUsdBuilder_;
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      public boolean hasVolUsd() {
        return volUsdBuilder_ != null || volUsd_ != null;
      }
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal getVolUsd() {
        if (volUsdBuilder_ == null) {
          return volUsd_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : volUsd_;
        } else {
          return volUsdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      public Builder setVolUsd(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (volUsdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          volUsd_ = value;
          onChanged();
        } else {
          volUsdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      public Builder setVolUsd(
          kz.kase.iris.model.IrisApiBase.Decimal.Builder builderForValue) {
        if (volUsdBuilder_ == null) {
          volUsd_ = builderForValue.build();
          onChanged();
        } else {
          volUsdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      public Builder mergeVolUsd(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (volUsdBuilder_ == null) {
          if (volUsd_ != null) {
            volUsd_ =
              kz.kase.iris.model.IrisApiBase.Decimal.newBuilder(volUsd_).mergeFrom(value).buildPartial();
          } else {
            volUsd_ = value;
          }
          onChanged();
        } else {
          volUsdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      public Builder clearVolUsd() {
        if (volUsdBuilder_ == null) {
          volUsd_ = null;
          onChanged();
        } else {
          volUsd_ = null;
          volUsdBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal.Builder getVolUsdBuilder() {
        
        onChanged();
        return getVolUsdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getVolUsdOrBuilder() {
        if (volUsdBuilder_ != null) {
          return volUsdBuilder_.getMessageOrBuilder();
        } else {
          return volUsd_ == null ?
              kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : volUsd_;
        }
      }
      /**
       * <pre>
       * Объем сделки в USD по курсу принятом в &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal vol_usd = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> 
          getVolUsdFieldBuilder() {
        if (volUsdBuilder_ == null) {
          volUsdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder>(
                  getVolUsd(),
                  getParentForChildren(),
                  isClean());
          volUsd_ = null;
        }
        return volUsdBuilder_;
      }

      private kz.kase.iris.model.IrisApiBase.Decimal usdRate_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> usdRateBuilder_;
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      public boolean hasUsdRate() {
        return usdRateBuilder_ != null || usdRate_ != null;
      }
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal getUsdRate() {
        if (usdRateBuilder_ == null) {
          return usdRate_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : usdRate_;
        } else {
          return usdRateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      public Builder setUsdRate(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (usdRateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          usdRate_ = value;
          onChanged();
        } else {
          usdRateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      public Builder setUsdRate(
          kz.kase.iris.model.IrisApiBase.Decimal.Builder builderForValue) {
        if (usdRateBuilder_ == null) {
          usdRate_ = builderForValue.build();
          onChanged();
        } else {
          usdRateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      public Builder mergeUsdRate(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (usdRateBuilder_ == null) {
          if (usdRate_ != null) {
            usdRate_ =
              kz.kase.iris.model.IrisApiBase.Decimal.newBuilder(usdRate_).mergeFrom(value).buildPartial();
          } else {
            usdRate_ = value;
          }
          onChanged();
        } else {
          usdRateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      public Builder clearUsdRate() {
        if (usdRateBuilder_ == null) {
          usdRate_ = null;
          onChanged();
        } else {
          usdRate_ = null;
          usdRateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal.Builder getUsdRateBuilder() {
        
        onChanged();
        return getUsdRateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getUsdRateOrBuilder() {
        if (usdRateBuilder_ != null) {
          return usdRateBuilder_.getMessageOrBuilder();
        } else {
          return usdRate_ == null ?
              kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : usdRate_;
        }
      }
      /**
       * <pre>
       * Курс принятый на &amp;KASE_Q; на день совершения сделки.
       * </pre>
       *
       * <code>.IRIS.Decimal usd_rate = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> 
          getUsdRateFieldBuilder() {
        if (usdRateBuilder_ == null) {
          usdRateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder>(
                  getUsdRate(),
                  getParentForChildren(),
                  isClean());
          usdRate_ = null;
        }
        return usdRateBuilder_;
      }

      private kz.kase.iris.model.IrisApiBase.Decimal yield_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> yieldBuilder_;
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      public boolean hasYield() {
        return yieldBuilder_ != null || yield_ != null;
      }
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal getYield() {
        if (yieldBuilder_ == null) {
          return yield_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : yield_;
        } else {
          return yieldBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      public Builder setYield(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (yieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          yield_ = value;
          onChanged();
        } else {
          yieldBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      public Builder setYield(
          kz.kase.iris.model.IrisApiBase.Decimal.Builder builderForValue) {
        if (yieldBuilder_ == null) {
          yield_ = builderForValue.build();
          onChanged();
        } else {
          yieldBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      public Builder mergeYield(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (yieldBuilder_ == null) {
          if (yield_ != null) {
            yield_ =
              kz.kase.iris.model.IrisApiBase.Decimal.newBuilder(yield_).mergeFrom(value).buildPartial();
          } else {
            yield_ = value;
          }
          onChanged();
        } else {
          yieldBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      public Builder clearYield() {
        if (yieldBuilder_ == null) {
          yield_ = null;
          onChanged();
        } else {
          yield_ = null;
          yieldBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal.Builder getYieldBuilder() {
        
        onChanged();
        return getYieldFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getYieldOrBuilder() {
        if (yieldBuilder_ != null) {
          return yieldBuilder_.getMessageOrBuilder();
        } else {
          return yield_ == null ?
              kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : yield_;
        }
      }
      /**
       * <pre>
       * Доходность.
       * </pre>
       *
       * <code>.IRIS.Decimal yield = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> 
          getYieldFieldBuilder() {
        if (yieldBuilder_ == null) {
          yieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder>(
                  getYield(),
                  getParentForChildren(),
                  isClean());
          yield_ = null;
        }
        return yieldBuilder_;
      }

      private int stateId_ ;
      /**
       * <pre>
       * Первичный ключ статуса сделки в ИС IRIS.
       * </pre>
       *
       * <code>int32 state_id = 16;</code>
       */
      public int getStateId() {
        return stateId_;
      }
      /**
       * <pre>
       * Первичный ключ статуса сделки в ИС IRIS.
       * </pre>
       *
       * <code>int32 state_id = 16;</code>
       */
      public Builder setStateId(int value) {
        
        stateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Первичный ключ статуса сделки в ИС IRIS.
       * </pre>
       *
       * <code>int32 state_id = 16;</code>
       */
      public Builder clearStateId() {
        
        stateId_ = 0;
        onChanged();
        return this;
      }

      private int dealType_ = 0;
      /**
       * <pre>
       * Тип сделки.
       * </pre>
       *
       * <code>.IRIS.DealType deal_type = 17;</code>
       */
      public int getDealTypeValue() {
        return dealType_;
      }
      /**
       * <pre>
       * Тип сделки.
       * </pre>
       *
       * <code>.IRIS.DealType deal_type = 17;</code>
       */
      public Builder setDealTypeValue(int value) {
        dealType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Тип сделки.
       * </pre>
       *
       * <code>.IRIS.DealType deal_type = 17;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealType getDealType() {
        @SuppressWarnings("deprecation")
        kz.kase.iris.model.IrisApiDeals.DealType result = kz.kase.iris.model.IrisApiDeals.DealType.valueOf(dealType_);
        return result == null ? kz.kase.iris.model.IrisApiDeals.DealType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Тип сделки.
       * </pre>
       *
       * <code>.IRIS.DealType deal_type = 17;</code>
       */
      public Builder setDealType(kz.kase.iris.model.IrisApiDeals.DealType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dealType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Тип сделки.
       * </pre>
       *
       * <code>.IRIS.DealType deal_type = 17;</code>
       */
      public Builder clearDealType() {
        
        dealType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object dealTypeDesc_ = "";
      /**
       * <pre>
       * Описание типа сделки.
       * </pre>
       *
       * <code>string deal_type_desc = 18;</code>
       */
      public java.lang.String getDealTypeDesc() {
        java.lang.Object ref = dealTypeDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dealTypeDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Описание типа сделки.
       * </pre>
       *
       * <code>string deal_type_desc = 18;</code>
       */
      public com.google.protobuf.ByteString
          getDealTypeDescBytes() {
        java.lang.Object ref = dealTypeDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dealTypeDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Описание типа сделки.
       * </pre>
       *
       * <code>string deal_type_desc = 18;</code>
       */
      public Builder setDealTypeDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dealTypeDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Описание типа сделки.
       * </pre>
       *
       * <code>string deal_type_desc = 18;</code>
       */
      public Builder clearDealTypeDesc() {
        
        dealTypeDesc_ = getDefaultInstance().getDealTypeDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Описание типа сделки.
       * </pre>
       *
       * <code>string deal_type_desc = 18;</code>
       */
      public Builder setDealTypeDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dealTypeDesc_ = value;
        onChanged();
        return this;
      }

      private int marketSector_ = 0;
      /**
       * <pre>
       * Сектор рынка.
       * </pre>
       *
       * <code>.IRIS.MarketSector market_sector = 19;</code>
       */
      public int getMarketSectorValue() {
        return marketSector_;
      }
      /**
       * <pre>
       * Сектор рынка.
       * </pre>
       *
       * <code>.IRIS.MarketSector market_sector = 19;</code>
       */
      public Builder setMarketSectorValue(int value) {
        marketSector_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Сектор рынка.
       * </pre>
       *
       * <code>.IRIS.MarketSector market_sector = 19;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.MarketSector getMarketSector() {
        @SuppressWarnings("deprecation")
        kz.kase.iris.model.IrisApiDeals.MarketSector result = kz.kase.iris.model.IrisApiDeals.MarketSector.valueOf(marketSector_);
        return result == null ? kz.kase.iris.model.IrisApiDeals.MarketSector.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Сектор рынка.
       * </pre>
       *
       * <code>.IRIS.MarketSector market_sector = 19;</code>
       */
      public Builder setMarketSector(kz.kase.iris.model.IrisApiDeals.MarketSector value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        marketSector_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Сектор рынка.
       * </pre>
       *
       * <code>.IRIS.MarketSector market_sector = 19;</code>
       */
      public Builder clearMarketSector() {
        
        marketSector_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object marketSectorDesc_ = "";
      /**
       * <pre>
       * Описание сектора рынка.
       * </pre>
       *
       * <code>string market_sector_desc = 20;</code>
       */
      public java.lang.String getMarketSectorDesc() {
        java.lang.Object ref = marketSectorDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          marketSectorDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Описание сектора рынка.
       * </pre>
       *
       * <code>string market_sector_desc = 20;</code>
       */
      public com.google.protobuf.ByteString
          getMarketSectorDescBytes() {
        java.lang.Object ref = marketSectorDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          marketSectorDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Описание сектора рынка.
       * </pre>
       *
       * <code>string market_sector_desc = 20;</code>
       */
      public Builder setMarketSectorDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        marketSectorDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Описание сектора рынка.
       * </pre>
       *
       * <code>string market_sector_desc = 20;</code>
       */
      public Builder clearMarketSectorDesc() {
        
        marketSectorDesc_ = getDefaultInstance().getMarketSectorDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Описание сектора рынка.
       * </pre>
       *
       * <code>string market_sector_desc = 20;</code>
       */
      public Builder setMarketSectorDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        marketSectorDesc_ = value;
        onChanged();
        return this;
      }

      private long version_ ;
      /**
       * <pre>
       * Внутренняя версия записи в IRIS.
       * </pre>
       *
       * <code>int64 version = 21;</code>
       */
      public long getVersion() {
        return version_;
      }
      /**
       * <pre>
       * Внутренняя версия записи в IRIS.
       * </pre>
       *
       * <code>int64 version = 21;</code>
       */
      public Builder setVersion(long value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Внутренняя версия записи в IRIS.
       * </pre>
       *
       * <code>int64 version = 21;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.Deal)
    }

    // @@protoc_insertion_point(class_scope:IRIS.Deal)
    private static final kz.kase.iris.model.IrisApiDeals.Deal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.Deal();
    }

    public static kz.kase.iris.model.IrisApiDeals.Deal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Deal>
        PARSER = new com.google.protobuf.AbstractParser<Deal>() {
      @java.lang.Override
      public Deal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Deal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Deal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Deal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.Deal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShortDealInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.ShortDealInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Код сделки.
     * </pre>
     *
     * <code>int64 deal_id = 1;</code>
     */
    long getDealId();

    /**
     * <pre>
     * Время сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    boolean hasDealTime();
    /**
     * <pre>
     * Время сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    kz.kase.iris.model.IrisApiBase.DateTime getDealTime();
    /**
     * <pre>
     * Время сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder getDealTimeOrBuilder();

    /**
     * <pre>
     * Тип события (новая, обновление, удаление).
     * </pre>
     *
     * <code>.IRIS.EventType event_type = 3;</code>
     */
    int getEventTypeValue();
    /**
     * <pre>
     * Тип события (новая, обновление, удаление).
     * </pre>
     *
     * <code>.IRIS.EventType event_type = 3;</code>
     */
    kz.kase.iris.model.IrisApiBase.EventType getEventType();

    /**
     * <pre>
     * Тип ценной бумаги.
     * </pre>
     *
     * <code>.IRIS.SecType sec_type = 4;</code>
     */
    int getSecTypeValue();
    /**
     * <pre>
     * Тип ценной бумаги.
     * </pre>
     *
     * <code>.IRIS.SecType sec_type = 4;</code>
     */
    kz.kase.iris.model.IrisApiSecs.SecType getSecType();
  }
  /**
   * <pre>
   * Краткая информация о сделке 
   * </pre>
   *
   * Protobuf type {@code IRIS.ShortDealInfo}
   */
  public  static final class ShortDealInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.ShortDealInfo)
      ShortDealInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ShortDealInfo.newBuilder() to construct.
    private ShortDealInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ShortDealInfo() {
      dealId_ = 0L;
      eventType_ = 0;
      secType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ShortDealInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              dealId_ = input.readInt64();
              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiBase.DateTime.Builder subBuilder = null;
              if (dealTime_ != null) {
                subBuilder = dealTime_.toBuilder();
              }
              dealTime_ = input.readMessage(kz.kase.iris.model.IrisApiBase.DateTime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dealTime_);
                dealTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              eventType_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              secType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_ShortDealInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_ShortDealInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.ShortDealInfo.class, kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder.class);
    }

    public static final int DEAL_ID_FIELD_NUMBER = 1;
    private long dealId_;
    /**
     * <pre>
     * Код сделки.
     * </pre>
     *
     * <code>int64 deal_id = 1;</code>
     */
    public long getDealId() {
      return dealId_;
    }

    public static final int DEAL_TIME_FIELD_NUMBER = 2;
    private kz.kase.iris.model.IrisApiBase.DateTime dealTime_;
    /**
     * <pre>
     * Время сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    public boolean hasDealTime() {
      return dealTime_ != null;
    }
    /**
     * <pre>
     * Время сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DateTime getDealTime() {
      return dealTime_ == null ? kz.kase.iris.model.IrisApiBase.DateTime.getDefaultInstance() : dealTime_;
    }
    /**
     * <pre>
     * Время сделки.
     * </pre>
     *
     * <code>.IRIS.DateTime deal_time = 2;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder getDealTimeOrBuilder() {
      return getDealTime();
    }

    public static final int EVENT_TYPE_FIELD_NUMBER = 3;
    private int eventType_;
    /**
     * <pre>
     * Тип события (новая, обновление, удаление).
     * </pre>
     *
     * <code>.IRIS.EventType event_type = 3;</code>
     */
    public int getEventTypeValue() {
      return eventType_;
    }
    /**
     * <pre>
     * Тип события (новая, обновление, удаление).
     * </pre>
     *
     * <code>.IRIS.EventType event_type = 3;</code>
     */
    public kz.kase.iris.model.IrisApiBase.EventType getEventType() {
      @SuppressWarnings("deprecation")
      kz.kase.iris.model.IrisApiBase.EventType result = kz.kase.iris.model.IrisApiBase.EventType.valueOf(eventType_);
      return result == null ? kz.kase.iris.model.IrisApiBase.EventType.UNRECOGNIZED : result;
    }

    public static final int SEC_TYPE_FIELD_NUMBER = 4;
    private int secType_;
    /**
     * <pre>
     * Тип ценной бумаги.
     * </pre>
     *
     * <code>.IRIS.SecType sec_type = 4;</code>
     */
    public int getSecTypeValue() {
      return secType_;
    }
    /**
     * <pre>
     * Тип ценной бумаги.
     * </pre>
     *
     * <code>.IRIS.SecType sec_type = 4;</code>
     */
    public kz.kase.iris.model.IrisApiSecs.SecType getSecType() {
      @SuppressWarnings("deprecation")
      kz.kase.iris.model.IrisApiSecs.SecType result = kz.kase.iris.model.IrisApiSecs.SecType.valueOf(secType_);
      return result == null ? kz.kase.iris.model.IrisApiSecs.SecType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dealId_ != 0L) {
        output.writeInt64(1, dealId_);
      }
      if (dealTime_ != null) {
        output.writeMessage(2, getDealTime());
      }
      if (eventType_ != kz.kase.iris.model.IrisApiBase.EventType.NEW.getNumber()) {
        output.writeEnum(3, eventType_);
      }
      if (secType_ != kz.kase.iris.model.IrisApiSecs.SecType.SHARES.getNumber()) {
        output.writeEnum(4, secType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dealId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, dealId_);
      }
      if (dealTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDealTime());
      }
      if (eventType_ != kz.kase.iris.model.IrisApiBase.EventType.NEW.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, eventType_);
      }
      if (secType_ != kz.kase.iris.model.IrisApiSecs.SecType.SHARES.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, secType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.ShortDealInfo)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.ShortDealInfo other = (kz.kase.iris.model.IrisApiDeals.ShortDealInfo) obj;

      boolean result = true;
      result = result && (getDealId()
          == other.getDealId());
      result = result && (hasDealTime() == other.hasDealTime());
      if (hasDealTime()) {
        result = result && getDealTime()
            .equals(other.getDealTime());
      }
      result = result && eventType_ == other.eventType_;
      result = result && secType_ == other.secType_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEAL_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDealId());
      if (hasDealTime()) {
        hash = (37 * hash) + DEAL_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getDealTime().hashCode();
      }
      hash = (37 * hash) + EVENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + eventType_;
      hash = (37 * hash) + SEC_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + secType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.ShortDealInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Краткая информация о сделке 
     * </pre>
     *
     * Protobuf type {@code IRIS.ShortDealInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.ShortDealInfo)
        kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_ShortDealInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_ShortDealInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.ShortDealInfo.class, kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.ShortDealInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dealId_ = 0L;

        if (dealTimeBuilder_ == null) {
          dealTime_ = null;
        } else {
          dealTime_ = null;
          dealTimeBuilder_ = null;
        }
        eventType_ = 0;

        secType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_ShortDealInfo_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.ShortDealInfo getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.ShortDealInfo.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.ShortDealInfo build() {
        kz.kase.iris.model.IrisApiDeals.ShortDealInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.ShortDealInfo buildPartial() {
        kz.kase.iris.model.IrisApiDeals.ShortDealInfo result = new kz.kase.iris.model.IrisApiDeals.ShortDealInfo(this);
        result.dealId_ = dealId_;
        if (dealTimeBuilder_ == null) {
          result.dealTime_ = dealTime_;
        } else {
          result.dealTime_ = dealTimeBuilder_.build();
        }
        result.eventType_ = eventType_;
        result.secType_ = secType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.ShortDealInfo) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.ShortDealInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.ShortDealInfo other) {
        if (other == kz.kase.iris.model.IrisApiDeals.ShortDealInfo.getDefaultInstance()) return this;
        if (other.getDealId() != 0L) {
          setDealId(other.getDealId());
        }
        if (other.hasDealTime()) {
          mergeDealTime(other.getDealTime());
        }
        if (other.eventType_ != 0) {
          setEventTypeValue(other.getEventTypeValue());
        }
        if (other.secType_ != 0) {
          setSecTypeValue(other.getSecTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.ShortDealInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.ShortDealInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long dealId_ ;
      /**
       * <pre>
       * Код сделки.
       * </pre>
       *
       * <code>int64 deal_id = 1;</code>
       */
      public long getDealId() {
        return dealId_;
      }
      /**
       * <pre>
       * Код сделки.
       * </pre>
       *
       * <code>int64 deal_id = 1;</code>
       */
      public Builder setDealId(long value) {
        
        dealId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Код сделки.
       * </pre>
       *
       * <code>int64 deal_id = 1;</code>
       */
      public Builder clearDealId() {
        
        dealId_ = 0L;
        onChanged();
        return this;
      }

      private kz.kase.iris.model.IrisApiBase.DateTime dealTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.DateTime, kz.kase.iris.model.IrisApiBase.DateTime.Builder, kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder> dealTimeBuilder_;
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public boolean hasDealTime() {
        return dealTimeBuilder_ != null || dealTime_ != null;
      }
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DateTime getDealTime() {
        if (dealTimeBuilder_ == null) {
          return dealTime_ == null ? kz.kase.iris.model.IrisApiBase.DateTime.getDefaultInstance() : dealTime_;
        } else {
          return dealTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public Builder setDealTime(kz.kase.iris.model.IrisApiBase.DateTime value) {
        if (dealTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dealTime_ = value;
          onChanged();
        } else {
          dealTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public Builder setDealTime(
          kz.kase.iris.model.IrisApiBase.DateTime.Builder builderForValue) {
        if (dealTimeBuilder_ == null) {
          dealTime_ = builderForValue.build();
          onChanged();
        } else {
          dealTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public Builder mergeDealTime(kz.kase.iris.model.IrisApiBase.DateTime value) {
        if (dealTimeBuilder_ == null) {
          if (dealTime_ != null) {
            dealTime_ =
              kz.kase.iris.model.IrisApiBase.DateTime.newBuilder(dealTime_).mergeFrom(value).buildPartial();
          } else {
            dealTime_ = value;
          }
          onChanged();
        } else {
          dealTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public Builder clearDealTime() {
        if (dealTimeBuilder_ == null) {
          dealTime_ = null;
          onChanged();
        } else {
          dealTime_ = null;
          dealTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DateTime.Builder getDealTimeBuilder() {
        
        onChanged();
        return getDealTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder getDealTimeOrBuilder() {
        if (dealTimeBuilder_ != null) {
          return dealTimeBuilder_.getMessageOrBuilder();
        } else {
          return dealTime_ == null ?
              kz.kase.iris.model.IrisApiBase.DateTime.getDefaultInstance() : dealTime_;
        }
      }
      /**
       * <pre>
       * Время сделки.
       * </pre>
       *
       * <code>.IRIS.DateTime deal_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.DateTime, kz.kase.iris.model.IrisApiBase.DateTime.Builder, kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder> 
          getDealTimeFieldBuilder() {
        if (dealTimeBuilder_ == null) {
          dealTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.DateTime, kz.kase.iris.model.IrisApiBase.DateTime.Builder, kz.kase.iris.model.IrisApiBase.DateTimeOrBuilder>(
                  getDealTime(),
                  getParentForChildren(),
                  isClean());
          dealTime_ = null;
        }
        return dealTimeBuilder_;
      }

      private int eventType_ = 0;
      /**
       * <pre>
       * Тип события (новая, обновление, удаление).
       * </pre>
       *
       * <code>.IRIS.EventType event_type = 3;</code>
       */
      public int getEventTypeValue() {
        return eventType_;
      }
      /**
       * <pre>
       * Тип события (новая, обновление, удаление).
       * </pre>
       *
       * <code>.IRIS.EventType event_type = 3;</code>
       */
      public Builder setEventTypeValue(int value) {
        eventType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Тип события (новая, обновление, удаление).
       * </pre>
       *
       * <code>.IRIS.EventType event_type = 3;</code>
       */
      public kz.kase.iris.model.IrisApiBase.EventType getEventType() {
        @SuppressWarnings("deprecation")
        kz.kase.iris.model.IrisApiBase.EventType result = kz.kase.iris.model.IrisApiBase.EventType.valueOf(eventType_);
        return result == null ? kz.kase.iris.model.IrisApiBase.EventType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Тип события (новая, обновление, удаление).
       * </pre>
       *
       * <code>.IRIS.EventType event_type = 3;</code>
       */
      public Builder setEventType(kz.kase.iris.model.IrisApiBase.EventType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        eventType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Тип события (новая, обновление, удаление).
       * </pre>
       *
       * <code>.IRIS.EventType event_type = 3;</code>
       */
      public Builder clearEventType() {
        
        eventType_ = 0;
        onChanged();
        return this;
      }

      private int secType_ = 0;
      /**
       * <pre>
       * Тип ценной бумаги.
       * </pre>
       *
       * <code>.IRIS.SecType sec_type = 4;</code>
       */
      public int getSecTypeValue() {
        return secType_;
      }
      /**
       * <pre>
       * Тип ценной бумаги.
       * </pre>
       *
       * <code>.IRIS.SecType sec_type = 4;</code>
       */
      public Builder setSecTypeValue(int value) {
        secType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Тип ценной бумаги.
       * </pre>
       *
       * <code>.IRIS.SecType sec_type = 4;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.SecType getSecType() {
        @SuppressWarnings("deprecation")
        kz.kase.iris.model.IrisApiSecs.SecType result = kz.kase.iris.model.IrisApiSecs.SecType.valueOf(secType_);
        return result == null ? kz.kase.iris.model.IrisApiSecs.SecType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Тип ценной бумаги.
       * </pre>
       *
       * <code>.IRIS.SecType sec_type = 4;</code>
       */
      public Builder setSecType(kz.kase.iris.model.IrisApiSecs.SecType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        secType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Тип ценной бумаги.
       * </pre>
       *
       * <code>.IRIS.SecType sec_type = 4;</code>
       */
      public Builder clearSecType() {
        
        secType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.ShortDealInfo)
    }

    // @@protoc_insertion_point(class_scope:IRIS.ShortDealInfo)
    private static final kz.kase.iris.model.IrisApiDeals.ShortDealInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.ShortDealInfo();
    }

    public static kz.kase.iris.model.IrisApiDeals.ShortDealInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShortDealInfo>
        PARSER = new com.google.protobuf.AbstractParser<ShortDealInfo>() {
      @java.lang.Override
      public ShortDealInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShortDealInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ShortDealInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShortDealInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.ShortDealInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsBaseFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsBaseFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
     * </pre>
     *
     * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
     */
    boolean hasInstrumentsFilter();
    /**
     * <pre>
     * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
     * </pre>
     *
     * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
     */
    kz.kase.iris.model.IrisApiSecs.InstrumentsFilter getInstrumentsFilter();
    /**
     * <pre>
     * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
     * </pre>
     *
     * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
     */
    kz.kase.iris.model.IrisApiSecs.InstrumentsFilterOrBuilder getInstrumentsFilterOrBuilder();

    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    java.util.List<kz.kase.iris.model.IrisApiDeals.DealType> getDealTypeList();
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    int getDealTypeCount();
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealType getDealType(int index);
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    java.util.List<java.lang.Integer>
    getDealTypeValueList();
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    int getDealTypeValue(int index);

    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    java.util.List<kz.kase.iris.model.IrisApiDeals.MarketSector> getMarketSectorList();
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    int getMarketSectorCount();
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    kz.kase.iris.model.IrisApiDeals.MarketSector getMarketSector(int index);
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    java.util.List<java.lang.Integer>
    getMarketSectorValueList();
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    int getMarketSectorValue(int index);

    /**
     * <pre>
     * Версия начиная с которой требуются записи. Предполагается, что это ограничение будет использоваться совместно с указанием размера пакета (см. поле bandle в сообщении DealsRequest, &lt;xref linkend=".IRIS.DealsRequest"/&gt;).
     * </pre>
     *
     * <code>int64 version_from = 4;</code>
     */
    long getVersionFrom();

    /**
     * <pre>
     * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
     * </pre>
     *
     * <code>repeated int64 deals_ids = 5;</code>
     */
    java.util.List<java.lang.Long> getDealsIdsList();
    /**
     * <pre>
     * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
     * </pre>
     *
     * <code>repeated int64 deals_ids = 5;</code>
     */
    int getDealsIdsCount();
    /**
     * <pre>
     * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
     * </pre>
     *
     * <code>repeated int64 deals_ids = 5;</code>
     */
    long getDealsIds(int index);

    /**
     * <pre>
     * Если это поле заполнено как true, то будет выдан список только подтвержденных сделок. В противном случае следует обращать внимание на статус сделки передаваемый в поле state_id сообщения Deal.
     * </pre>
     *
     * <code>bool confirmed = 6;</code>
     */
    boolean getConfirmed();
  }
  /**
   * <pre>
   * Информация для фильтрации списка сделок 
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsBaseFilter}
   */
  public  static final class DealsBaseFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsBaseFilter)
      DealsBaseFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsBaseFilter.newBuilder() to construct.
    private DealsBaseFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsBaseFilter() {
      dealType_ = java.util.Collections.emptyList();
      marketSector_ = java.util.Collections.emptyList();
      versionFrom_ = 0L;
      dealsIds_ = java.util.Collections.emptyList();
      confirmed_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsBaseFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.Builder subBuilder = null;
              if (instrumentsFilter_ != null) {
                subBuilder = instrumentsFilter_.toBuilder();
              }
              instrumentsFilter_ = input.readMessage(kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(instrumentsFilter_);
                instrumentsFilter_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                dealType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              dealType_.add(rawValue);
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  dealType_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                dealType_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                marketSector_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              marketSector_.add(rawValue);
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  marketSector_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                marketSector_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 32: {

              versionFrom_ = input.readInt64();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                dealsIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              dealsIds_.add(input.readInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                dealsIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                dealsIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {

              confirmed_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          dealType_ = java.util.Collections.unmodifiableList(dealType_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          marketSector_ = java.util.Collections.unmodifiableList(marketSector_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          dealsIds_ = java.util.Collections.unmodifiableList(dealsIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsBaseFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsBaseFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.class, kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.Builder.class);
    }

    private int bitField0_;
    public static final int INSTRUMENTS_FILTER_FIELD_NUMBER = 1;
    private kz.kase.iris.model.IrisApiSecs.InstrumentsFilter instrumentsFilter_;
    /**
     * <pre>
     * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
     * </pre>
     *
     * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
     */
    public boolean hasInstrumentsFilter() {
      return instrumentsFilter_ != null;
    }
    /**
     * <pre>
     * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
     * </pre>
     *
     * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
     */
    public kz.kase.iris.model.IrisApiSecs.InstrumentsFilter getInstrumentsFilter() {
      return instrumentsFilter_ == null ? kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.getDefaultInstance() : instrumentsFilter_;
    }
    /**
     * <pre>
     * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
     * </pre>
     *
     * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
     */
    public kz.kase.iris.model.IrisApiSecs.InstrumentsFilterOrBuilder getInstrumentsFilterOrBuilder() {
      return getInstrumentsFilter();
    }

    public static final int DEAL_TYPE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> dealType_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, kz.kase.iris.model.IrisApiDeals.DealType> dealType_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, kz.kase.iris.model.IrisApiDeals.DealType>() {
              public kz.kase.iris.model.IrisApiDeals.DealType convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                kz.kase.iris.model.IrisApiDeals.DealType result = kz.kase.iris.model.IrisApiDeals.DealType.valueOf(from);
                return result == null ? kz.kase.iris.model.IrisApiDeals.DealType.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    public java.util.List<kz.kase.iris.model.IrisApiDeals.DealType> getDealTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, kz.kase.iris.model.IrisApiDeals.DealType>(dealType_, dealType_converter_);
    }
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    public int getDealTypeCount() {
      return dealType_.size();
    }
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealType getDealType(int index) {
      return dealType_converter_.convert(dealType_.get(index));
    }
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    public java.util.List<java.lang.Integer>
    getDealTypeValueList() {
      return dealType_;
    }
    /**
     * <pre>
     * Перечисление требуемых типов сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealType deal_type = 2;</code>
     */
    public int getDealTypeValue(int index) {
      return dealType_.get(index);
    }
    private int dealTypeMemoizedSerializedSize;

    public static final int MARKET_SECTOR_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> marketSector_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, kz.kase.iris.model.IrisApiDeals.MarketSector> marketSector_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, kz.kase.iris.model.IrisApiDeals.MarketSector>() {
              public kz.kase.iris.model.IrisApiDeals.MarketSector convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                kz.kase.iris.model.IrisApiDeals.MarketSector result = kz.kase.iris.model.IrisApiDeals.MarketSector.valueOf(from);
                return result == null ? kz.kase.iris.model.IrisApiDeals.MarketSector.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    public java.util.List<kz.kase.iris.model.IrisApiDeals.MarketSector> getMarketSectorList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, kz.kase.iris.model.IrisApiDeals.MarketSector>(marketSector_, marketSector_converter_);
    }
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    public int getMarketSectorCount() {
      return marketSector_.size();
    }
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.MarketSector getMarketSector(int index) {
      return marketSector_converter_.convert(marketSector_.get(index));
    }
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    public java.util.List<java.lang.Integer>
    getMarketSectorValueList() {
      return marketSector_;
    }
    /**
     * <pre>
     * Перечисление требуемых секторов рынка.
     * </pre>
     *
     * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
     */
    public int getMarketSectorValue(int index) {
      return marketSector_.get(index);
    }
    private int marketSectorMemoizedSerializedSize;

    public static final int VERSION_FROM_FIELD_NUMBER = 4;
    private long versionFrom_;
    /**
     * <pre>
     * Версия начиная с которой требуются записи. Предполагается, что это ограничение будет использоваться совместно с указанием размера пакета (см. поле bandle в сообщении DealsRequest, &lt;xref linkend=".IRIS.DealsRequest"/&gt;).
     * </pre>
     *
     * <code>int64 version_from = 4;</code>
     */
    public long getVersionFrom() {
      return versionFrom_;
    }

    public static final int DEALS_IDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> dealsIds_;
    /**
     * <pre>
     * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
     * </pre>
     *
     * <code>repeated int64 deals_ids = 5;</code>
     */
    public java.util.List<java.lang.Long>
        getDealsIdsList() {
      return dealsIds_;
    }
    /**
     * <pre>
     * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
     * </pre>
     *
     * <code>repeated int64 deals_ids = 5;</code>
     */
    public int getDealsIdsCount() {
      return dealsIds_.size();
    }
    /**
     * <pre>
     * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
     * </pre>
     *
     * <code>repeated int64 deals_ids = 5;</code>
     */
    public long getDealsIds(int index) {
      return dealsIds_.get(index);
    }
    private int dealsIdsMemoizedSerializedSize = -1;

    public static final int CONFIRMED_FIELD_NUMBER = 6;
    private boolean confirmed_;
    /**
     * <pre>
     * Если это поле заполнено как true, то будет выдан список только подтвержденных сделок. В противном случае следует обращать внимание на статус сделки передаваемый в поле state_id сообщения Deal.
     * </pre>
     *
     * <code>bool confirmed = 6;</code>
     */
    public boolean getConfirmed() {
      return confirmed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (instrumentsFilter_ != null) {
        output.writeMessage(1, getInstrumentsFilter());
      }
      if (getDealTypeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(dealTypeMemoizedSerializedSize);
      }
      for (int i = 0; i < dealType_.size(); i++) {
        output.writeEnumNoTag(dealType_.get(i));
      }
      if (getMarketSectorList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(marketSectorMemoizedSerializedSize);
      }
      for (int i = 0; i < marketSector_.size(); i++) {
        output.writeEnumNoTag(marketSector_.get(i));
      }
      if (versionFrom_ != 0L) {
        output.writeInt64(4, versionFrom_);
      }
      if (getDealsIdsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(dealsIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < dealsIds_.size(); i++) {
        output.writeInt64NoTag(dealsIds_.get(i));
      }
      if (confirmed_ != false) {
        output.writeBool(6, confirmed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (instrumentsFilter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInstrumentsFilter());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dealType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(dealType_.get(i));
        }
        size += dataSize;
        if (!getDealTypeList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }dealTypeMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < marketSector_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(marketSector_.get(i));
        }
        size += dataSize;
        if (!getMarketSectorList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }marketSectorMemoizedSerializedSize = dataSize;
      }
      if (versionFrom_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, versionFrom_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dealsIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(dealsIds_.get(i));
        }
        size += dataSize;
        if (!getDealsIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dealsIdsMemoizedSerializedSize = dataSize;
      }
      if (confirmed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, confirmed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.DealsBaseFilter)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.DealsBaseFilter other = (kz.kase.iris.model.IrisApiDeals.DealsBaseFilter) obj;

      boolean result = true;
      result = result && (hasInstrumentsFilter() == other.hasInstrumentsFilter());
      if (hasInstrumentsFilter()) {
        result = result && getInstrumentsFilter()
            .equals(other.getInstrumentsFilter());
      }
      result = result && dealType_.equals(other.dealType_);
      result = result && marketSector_.equals(other.marketSector_);
      result = result && (getVersionFrom()
          == other.getVersionFrom());
      result = result && getDealsIdsList()
          .equals(other.getDealsIdsList());
      result = result && (getConfirmed()
          == other.getConfirmed());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInstrumentsFilter()) {
        hash = (37 * hash) + INSTRUMENTS_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getInstrumentsFilter().hashCode();
      }
      if (getDealTypeCount() > 0) {
        hash = (37 * hash) + DEAL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + dealType_.hashCode();
      }
      if (getMarketSectorCount() > 0) {
        hash = (37 * hash) + MARKET_SECTOR_FIELD_NUMBER;
        hash = (53 * hash) + marketSector_.hashCode();
      }
      hash = (37 * hash) + VERSION_FROM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersionFrom());
      if (getDealsIdsCount() > 0) {
        hash = (37 * hash) + DEALS_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getDealsIdsList().hashCode();
      }
      hash = (37 * hash) + CONFIRMED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getConfirmed());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.DealsBaseFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Информация для фильтрации списка сделок 
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsBaseFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsBaseFilter)
        kz.kase.iris.model.IrisApiDeals.DealsBaseFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsBaseFilter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsBaseFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.class, kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (instrumentsFilterBuilder_ == null) {
          instrumentsFilter_ = null;
        } else {
          instrumentsFilter_ = null;
          instrumentsFilterBuilder_ = null;
        }
        dealType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        marketSector_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        versionFrom_ = 0L;

        dealsIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        confirmed_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsBaseFilter_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsBaseFilter getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsBaseFilter build() {
        kz.kase.iris.model.IrisApiDeals.DealsBaseFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsBaseFilter buildPartial() {
        kz.kase.iris.model.IrisApiDeals.DealsBaseFilter result = new kz.kase.iris.model.IrisApiDeals.DealsBaseFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (instrumentsFilterBuilder_ == null) {
          result.instrumentsFilter_ = instrumentsFilter_;
        } else {
          result.instrumentsFilter_ = instrumentsFilterBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          dealType_ = java.util.Collections.unmodifiableList(dealType_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dealType_ = dealType_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          marketSector_ = java.util.Collections.unmodifiableList(marketSector_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.marketSector_ = marketSector_;
        result.versionFrom_ = versionFrom_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          dealsIds_ = java.util.Collections.unmodifiableList(dealsIds_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.dealsIds_ = dealsIds_;
        result.confirmed_ = confirmed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.DealsBaseFilter) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsBaseFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.DealsBaseFilter other) {
        if (other == kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.getDefaultInstance()) return this;
        if (other.hasInstrumentsFilter()) {
          mergeInstrumentsFilter(other.getInstrumentsFilter());
        }
        if (!other.dealType_.isEmpty()) {
          if (dealType_.isEmpty()) {
            dealType_ = other.dealType_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDealTypeIsMutable();
            dealType_.addAll(other.dealType_);
          }
          onChanged();
        }
        if (!other.marketSector_.isEmpty()) {
          if (marketSector_.isEmpty()) {
            marketSector_ = other.marketSector_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMarketSectorIsMutable();
            marketSector_.addAll(other.marketSector_);
          }
          onChanged();
        }
        if (other.getVersionFrom() != 0L) {
          setVersionFrom(other.getVersionFrom());
        }
        if (!other.dealsIds_.isEmpty()) {
          if (dealsIds_.isEmpty()) {
            dealsIds_ = other.dealsIds_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDealsIdsIsMutable();
            dealsIds_.addAll(other.dealsIds_);
          }
          onChanged();
        }
        if (other.getConfirmed() != false) {
          setConfirmed(other.getConfirmed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.DealsBaseFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.DealsBaseFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private kz.kase.iris.model.IrisApiSecs.InstrumentsFilter instrumentsFilter_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiSecs.InstrumentsFilter, kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsFilterOrBuilder> instrumentsFilterBuilder_;
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      public boolean hasInstrumentsFilter() {
        return instrumentsFilterBuilder_ != null || instrumentsFilter_ != null;
      }
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsFilter getInstrumentsFilter() {
        if (instrumentsFilterBuilder_ == null) {
          return instrumentsFilter_ == null ? kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.getDefaultInstance() : instrumentsFilter_;
        } else {
          return instrumentsFilterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      public Builder setInstrumentsFilter(kz.kase.iris.model.IrisApiSecs.InstrumentsFilter value) {
        if (instrumentsFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          instrumentsFilter_ = value;
          onChanged();
        } else {
          instrumentsFilterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      public Builder setInstrumentsFilter(
          kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.Builder builderForValue) {
        if (instrumentsFilterBuilder_ == null) {
          instrumentsFilter_ = builderForValue.build();
          onChanged();
        } else {
          instrumentsFilterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      public Builder mergeInstrumentsFilter(kz.kase.iris.model.IrisApiSecs.InstrumentsFilter value) {
        if (instrumentsFilterBuilder_ == null) {
          if (instrumentsFilter_ != null) {
            instrumentsFilter_ =
              kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.newBuilder(instrumentsFilter_).mergeFrom(value).buildPartial();
          } else {
            instrumentsFilter_ = value;
          }
          onChanged();
        } else {
          instrumentsFilterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      public Builder clearInstrumentsFilter() {
        if (instrumentsFilterBuilder_ == null) {
          instrumentsFilter_ = null;
          onChanged();
        } else {
          instrumentsFilter_ = null;
          instrumentsFilterBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.Builder getInstrumentsFilterBuilder() {
        
        onChanged();
        return getInstrumentsFilterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsFilterOrBuilder getInstrumentsFilterOrBuilder() {
        if (instrumentsFilterBuilder_ != null) {
          return instrumentsFilterBuilder_.getMessageOrBuilder();
        } else {
          return instrumentsFilter_ == null ?
              kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.getDefaultInstance() : instrumentsFilter_;
        }
      }
      /**
       * <pre>
       * Фильтр для установки ограничений в разрезе инструментов с которыми осуществлялись сделки.
       * </pre>
       *
       * <code>.IRIS.InstrumentsFilter instruments_filter = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiSecs.InstrumentsFilter, kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsFilterOrBuilder> 
          getInstrumentsFilterFieldBuilder() {
        if (instrumentsFilterBuilder_ == null) {
          instrumentsFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiSecs.InstrumentsFilter, kz.kase.iris.model.IrisApiSecs.InstrumentsFilter.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsFilterOrBuilder>(
                  getInstrumentsFilter(),
                  getParentForChildren(),
                  isClean());
          instrumentsFilter_ = null;
        }
        return instrumentsFilterBuilder_;
      }

      private java.util.List<java.lang.Integer> dealType_ =
        java.util.Collections.emptyList();
      private void ensureDealTypeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dealType_ = new java.util.ArrayList<java.lang.Integer>(dealType_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public java.util.List<kz.kase.iris.model.IrisApiDeals.DealType> getDealTypeList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, kz.kase.iris.model.IrisApiDeals.DealType>(dealType_, dealType_converter_);
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public int getDealTypeCount() {
        return dealType_.size();
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealType getDealType(int index) {
        return dealType_converter_.convert(dealType_.get(index));
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public Builder setDealType(
          int index, kz.kase.iris.model.IrisApiDeals.DealType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDealTypeIsMutable();
        dealType_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public Builder addDealType(kz.kase.iris.model.IrisApiDeals.DealType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDealTypeIsMutable();
        dealType_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public Builder addAllDealType(
          java.lang.Iterable<? extends kz.kase.iris.model.IrisApiDeals.DealType> values) {
        ensureDealTypeIsMutable();
        for (kz.kase.iris.model.IrisApiDeals.DealType value : values) {
          dealType_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public Builder clearDealType() {
        dealType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public java.util.List<java.lang.Integer>
      getDealTypeValueList() {
        return java.util.Collections.unmodifiableList(dealType_);
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public int getDealTypeValue(int index) {
        return dealType_.get(index);
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public Builder setDealTypeValue(
          int index, int value) {
        ensureDealTypeIsMutable();
        dealType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public Builder addDealTypeValue(int value) {
        ensureDealTypeIsMutable();
        dealType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых типов сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealType deal_type = 2;</code>
       */
      public Builder addAllDealTypeValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureDealTypeIsMutable();
        for (int value : values) {
          dealType_.add(value);
        }
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> marketSector_ =
        java.util.Collections.emptyList();
      private void ensureMarketSectorIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          marketSector_ = new java.util.ArrayList<java.lang.Integer>(marketSector_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public java.util.List<kz.kase.iris.model.IrisApiDeals.MarketSector> getMarketSectorList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, kz.kase.iris.model.IrisApiDeals.MarketSector>(marketSector_, marketSector_converter_);
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public int getMarketSectorCount() {
        return marketSector_.size();
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.MarketSector getMarketSector(int index) {
        return marketSector_converter_.convert(marketSector_.get(index));
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public Builder setMarketSector(
          int index, kz.kase.iris.model.IrisApiDeals.MarketSector value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarketSectorIsMutable();
        marketSector_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public Builder addMarketSector(kz.kase.iris.model.IrisApiDeals.MarketSector value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarketSectorIsMutable();
        marketSector_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public Builder addAllMarketSector(
          java.lang.Iterable<? extends kz.kase.iris.model.IrisApiDeals.MarketSector> values) {
        ensureMarketSectorIsMutable();
        for (kz.kase.iris.model.IrisApiDeals.MarketSector value : values) {
          marketSector_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public Builder clearMarketSector() {
        marketSector_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public java.util.List<java.lang.Integer>
      getMarketSectorValueList() {
        return java.util.Collections.unmodifiableList(marketSector_);
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public int getMarketSectorValue(int index) {
        return marketSector_.get(index);
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public Builder setMarketSectorValue(
          int index, int value) {
        ensureMarketSectorIsMutable();
        marketSector_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public Builder addMarketSectorValue(int value) {
        ensureMarketSectorIsMutable();
        marketSector_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Перечисление требуемых секторов рынка.
       * </pre>
       *
       * <code>repeated .IRIS.MarketSector market_sector = 3;</code>
       */
      public Builder addAllMarketSectorValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureMarketSectorIsMutable();
        for (int value : values) {
          marketSector_.add(value);
        }
        onChanged();
        return this;
      }

      private long versionFrom_ ;
      /**
       * <pre>
       * Версия начиная с которой требуются записи. Предполагается, что это ограничение будет использоваться совместно с указанием размера пакета (см. поле bandle в сообщении DealsRequest, &lt;xref linkend=".IRIS.DealsRequest"/&gt;).
       * </pre>
       *
       * <code>int64 version_from = 4;</code>
       */
      public long getVersionFrom() {
        return versionFrom_;
      }
      /**
       * <pre>
       * Версия начиная с которой требуются записи. Предполагается, что это ограничение будет использоваться совместно с указанием размера пакета (см. поле bandle в сообщении DealsRequest, &lt;xref linkend=".IRIS.DealsRequest"/&gt;).
       * </pre>
       *
       * <code>int64 version_from = 4;</code>
       */
      public Builder setVersionFrom(long value) {
        
        versionFrom_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Версия начиная с которой требуются записи. Предполагается, что это ограничение будет использоваться совместно с указанием размера пакета (см. поле bandle в сообщении DealsRequest, &lt;xref linkend=".IRIS.DealsRequest"/&gt;).
       * </pre>
       *
       * <code>int64 version_from = 4;</code>
       */
      public Builder clearVersionFrom() {
        
        versionFrom_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> dealsIds_ = java.util.Collections.emptyList();
      private void ensureDealsIdsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          dealsIds_ = new java.util.ArrayList<java.lang.Long>(dealsIds_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
       * </pre>
       *
       * <code>repeated int64 deals_ids = 5;</code>
       */
      public java.util.List<java.lang.Long>
          getDealsIdsList() {
        return java.util.Collections.unmodifiableList(dealsIds_);
      }
      /**
       * <pre>
       * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
       * </pre>
       *
       * <code>repeated int64 deals_ids = 5;</code>
       */
      public int getDealsIdsCount() {
        return dealsIds_.size();
      }
      /**
       * <pre>
       * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
       * </pre>
       *
       * <code>repeated int64 deals_ids = 5;</code>
       */
      public long getDealsIds(int index) {
        return dealsIds_.get(index);
      }
      /**
       * <pre>
       * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
       * </pre>
       *
       * <code>repeated int64 deals_ids = 5;</code>
       */
      public Builder setDealsIds(
          int index, long value) {
        ensureDealsIdsIsMutable();
        dealsIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
       * </pre>
       *
       * <code>repeated int64 deals_ids = 5;</code>
       */
      public Builder addDealsIds(long value) {
        ensureDealsIdsIsMutable();
        dealsIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
       * </pre>
       *
       * <code>repeated int64 deals_ids = 5;</code>
       */
      public Builder addAllDealsIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDealsIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dealsIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Список кодов сделок для которых требуется получить информацию. Предполагается использование совместно с DealsUpdate.
       * </pre>
       *
       * <code>repeated int64 deals_ids = 5;</code>
       */
      public Builder clearDealsIds() {
        dealsIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private boolean confirmed_ ;
      /**
       * <pre>
       * Если это поле заполнено как true, то будет выдан список только подтвержденных сделок. В противном случае следует обращать внимание на статус сделки передаваемый в поле state_id сообщения Deal.
       * </pre>
       *
       * <code>bool confirmed = 6;</code>
       */
      public boolean getConfirmed() {
        return confirmed_;
      }
      /**
       * <pre>
       * Если это поле заполнено как true, то будет выдан список только подтвержденных сделок. В противном случае следует обращать внимание на статус сделки передаваемый в поле state_id сообщения Deal.
       * </pre>
       *
       * <code>bool confirmed = 6;</code>
       */
      public Builder setConfirmed(boolean value) {
        
        confirmed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Если это поле заполнено как true, то будет выдан список только подтвержденных сделок. В противном случае следует обращать внимание на статус сделки передаваемый в поле state_id сообщения Deal.
       * </pre>
       *
       * <code>bool confirmed = 6;</code>
       */
      public Builder clearConfirmed() {
        
        confirmed_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsBaseFilter)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsBaseFilter)
    private static final kz.kase.iris.model.IrisApiDeals.DealsBaseFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.DealsBaseFilter();
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsBaseFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsBaseFilter>
        PARSER = new com.google.protobuf.AbstractParser<DealsBaseFilter>() {
      @java.lang.Override
      public DealsBaseFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsBaseFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsBaseFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsBaseFilter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.DealsBaseFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Период за который запрашивается список сделок.
     * </pre>
     *
     * <code>.IRIS.DatePeriod period = 1;</code>
     */
    boolean hasPeriod();
    /**
     * <pre>
     * Период за который запрашивается список сделок.
     * </pre>
     *
     * <code>.IRIS.DatePeriod period = 1;</code>
     */
    kz.kase.iris.model.IrisApiBase.DatePeriod getPeriod();
    /**
     * <pre>
     * Период за который запрашивается список сделок.
     * </pre>
     *
     * <code>.IRIS.DatePeriod period = 1;</code>
     */
    kz.kase.iris.model.IrisApiBase.DatePeriodOrBuilder getPeriodOrBuilder();

    /**
     * <pre>
     * Информация для фильтрации списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
     */
    boolean hasDealsFilter();
    /**
     * <pre>
     * Информация для фильтрации списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsBaseFilter getDealsFilter();
    /**
     * <pre>
     * Информация для фильтрации списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsBaseFilterOrBuilder getDealsFilterOrBuilder();
  }
  /**
   * <pre>
   * Информация для фильтрации списка сделок включая запрашиваемый период времени. 
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsFilter}
   */
  public  static final class DealsFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsFilter)
      DealsFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsFilter.newBuilder() to construct.
    private DealsFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsFilter() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              kz.kase.iris.model.IrisApiBase.DatePeriod.Builder subBuilder = null;
              if (period_ != null) {
                subBuilder = period_.toBuilder();
              }
              period_ = input.readMessage(kz.kase.iris.model.IrisApiBase.DatePeriod.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(period_);
                period_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.Builder subBuilder = null;
              if (dealsFilter_ != null) {
                subBuilder = dealsFilter_.toBuilder();
              }
              dealsFilter_ = input.readMessage(kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dealsFilter_);
                dealsFilter_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.DealsFilter.class, kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder.class);
    }

    public static final int PERIOD_FIELD_NUMBER = 1;
    private kz.kase.iris.model.IrisApiBase.DatePeriod period_;
    /**
     * <pre>
     * Период за который запрашивается список сделок.
     * </pre>
     *
     * <code>.IRIS.DatePeriod period = 1;</code>
     */
    public boolean hasPeriod() {
      return period_ != null;
    }
    /**
     * <pre>
     * Период за который запрашивается список сделок.
     * </pre>
     *
     * <code>.IRIS.DatePeriod period = 1;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DatePeriod getPeriod() {
      return period_ == null ? kz.kase.iris.model.IrisApiBase.DatePeriod.getDefaultInstance() : period_;
    }
    /**
     * <pre>
     * Период за который запрашивается список сделок.
     * </pre>
     *
     * <code>.IRIS.DatePeriod period = 1;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DatePeriodOrBuilder getPeriodOrBuilder() {
      return getPeriod();
    }

    public static final int DEALS_FILTER_FIELD_NUMBER = 2;
    private kz.kase.iris.model.IrisApiDeals.DealsBaseFilter dealsFilter_;
    /**
     * <pre>
     * Информация для фильтрации списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
     */
    public boolean hasDealsFilter() {
      return dealsFilter_ != null;
    }
    /**
     * <pre>
     * Информация для фильтрации списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsBaseFilter getDealsFilter() {
      return dealsFilter_ == null ? kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.getDefaultInstance() : dealsFilter_;
    }
    /**
     * <pre>
     * Информация для фильтрации списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsBaseFilterOrBuilder getDealsFilterOrBuilder() {
      return getDealsFilter();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (period_ != null) {
        output.writeMessage(1, getPeriod());
      }
      if (dealsFilter_ != null) {
        output.writeMessage(2, getDealsFilter());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (period_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPeriod());
      }
      if (dealsFilter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDealsFilter());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.DealsFilter)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.DealsFilter other = (kz.kase.iris.model.IrisApiDeals.DealsFilter) obj;

      boolean result = true;
      result = result && (hasPeriod() == other.hasPeriod());
      if (hasPeriod()) {
        result = result && getPeriod()
            .equals(other.getPeriod());
      }
      result = result && (hasDealsFilter() == other.hasDealsFilter());
      if (hasDealsFilter()) {
        result = result && getDealsFilter()
            .equals(other.getDealsFilter());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPeriod()) {
        hash = (37 * hash) + PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getPeriod().hashCode();
      }
      if (hasDealsFilter()) {
        hash = (37 * hash) + DEALS_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getDealsFilter().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.DealsFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Информация для фильтрации списка сделок включая запрашиваемый период времени. 
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsFilter)
        kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsFilter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.DealsFilter.class, kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.DealsFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (periodBuilder_ == null) {
          period_ = null;
        } else {
          period_ = null;
          periodBuilder_ = null;
        }
        if (dealsFilterBuilder_ == null) {
          dealsFilter_ = null;
        } else {
          dealsFilter_ = null;
          dealsFilterBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsFilter_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsFilter getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.DealsFilter.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsFilter build() {
        kz.kase.iris.model.IrisApiDeals.DealsFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsFilter buildPartial() {
        kz.kase.iris.model.IrisApiDeals.DealsFilter result = new kz.kase.iris.model.IrisApiDeals.DealsFilter(this);
        if (periodBuilder_ == null) {
          result.period_ = period_;
        } else {
          result.period_ = periodBuilder_.build();
        }
        if (dealsFilterBuilder_ == null) {
          result.dealsFilter_ = dealsFilter_;
        } else {
          result.dealsFilter_ = dealsFilterBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.DealsFilter) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.DealsFilter other) {
        if (other == kz.kase.iris.model.IrisApiDeals.DealsFilter.getDefaultInstance()) return this;
        if (other.hasPeriod()) {
          mergePeriod(other.getPeriod());
        }
        if (other.hasDealsFilter()) {
          mergeDealsFilter(other.getDealsFilter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.DealsFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.DealsFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private kz.kase.iris.model.IrisApiBase.DatePeriod period_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.DatePeriod, kz.kase.iris.model.IrisApiBase.DatePeriod.Builder, kz.kase.iris.model.IrisApiBase.DatePeriodOrBuilder> periodBuilder_;
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      public boolean hasPeriod() {
        return periodBuilder_ != null || period_ != null;
      }
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DatePeriod getPeriod() {
        if (periodBuilder_ == null) {
          return period_ == null ? kz.kase.iris.model.IrisApiBase.DatePeriod.getDefaultInstance() : period_;
        } else {
          return periodBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      public Builder setPeriod(kz.kase.iris.model.IrisApiBase.DatePeriod value) {
        if (periodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          period_ = value;
          onChanged();
        } else {
          periodBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      public Builder setPeriod(
          kz.kase.iris.model.IrisApiBase.DatePeriod.Builder builderForValue) {
        if (periodBuilder_ == null) {
          period_ = builderForValue.build();
          onChanged();
        } else {
          periodBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      public Builder mergePeriod(kz.kase.iris.model.IrisApiBase.DatePeriod value) {
        if (periodBuilder_ == null) {
          if (period_ != null) {
            period_ =
              kz.kase.iris.model.IrisApiBase.DatePeriod.newBuilder(period_).mergeFrom(value).buildPartial();
          } else {
            period_ = value;
          }
          onChanged();
        } else {
          periodBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      public Builder clearPeriod() {
        if (periodBuilder_ == null) {
          period_ = null;
          onChanged();
        } else {
          period_ = null;
          periodBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DatePeriod.Builder getPeriodBuilder() {
        
        onChanged();
        return getPeriodFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DatePeriodOrBuilder getPeriodOrBuilder() {
        if (periodBuilder_ != null) {
          return periodBuilder_.getMessageOrBuilder();
        } else {
          return period_ == null ?
              kz.kase.iris.model.IrisApiBase.DatePeriod.getDefaultInstance() : period_;
        }
      }
      /**
       * <pre>
       * Период за который запрашивается список сделок.
       * </pre>
       *
       * <code>.IRIS.DatePeriod period = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.DatePeriod, kz.kase.iris.model.IrisApiBase.DatePeriod.Builder, kz.kase.iris.model.IrisApiBase.DatePeriodOrBuilder> 
          getPeriodFieldBuilder() {
        if (periodBuilder_ == null) {
          periodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.DatePeriod, kz.kase.iris.model.IrisApiBase.DatePeriod.Builder, kz.kase.iris.model.IrisApiBase.DatePeriodOrBuilder>(
                  getPeriod(),
                  getParentForChildren(),
                  isClean());
          period_ = null;
        }
        return periodBuilder_;
      }

      private kz.kase.iris.model.IrisApiDeals.DealsBaseFilter dealsFilter_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsBaseFilter, kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsBaseFilterOrBuilder> dealsFilterBuilder_;
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      public boolean hasDealsFilter() {
        return dealsFilterBuilder_ != null || dealsFilter_ != null;
      }
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsBaseFilter getDealsFilter() {
        if (dealsFilterBuilder_ == null) {
          return dealsFilter_ == null ? kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.getDefaultInstance() : dealsFilter_;
        } else {
          return dealsFilterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      public Builder setDealsFilter(kz.kase.iris.model.IrisApiDeals.DealsBaseFilter value) {
        if (dealsFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dealsFilter_ = value;
          onChanged();
        } else {
          dealsFilterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      public Builder setDealsFilter(
          kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.Builder builderForValue) {
        if (dealsFilterBuilder_ == null) {
          dealsFilter_ = builderForValue.build();
          onChanged();
        } else {
          dealsFilterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      public Builder mergeDealsFilter(kz.kase.iris.model.IrisApiDeals.DealsBaseFilter value) {
        if (dealsFilterBuilder_ == null) {
          if (dealsFilter_ != null) {
            dealsFilter_ =
              kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.newBuilder(dealsFilter_).mergeFrom(value).buildPartial();
          } else {
            dealsFilter_ = value;
          }
          onChanged();
        } else {
          dealsFilterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      public Builder clearDealsFilter() {
        if (dealsFilterBuilder_ == null) {
          dealsFilter_ = null;
          onChanged();
        } else {
          dealsFilter_ = null;
          dealsFilterBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.Builder getDealsFilterBuilder() {
        
        onChanged();
        return getDealsFilterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsBaseFilterOrBuilder getDealsFilterOrBuilder() {
        if (dealsFilterBuilder_ != null) {
          return dealsFilterBuilder_.getMessageOrBuilder();
        } else {
          return dealsFilter_ == null ?
              kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.getDefaultInstance() : dealsFilter_;
        }
      }
      /**
       * <pre>
       * Информация для фильтрации списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsBaseFilter deals_filter = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsBaseFilter, kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsBaseFilterOrBuilder> 
          getDealsFilterFieldBuilder() {
        if (dealsFilterBuilder_ == null) {
          dealsFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.DealsBaseFilter, kz.kase.iris.model.IrisApiDeals.DealsBaseFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsBaseFilterOrBuilder>(
                  getDealsFilter(),
                  getParentForChildren(),
                  isClean());
          dealsFilter_ = null;
        }
        return dealsFilterBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsFilter)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsFilter)
    private static final kz.kase.iris.model.IrisApiDeals.DealsFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.DealsFilter();
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsFilter>
        PARSER = new com.google.protobuf.AbstractParser<DealsFilter>() {
      @java.lang.Override
      public DealsFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsFilter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.DealsFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsSortRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsSortRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Поле по которому требуется сортировка.
     * </pre>
     *
     * <code>.IRIS.DealsSortField field = 1;</code>
     */
    int getFieldValue();
    /**
     * <pre>
     * Поле по которому требуется сортировка.
     * </pre>
     *
     * <code>.IRIS.DealsSortField field = 1;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsSortField getField();

    /**
     * <pre>
     * Направление сортировки. Если указано true - требуется сортировка в обратном порядке.
     * </pre>
     *
     * <code>bool desc = 2;</code>
     */
    boolean getDesc();
  }
  /**
   * <pre>
   * Информация для сортировки списка сделок 
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsSortRecord}
   */
  public  static final class DealsSortRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsSortRecord)
      DealsSortRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsSortRecord.newBuilder() to construct.
    private DealsSortRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsSortRecord() {
      field_ = 0;
      desc_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsSortRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              field_ = rawValue;
              break;
            }
            case 16: {

              desc_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsSortRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsSortRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.DealsSortRecord.class, kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder.class);
    }

    public static final int FIELD_FIELD_NUMBER = 1;
    private int field_;
    /**
     * <pre>
     * Поле по которому требуется сортировка.
     * </pre>
     *
     * <code>.IRIS.DealsSortField field = 1;</code>
     */
    public int getFieldValue() {
      return field_;
    }
    /**
     * <pre>
     * Поле по которому требуется сортировка.
     * </pre>
     *
     * <code>.IRIS.DealsSortField field = 1;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsSortField getField() {
      @SuppressWarnings("deprecation")
      kz.kase.iris.model.IrisApiDeals.DealsSortField result = kz.kase.iris.model.IrisApiDeals.DealsSortField.valueOf(field_);
      return result == null ? kz.kase.iris.model.IrisApiDeals.DealsSortField.UNRECOGNIZED : result;
    }

    public static final int DESC_FIELD_NUMBER = 2;
    private boolean desc_;
    /**
     * <pre>
     * Направление сортировки. Если указано true - требуется сортировка в обратном порядке.
     * </pre>
     *
     * <code>bool desc = 2;</code>
     */
    public boolean getDesc() {
      return desc_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (field_ != kz.kase.iris.model.IrisApiDeals.DealsSortField.DSF_DEAL_TIME.getNumber()) {
        output.writeEnum(1, field_);
      }
      if (desc_ != false) {
        output.writeBool(2, desc_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (field_ != kz.kase.iris.model.IrisApiDeals.DealsSortField.DSF_DEAL_TIME.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, field_);
      }
      if (desc_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, desc_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.DealsSortRecord)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.DealsSortRecord other = (kz.kase.iris.model.IrisApiDeals.DealsSortRecord) obj;

      boolean result = true;
      result = result && field_ == other.field_;
      result = result && (getDesc()
          == other.getDesc());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FIELD_FIELD_NUMBER;
      hash = (53 * hash) + field_;
      hash = (37 * hash) + DESC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDesc());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.DealsSortRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Информация для сортировки списка сделок 
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsSortRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsSortRecord)
        kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsSortRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsSortRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.DealsSortRecord.class, kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.DealsSortRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        field_ = 0;

        desc_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsSortRecord_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsSortRecord getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.DealsSortRecord.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsSortRecord build() {
        kz.kase.iris.model.IrisApiDeals.DealsSortRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsSortRecord buildPartial() {
        kz.kase.iris.model.IrisApiDeals.DealsSortRecord result = new kz.kase.iris.model.IrisApiDeals.DealsSortRecord(this);
        result.field_ = field_;
        result.desc_ = desc_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.DealsSortRecord) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsSortRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.DealsSortRecord other) {
        if (other == kz.kase.iris.model.IrisApiDeals.DealsSortRecord.getDefaultInstance()) return this;
        if (other.field_ != 0) {
          setFieldValue(other.getFieldValue());
        }
        if (other.getDesc() != false) {
          setDesc(other.getDesc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.DealsSortRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.DealsSortRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int field_ = 0;
      /**
       * <pre>
       * Поле по которому требуется сортировка.
       * </pre>
       *
       * <code>.IRIS.DealsSortField field = 1;</code>
       */
      public int getFieldValue() {
        return field_;
      }
      /**
       * <pre>
       * Поле по которому требуется сортировка.
       * </pre>
       *
       * <code>.IRIS.DealsSortField field = 1;</code>
       */
      public Builder setFieldValue(int value) {
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Поле по которому требуется сортировка.
       * </pre>
       *
       * <code>.IRIS.DealsSortField field = 1;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsSortField getField() {
        @SuppressWarnings("deprecation")
        kz.kase.iris.model.IrisApiDeals.DealsSortField result = kz.kase.iris.model.IrisApiDeals.DealsSortField.valueOf(field_);
        return result == null ? kz.kase.iris.model.IrisApiDeals.DealsSortField.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Поле по которому требуется сортировка.
       * </pre>
       *
       * <code>.IRIS.DealsSortField field = 1;</code>
       */
      public Builder setField(kz.kase.iris.model.IrisApiDeals.DealsSortField value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        field_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Поле по которому требуется сортировка.
       * </pre>
       *
       * <code>.IRIS.DealsSortField field = 1;</code>
       */
      public Builder clearField() {
        
        field_ = 0;
        onChanged();
        return this;
      }

      private boolean desc_ ;
      /**
       * <pre>
       * Направление сортировки. Если указано true - требуется сортировка в обратном порядке.
       * </pre>
       *
       * <code>bool desc = 2;</code>
       */
      public boolean getDesc() {
        return desc_;
      }
      /**
       * <pre>
       * Направление сортировки. Если указано true - требуется сортировка в обратном порядке.
       * </pre>
       *
       * <code>bool desc = 2;</code>
       */
      public Builder setDesc(boolean value) {
        
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Направление сортировки. Если указано true - требуется сортировка в обратном порядке.
       * </pre>
       *
       * <code>bool desc = 2;</code>
       */
      public Builder clearDesc() {
        
        desc_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsSortRecord)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsSortRecord)
    private static final kz.kase.iris.model.IrisApiDeals.DealsSortRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.DealsSortRecord();
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsSortRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsSortRecord>
        PARSER = new com.google.protobuf.AbstractParser<DealsSortRecord>() {
      @java.lang.Override
      public DealsSortRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsSortRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsSortRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsSortRecord> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.DealsSortRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsCountRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsCountRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    boolean hasFilter();
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsFilter getFilter();
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder getFilterOrBuilder();
  }
  /**
   * <pre>
   **
   * Запрос на получение информации о количестве сделок подходящих под условия фильтрации.
   * Примечание: Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsCountRequest}
   */
  public  static final class DealsCountRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsCountRequest)
      DealsCountRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsCountRequest.newBuilder() to construct.
    private DealsCountRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsCountRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsCountRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder subBuilder = null;
              if (filter_ != null) {
                subBuilder = filter_.toBuilder();
              }
              filter_ = input.readMessage(kz.kase.iris.model.IrisApiDeals.DealsFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filter_);
                filter_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.DealsCountRequest.class, kz.kase.iris.model.IrisApiDeals.DealsCountRequest.Builder.class);
    }

    public static final int FILTER_FIELD_NUMBER = 1;
    private kz.kase.iris.model.IrisApiDeals.DealsFilter filter_;
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    public boolean hasFilter() {
      return filter_ != null;
    }
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsFilter getFilter() {
      return filter_ == null ? kz.kase.iris.model.IrisApiDeals.DealsFilter.getDefaultInstance() : filter_;
    }
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder getFilterOrBuilder() {
      return getFilter();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (filter_ != null) {
        output.writeMessage(1, getFilter());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (filter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFilter());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.DealsCountRequest)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.DealsCountRequest other = (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) obj;

      boolean result = true;
      result = result && (hasFilter() == other.hasFilter());
      if (hasFilter()) {
        result = result && getFilter()
            .equals(other.getFilter());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFilter()) {
        hash = (37 * hash) + FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getFilter().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.DealsCountRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Запрос на получение информации о количестве сделок подходящих под условия фильтрации.
     * Примечание: Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsCountRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsCountRequest)
        kz.kase.iris.model.IrisApiDeals.DealsCountRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.DealsCountRequest.class, kz.kase.iris.model.IrisApiDeals.DealsCountRequest.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.DealsCountRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (filterBuilder_ == null) {
          filter_ = null;
        } else {
          filter_ = null;
          filterBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountRequest_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsCountRequest getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsCountRequest build() {
        kz.kase.iris.model.IrisApiDeals.DealsCountRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsCountRequest buildPartial() {
        kz.kase.iris.model.IrisApiDeals.DealsCountRequest result = new kz.kase.iris.model.IrisApiDeals.DealsCountRequest(this);
        if (filterBuilder_ == null) {
          result.filter_ = filter_;
        } else {
          result.filter_ = filterBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.DealsCountRequest) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsCountRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.DealsCountRequest other) {
        if (other == kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance()) return this;
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.DealsCountRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private kz.kase.iris.model.IrisApiDeals.DealsFilter filter_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsFilter, kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder> filterBuilder_;
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public boolean hasFilter() {
        return filterBuilder_ != null || filter_ != null;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsFilter getFilter() {
        if (filterBuilder_ == null) {
          return filter_ == null ? kz.kase.iris.model.IrisApiDeals.DealsFilter.getDefaultInstance() : filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public Builder setFilter(kz.kase.iris.model.IrisApiDeals.DealsFilter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
          onChanged();
        } else {
          filterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public Builder setFilter(
          kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
          onChanged();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public Builder mergeFilter(kz.kase.iris.model.IrisApiDeals.DealsFilter value) {
        if (filterBuilder_ == null) {
          if (filter_ != null) {
            filter_ =
              kz.kase.iris.model.IrisApiDeals.DealsFilter.newBuilder(filter_).mergeFrom(value).buildPartial();
          } else {
            filter_ = value;
          }
          onChanged();
        } else {
          filterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          filter_ = null;
          onChanged();
        } else {
          filter_ = null;
          filterBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder getFilterBuilder() {
        
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_ == null ?
              kz.kase.iris.model.IrisApiDeals.DealsFilter.getDefaultInstance() : filter_;
        }
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsFilter, kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder> 
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.DealsFilter, kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder>(
                  getFilter(),
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsCountRequest)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsCountRequest)
    private static final kz.kase.iris.model.IrisApiDeals.DealsCountRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.DealsCountRequest();
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsCountRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsCountRequest>
        PARSER = new com.google.protobuf.AbstractParser<DealsCountRequest>() {
      @java.lang.Override
      public DealsCountRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsCountRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsCountRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsCountRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.DealsCountRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsCountReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsCountReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Количество записей подходящих под условие фильтрации.
     * Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     * </pre>
     *
     * <code>int32 count = 1;</code>
     */
    int getCount();
  }
  /**
   * <pre>
   * Ответ с информацией о количестве сделок. 
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsCountReply}
   */
  public  static final class DealsCountReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsCountReply)
      DealsCountReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsCountReply.newBuilder() to construct.
    private DealsCountReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsCountReply() {
      count_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsCountReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              count_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.DealsCountReply.class, kz.kase.iris.model.IrisApiDeals.DealsCountReply.Builder.class);
    }

    public static final int COUNT_FIELD_NUMBER = 1;
    private int count_;
    /**
     * <pre>
     * Количество записей подходящих под условие фильтрации.
     * Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
     * </pre>
     *
     * <code>int32 count = 1;</code>
     */
    public int getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (count_ != 0) {
        output.writeInt32(1, count_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, count_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.DealsCountReply)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.DealsCountReply other = (kz.kase.iris.model.IrisApiDeals.DealsCountReply) obj;

      boolean result = true;
      result = result && (getCount()
          == other.getCount());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.DealsCountReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Ответ с информацией о количестве сделок. 
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsCountReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsCountReply)
        kz.kase.iris.model.IrisApiDeals.DealsCountReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.DealsCountReply.class, kz.kase.iris.model.IrisApiDeals.DealsCountReply.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.DealsCountReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        count_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsCountReply_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsCountReply getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsCountReply build() {
        kz.kase.iris.model.IrisApiDeals.DealsCountReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsCountReply buildPartial() {
        kz.kase.iris.model.IrisApiDeals.DealsCountReply result = new kz.kase.iris.model.IrisApiDeals.DealsCountReply(this);
        result.count_ = count_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.DealsCountReply) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsCountReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.DealsCountReply other) {
        if (other == kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance()) return this;
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.DealsCountReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.DealsCountReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int count_ ;
      /**
       * <pre>
       * Количество записей подходящих под условие фильтрации.
       * Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
       * </pre>
       *
       * <code>int32 count = 1;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <pre>
       * Количество записей подходящих под условие фильтрации.
       * Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
       * </pre>
       *
       * <code>int32 count = 1;</code>
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Количество записей подходящих под условие фильтрации.
       * Возвращаемое количество учитывает не только ограничения заданные в фильтре, но и ограничения наложенные на выполняющего запрос пользователя.
       * </pre>
       *
       * <code>int32 count = 1;</code>
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsCountReply)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsCountReply)
    private static final kz.kase.iris.model.IrisApiDeals.DealsCountReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.DealsCountReply();
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsCountReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsCountReply>
        PARSER = new com.google.protobuf.AbstractParser<DealsCountReply>() {
      @java.lang.Override
      public DealsCountReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsCountReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsCountReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsCountReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.DealsCountReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    boolean hasFilter();
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsFilter getFilter();
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder getFilterOrBuilder();

    /**
     * <pre>
     * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
     * Взаимоисключаемо с bandle.
     * </pre>
     *
     * <code>.IRIS.Range range = 2;</code>
     */
    boolean hasRange();
    /**
     * <pre>
     * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
     * Взаимоисключаемо с bandle.
     * </pre>
     *
     * <code>.IRIS.Range range = 2;</code>
     */
    kz.kase.iris.model.IrisApiBase.Range getRange();
    /**
     * <pre>
     * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
     * Взаимоисключаемо с bandle.
     * </pre>
     *
     * <code>.IRIS.Range range = 2;</code>
     */
    kz.kase.iris.model.IrisApiBase.RangeOrBuilder getRangeOrBuilder();

    /**
     * <pre>
     * Указание размера передаваемых пакетов записей. В ответ на запрос будут переданы все записи подходящие под заданный фильтр пакетами указанного в параметре размера.
     * Взаимоисключаемо с range.
     * </pre>
     *
     * <code>int32 bandle = 3;</code>
     */
    int getBandle();

    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    java.util.List<kz.kase.iris.model.IrisApiDeals.DealsSortRecord> 
        getSortingList();
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsSortRecord getSorting(int index);
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    int getSortingCount();
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    java.util.List<? extends kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder> 
        getSortingOrBuilderList();
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder getSortingOrBuilder(
        int index);

    public kz.kase.iris.model.IrisApiDeals.DealsRequest.RecordsCase getRecordsCase();
  }
  /**
   * <pre>
   * Запрос на получение информации о сделках. 
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsRequest}
   */
  public  static final class DealsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsRequest)
      DealsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsRequest.newBuilder() to construct.
    private DealsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsRequest() {
      sorting_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder subBuilder = null;
              if (filter_ != null) {
                subBuilder = filter_.toBuilder();
              }
              filter_ = input.readMessage(kz.kase.iris.model.IrisApiDeals.DealsFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filter_);
                filter_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiBase.Range.Builder subBuilder = null;
              if (recordsCase_ == 2) {
                subBuilder = ((kz.kase.iris.model.IrisApiBase.Range) records_).toBuilder();
              }
              records_ =
                  input.readMessage(kz.kase.iris.model.IrisApiBase.Range.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiBase.Range) records_);
                records_ = subBuilder.buildPartial();
              }
              recordsCase_ = 2;
              break;
            }
            case 24: {
              recordsCase_ = 3;
              records_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                sorting_ = new java.util.ArrayList<kz.kase.iris.model.IrisApiDeals.DealsSortRecord>();
                mutable_bitField0_ |= 0x00000008;
              }
              sorting_.add(
                  input.readMessage(kz.kase.iris.model.IrisApiDeals.DealsSortRecord.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          sorting_ = java.util.Collections.unmodifiableList(sorting_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.DealsRequest.class, kz.kase.iris.model.IrisApiDeals.DealsRequest.Builder.class);
    }

    private int bitField0_;
    private int recordsCase_ = 0;
    private java.lang.Object records_;
    public enum RecordsCase
        implements com.google.protobuf.Internal.EnumLite {
      RANGE(2),
      BANDLE(3),
      RECORDS_NOT_SET(0);
      private final int value;
      private RecordsCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RecordsCase valueOf(int value) {
        return forNumber(value);
      }

      public static RecordsCase forNumber(int value) {
        switch (value) {
          case 2: return RANGE;
          case 3: return BANDLE;
          case 0: return RECORDS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RecordsCase
    getRecordsCase() {
      return RecordsCase.forNumber(
          recordsCase_);
    }

    public static final int FILTER_FIELD_NUMBER = 1;
    private kz.kase.iris.model.IrisApiDeals.DealsFilter filter_;
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    public boolean hasFilter() {
      return filter_ != null;
    }
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsFilter getFilter() {
      return filter_ == null ? kz.kase.iris.model.IrisApiDeals.DealsFilter.getDefaultInstance() : filter_;
    }
    /**
     * <pre>
     * Фильтр для запрашиваемого списка сделок.
     * </pre>
     *
     * <code>.IRIS.DealsFilter filter = 1;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder getFilterOrBuilder() {
      return getFilter();
    }

    public static final int RANGE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
     * Взаимоисключаемо с bandle.
     * </pre>
     *
     * <code>.IRIS.Range range = 2;</code>
     */
    public boolean hasRange() {
      return recordsCase_ == 2;
    }
    /**
     * <pre>
     * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
     * Взаимоисключаемо с bandle.
     * </pre>
     *
     * <code>.IRIS.Range range = 2;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Range getRange() {
      if (recordsCase_ == 2) {
         return (kz.kase.iris.model.IrisApiBase.Range) records_;
      }
      return kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance();
    }
    /**
     * <pre>
     * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
     * Взаимоисключаемо с bandle.
     * </pre>
     *
     * <code>.IRIS.Range range = 2;</code>
     */
    public kz.kase.iris.model.IrisApiBase.RangeOrBuilder getRangeOrBuilder() {
      if (recordsCase_ == 2) {
         return (kz.kase.iris.model.IrisApiBase.Range) records_;
      }
      return kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance();
    }

    public static final int BANDLE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Указание размера передаваемых пакетов записей. В ответ на запрос будут переданы все записи подходящие под заданный фильтр пакетами указанного в параметре размера.
     * Взаимоисключаемо с range.
     * </pre>
     *
     * <code>int32 bandle = 3;</code>
     */
    public int getBandle() {
      if (recordsCase_ == 3) {
        return (java.lang.Integer) records_;
      }
      return 0;
    }

    public static final int SORTING_FIELD_NUMBER = 5;
    private java.util.List<kz.kase.iris.model.IrisApiDeals.DealsSortRecord> sorting_;
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    public java.util.List<kz.kase.iris.model.IrisApiDeals.DealsSortRecord> getSortingList() {
      return sorting_;
    }
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    public java.util.List<? extends kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder> 
        getSortingOrBuilderList() {
      return sorting_;
    }
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    public int getSortingCount() {
      return sorting_.size();
    }
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsSortRecord getSorting(int index) {
      return sorting_.get(index);
    }
    /**
     * <pre>
     * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
     * </pre>
     *
     * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder getSortingOrBuilder(
        int index) {
      return sorting_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (filter_ != null) {
        output.writeMessage(1, getFilter());
      }
      if (recordsCase_ == 2) {
        output.writeMessage(2, (kz.kase.iris.model.IrisApiBase.Range) records_);
      }
      if (recordsCase_ == 3) {
        output.writeInt32(
            3, (int)((java.lang.Integer) records_));
      }
      for (int i = 0; i < sorting_.size(); i++) {
        output.writeMessage(5, sorting_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (filter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFilter());
      }
      if (recordsCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (kz.kase.iris.model.IrisApiBase.Range) records_);
      }
      if (recordsCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              3, (int)((java.lang.Integer) records_));
      }
      for (int i = 0; i < sorting_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sorting_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.DealsRequest)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.DealsRequest other = (kz.kase.iris.model.IrisApiDeals.DealsRequest) obj;

      boolean result = true;
      result = result && (hasFilter() == other.hasFilter());
      if (hasFilter()) {
        result = result && getFilter()
            .equals(other.getFilter());
      }
      result = result && getSortingList()
          .equals(other.getSortingList());
      result = result && getRecordsCase().equals(
          other.getRecordsCase());
      if (!result) return false;
      switch (recordsCase_) {
        case 2:
          result = result && getRange()
              .equals(other.getRange());
          break;
        case 3:
          result = result && (getBandle()
              == other.getBandle());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFilter()) {
        hash = (37 * hash) + FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getFilter().hashCode();
      }
      if (getSortingCount() > 0) {
        hash = (37 * hash) + SORTING_FIELD_NUMBER;
        hash = (53 * hash) + getSortingList().hashCode();
      }
      switch (recordsCase_) {
        case 2:
          hash = (37 * hash) + RANGE_FIELD_NUMBER;
          hash = (53 * hash) + getRange().hashCode();
          break;
        case 3:
          hash = (37 * hash) + BANDLE_FIELD_NUMBER;
          hash = (53 * hash) + getBandle();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.DealsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Запрос на получение информации о сделках. 
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsRequest)
        kz.kase.iris.model.IrisApiDeals.DealsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.DealsRequest.class, kz.kase.iris.model.IrisApiDeals.DealsRequest.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.DealsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSortingFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (filterBuilder_ == null) {
          filter_ = null;
        } else {
          filter_ = null;
          filterBuilder_ = null;
        }
        if (sortingBuilder_ == null) {
          sorting_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          sortingBuilder_.clear();
        }
        recordsCase_ = 0;
        records_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsRequest_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsRequest getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsRequest build() {
        kz.kase.iris.model.IrisApiDeals.DealsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsRequest buildPartial() {
        kz.kase.iris.model.IrisApiDeals.DealsRequest result = new kz.kase.iris.model.IrisApiDeals.DealsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (filterBuilder_ == null) {
          result.filter_ = filter_;
        } else {
          result.filter_ = filterBuilder_.build();
        }
        if (recordsCase_ == 2) {
          if (rangeBuilder_ == null) {
            result.records_ = records_;
          } else {
            result.records_ = rangeBuilder_.build();
          }
        }
        if (recordsCase_ == 3) {
          result.records_ = records_;
        }
        if (sortingBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            sorting_ = java.util.Collections.unmodifiableList(sorting_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sorting_ = sorting_;
        } else {
          result.sorting_ = sortingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.recordsCase_ = recordsCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.DealsRequest) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.DealsRequest other) {
        if (other == kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance()) return this;
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        if (sortingBuilder_ == null) {
          if (!other.sorting_.isEmpty()) {
            if (sorting_.isEmpty()) {
              sorting_ = other.sorting_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSortingIsMutable();
              sorting_.addAll(other.sorting_);
            }
            onChanged();
          }
        } else {
          if (!other.sorting_.isEmpty()) {
            if (sortingBuilder_.isEmpty()) {
              sortingBuilder_.dispose();
              sortingBuilder_ = null;
              sorting_ = other.sorting_;
              bitField0_ = (bitField0_ & ~0x00000008);
              sortingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSortingFieldBuilder() : null;
            } else {
              sortingBuilder_.addAllMessages(other.sorting_);
            }
          }
        }
        switch (other.getRecordsCase()) {
          case RANGE: {
            mergeRange(other.getRange());
            break;
          }
          case BANDLE: {
            setBandle(other.getBandle());
            break;
          }
          case RECORDS_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.DealsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.DealsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int recordsCase_ = 0;
      private java.lang.Object records_;
      public RecordsCase
          getRecordsCase() {
        return RecordsCase.forNumber(
            recordsCase_);
      }

      public Builder clearRecords() {
        recordsCase_ = 0;
        records_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private kz.kase.iris.model.IrisApiDeals.DealsFilter filter_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsFilter, kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder> filterBuilder_;
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public boolean hasFilter() {
        return filterBuilder_ != null || filter_ != null;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsFilter getFilter() {
        if (filterBuilder_ == null) {
          return filter_ == null ? kz.kase.iris.model.IrisApiDeals.DealsFilter.getDefaultInstance() : filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public Builder setFilter(kz.kase.iris.model.IrisApiDeals.DealsFilter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
          onChanged();
        } else {
          filterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public Builder setFilter(
          kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
          onChanged();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public Builder mergeFilter(kz.kase.iris.model.IrisApiDeals.DealsFilter value) {
        if (filterBuilder_ == null) {
          if (filter_ != null) {
            filter_ =
              kz.kase.iris.model.IrisApiDeals.DealsFilter.newBuilder(filter_).mergeFrom(value).buildPartial();
          } else {
            filter_ = value;
          }
          onChanged();
        } else {
          filterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          filter_ = null;
          onChanged();
        } else {
          filter_ = null;
          filterBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder getFilterBuilder() {
        
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_ == null ?
              kz.kase.iris.model.IrisApiDeals.DealsFilter.getDefaultInstance() : filter_;
        }
      }
      /**
       * <pre>
       * Фильтр для запрашиваемого списка сделок.
       * </pre>
       *
       * <code>.IRIS.DealsFilter filter = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsFilter, kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder> 
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.DealsFilter, kz.kase.iris.model.IrisApiDeals.DealsFilter.Builder, kz.kase.iris.model.IrisApiDeals.DealsFilterOrBuilder>(
                  getFilter(),
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Range, kz.kase.iris.model.IrisApiBase.Range.Builder, kz.kase.iris.model.IrisApiBase.RangeOrBuilder> rangeBuilder_;
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      public boolean hasRange() {
        return recordsCase_ == 2;
      }
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Range getRange() {
        if (rangeBuilder_ == null) {
          if (recordsCase_ == 2) {
            return (kz.kase.iris.model.IrisApiBase.Range) records_;
          }
          return kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance();
        } else {
          if (recordsCase_ == 2) {
            return rangeBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      public Builder setRange(kz.kase.iris.model.IrisApiBase.Range value) {
        if (rangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          records_ = value;
          onChanged();
        } else {
          rangeBuilder_.setMessage(value);
        }
        recordsCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      public Builder setRange(
          kz.kase.iris.model.IrisApiBase.Range.Builder builderForValue) {
        if (rangeBuilder_ == null) {
          records_ = builderForValue.build();
          onChanged();
        } else {
          rangeBuilder_.setMessage(builderForValue.build());
        }
        recordsCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      public Builder mergeRange(kz.kase.iris.model.IrisApiBase.Range value) {
        if (rangeBuilder_ == null) {
          if (recordsCase_ == 2 &&
              records_ != kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance()) {
            records_ = kz.kase.iris.model.IrisApiBase.Range.newBuilder((kz.kase.iris.model.IrisApiBase.Range) records_)
                .mergeFrom(value).buildPartial();
          } else {
            records_ = value;
          }
          onChanged();
        } else {
          if (recordsCase_ == 2) {
            rangeBuilder_.mergeFrom(value);
          }
          rangeBuilder_.setMessage(value);
        }
        recordsCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      public Builder clearRange() {
        if (rangeBuilder_ == null) {
          if (recordsCase_ == 2) {
            recordsCase_ = 0;
            records_ = null;
            onChanged();
          }
        } else {
          if (recordsCase_ == 2) {
            recordsCase_ = 0;
            records_ = null;
          }
          rangeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Range.Builder getRangeBuilder() {
        return getRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      public kz.kase.iris.model.IrisApiBase.RangeOrBuilder getRangeOrBuilder() {
        if ((recordsCase_ == 2) && (rangeBuilder_ != null)) {
          return rangeBuilder_.getMessageOrBuilder();
        } else {
          if (recordsCase_ == 2) {
            return (kz.kase.iris.model.IrisApiBase.Range) records_;
          }
          return kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Указание требуемого диапазона записей. В ответ на запрос будут переданы записи подходящие под заданный фильтр и входящие в указанный в параметре диапазон.
       * Взаимоисключаемо с bandle.
       * </pre>
       *
       * <code>.IRIS.Range range = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Range, kz.kase.iris.model.IrisApiBase.Range.Builder, kz.kase.iris.model.IrisApiBase.RangeOrBuilder> 
          getRangeFieldBuilder() {
        if (rangeBuilder_ == null) {
          if (!(recordsCase_ == 2)) {
            records_ = kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance();
          }
          rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Range, kz.kase.iris.model.IrisApiBase.Range.Builder, kz.kase.iris.model.IrisApiBase.RangeOrBuilder>(
                  (kz.kase.iris.model.IrisApiBase.Range) records_,
                  getParentForChildren(),
                  isClean());
          records_ = null;
        }
        recordsCase_ = 2;
        onChanged();;
        return rangeBuilder_;
      }

      /**
       * <pre>
       * Указание размера передаваемых пакетов записей. В ответ на запрос будут переданы все записи подходящие под заданный фильтр пакетами указанного в параметре размера.
       * Взаимоисключаемо с range.
       * </pre>
       *
       * <code>int32 bandle = 3;</code>
       */
      public int getBandle() {
        if (recordsCase_ == 3) {
          return (java.lang.Integer) records_;
        }
        return 0;
      }
      /**
       * <pre>
       * Указание размера передаваемых пакетов записей. В ответ на запрос будут переданы все записи подходящие под заданный фильтр пакетами указанного в параметре размера.
       * Взаимоисключаемо с range.
       * </pre>
       *
       * <code>int32 bandle = 3;</code>
       */
      public Builder setBandle(int value) {
        recordsCase_ = 3;
        records_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Указание размера передаваемых пакетов записей. В ответ на запрос будут переданы все записи подходящие под заданный фильтр пакетами указанного в параметре размера.
       * Взаимоисключаемо с range.
       * </pre>
       *
       * <code>int32 bandle = 3;</code>
       */
      public Builder clearBandle() {
        if (recordsCase_ == 3) {
          recordsCase_ = 0;
          records_ = null;
          onChanged();
        }
        return this;
      }

      private java.util.List<kz.kase.iris.model.IrisApiDeals.DealsSortRecord> sorting_ =
        java.util.Collections.emptyList();
      private void ensureSortingIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          sorting_ = new java.util.ArrayList<kz.kase.iris.model.IrisApiDeals.DealsSortRecord>(sorting_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsSortRecord, kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder, kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder> sortingBuilder_;

      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public java.util.List<kz.kase.iris.model.IrisApiDeals.DealsSortRecord> getSortingList() {
        if (sortingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sorting_);
        } else {
          return sortingBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public int getSortingCount() {
        if (sortingBuilder_ == null) {
          return sorting_.size();
        } else {
          return sortingBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsSortRecord getSorting(int index) {
        if (sortingBuilder_ == null) {
          return sorting_.get(index);
        } else {
          return sortingBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder setSorting(
          int index, kz.kase.iris.model.IrisApiDeals.DealsSortRecord value) {
        if (sortingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSortingIsMutable();
          sorting_.set(index, value);
          onChanged();
        } else {
          sortingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder setSorting(
          int index, kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder builderForValue) {
        if (sortingBuilder_ == null) {
          ensureSortingIsMutable();
          sorting_.set(index, builderForValue.build());
          onChanged();
        } else {
          sortingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder addSorting(kz.kase.iris.model.IrisApiDeals.DealsSortRecord value) {
        if (sortingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSortingIsMutable();
          sorting_.add(value);
          onChanged();
        } else {
          sortingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder addSorting(
          int index, kz.kase.iris.model.IrisApiDeals.DealsSortRecord value) {
        if (sortingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSortingIsMutable();
          sorting_.add(index, value);
          onChanged();
        } else {
          sortingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder addSorting(
          kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder builderForValue) {
        if (sortingBuilder_ == null) {
          ensureSortingIsMutable();
          sorting_.add(builderForValue.build());
          onChanged();
        } else {
          sortingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder addSorting(
          int index, kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder builderForValue) {
        if (sortingBuilder_ == null) {
          ensureSortingIsMutable();
          sorting_.add(index, builderForValue.build());
          onChanged();
        } else {
          sortingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder addAllSorting(
          java.lang.Iterable<? extends kz.kase.iris.model.IrisApiDeals.DealsSortRecord> values) {
        if (sortingBuilder_ == null) {
          ensureSortingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sorting_);
          onChanged();
        } else {
          sortingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder clearSorting() {
        if (sortingBuilder_ == null) {
          sorting_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          sortingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public Builder removeSorting(int index) {
        if (sortingBuilder_ == null) {
          ensureSortingIsMutable();
          sorting_.remove(index);
          onChanged();
        } else {
          sortingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder getSortingBuilder(
          int index) {
        return getSortingFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder getSortingOrBuilder(
          int index) {
        if (sortingBuilder_ == null) {
          return sorting_.get(index);  } else {
          return sortingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public java.util.List<? extends kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder> 
           getSortingOrBuilderList() {
        if (sortingBuilder_ != null) {
          return sortingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sorting_);
        }
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder addSortingBuilder() {
        return getSortingFieldBuilder().addBuilder(
            kz.kase.iris.model.IrisApiDeals.DealsSortRecord.getDefaultInstance());
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder addSortingBuilder(
          int index) {
        return getSortingFieldBuilder().addBuilder(
            index, kz.kase.iris.model.IrisApiDeals.DealsSortRecord.getDefaultInstance());
      }
      /**
       * <pre>
       * Перечисление полей по которым требуется сортировка запрашиваемого списка сделок.
       * </pre>
       *
       * <code>repeated .IRIS.DealsSortRecord sorting = 5;</code>
       */
      public java.util.List<kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder> 
           getSortingBuilderList() {
        return getSortingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsSortRecord, kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder, kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder> 
          getSortingFieldBuilder() {
        if (sortingBuilder_ == null) {
          sortingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.DealsSortRecord, kz.kase.iris.model.IrisApiDeals.DealsSortRecord.Builder, kz.kase.iris.model.IrisApiDeals.DealsSortRecordOrBuilder>(
                  sorting_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          sorting_ = null;
        }
        return sortingBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsRequest)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsRequest)
    private static final kz.kase.iris.model.IrisApiDeals.DealsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.DealsRequest();
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsRequest>
        PARSER = new com.google.protobuf.AbstractParser<DealsRequest>() {
      @java.lang.Override
      public DealsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.DealsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Диапазон записей в ответе.
     * </pre>
     *
     * <code>.IRIS.Range range = 1;</code>
     */
    boolean hasRange();
    /**
     * <pre>
     * Диапазон записей в ответе.
     * </pre>
     *
     * <code>.IRIS.Range range = 1;</code>
     */
    kz.kase.iris.model.IrisApiBase.Range getRange();
    /**
     * <pre>
     * Диапазон записей в ответе.
     * </pre>
     *
     * <code>.IRIS.Range range = 1;</code>
     */
    kz.kase.iris.model.IrisApiBase.RangeOrBuilder getRangeOrBuilder();

    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    java.util.List<kz.kase.iris.model.IrisApiDeals.Deal> 
        getDealsList();
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.Deal getDeals(int index);
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    int getDealsCount();
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    java.util.List<? extends kz.kase.iris.model.IrisApiDeals.DealOrBuilder> 
        getDealsOrBuilderList();
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealOrBuilder getDealsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Ответ с информацией о сделках. 
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsReply}
   */
  public  static final class DealsReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsReply)
      DealsReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsReply.newBuilder() to construct.
    private DealsReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsReply() {
      deals_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              kz.kase.iris.model.IrisApiBase.Range.Builder subBuilder = null;
              if (range_ != null) {
                subBuilder = range_.toBuilder();
              }
              range_ = input.readMessage(kz.kase.iris.model.IrisApiBase.Range.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(range_);
                range_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                deals_ = new java.util.ArrayList<kz.kase.iris.model.IrisApiDeals.Deal>();
                mutable_bitField0_ |= 0x00000002;
              }
              deals_.add(
                  input.readMessage(kz.kase.iris.model.IrisApiDeals.Deal.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          deals_ = java.util.Collections.unmodifiableList(deals_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.DealsReply.class, kz.kase.iris.model.IrisApiDeals.DealsReply.Builder.class);
    }

    private int bitField0_;
    public static final int RANGE_FIELD_NUMBER = 1;
    private kz.kase.iris.model.IrisApiBase.Range range_;
    /**
     * <pre>
     * Диапазон записей в ответе.
     * </pre>
     *
     * <code>.IRIS.Range range = 1;</code>
     */
    public boolean hasRange() {
      return range_ != null;
    }
    /**
     * <pre>
     * Диапазон записей в ответе.
     * </pre>
     *
     * <code>.IRIS.Range range = 1;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Range getRange() {
      return range_ == null ? kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance() : range_;
    }
    /**
     * <pre>
     * Диапазон записей в ответе.
     * </pre>
     *
     * <code>.IRIS.Range range = 1;</code>
     */
    public kz.kase.iris.model.IrisApiBase.RangeOrBuilder getRangeOrBuilder() {
      return getRange();
    }

    public static final int DEALS_FIELD_NUMBER = 2;
    private java.util.List<kz.kase.iris.model.IrisApiDeals.Deal> deals_;
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    public java.util.List<kz.kase.iris.model.IrisApiDeals.Deal> getDealsList() {
      return deals_;
    }
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    public java.util.List<? extends kz.kase.iris.model.IrisApiDeals.DealOrBuilder> 
        getDealsOrBuilderList() {
      return deals_;
    }
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    public int getDealsCount() {
      return deals_.size();
    }
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.Deal getDeals(int index) {
      return deals_.get(index);
    }
    /**
     * <pre>
     * Список сделок.
     * </pre>
     *
     * <code>repeated .IRIS.Deal deals = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealOrBuilder getDealsOrBuilder(
        int index) {
      return deals_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (range_ != null) {
        output.writeMessage(1, getRange());
      }
      for (int i = 0; i < deals_.size(); i++) {
        output.writeMessage(2, deals_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (range_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRange());
      }
      for (int i = 0; i < deals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, deals_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.DealsReply)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.DealsReply other = (kz.kase.iris.model.IrisApiDeals.DealsReply) obj;

      boolean result = true;
      result = result && (hasRange() == other.hasRange());
      if (hasRange()) {
        result = result && getRange()
            .equals(other.getRange());
      }
      result = result && getDealsList()
          .equals(other.getDealsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRange()) {
        hash = (37 * hash) + RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getRange().hashCode();
      }
      if (getDealsCount() > 0) {
        hash = (37 * hash) + DEALS_FIELD_NUMBER;
        hash = (53 * hash) + getDealsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.DealsReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Ответ с информацией о сделках. 
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsReply)
        kz.kase.iris.model.IrisApiDeals.DealsReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.DealsReply.class, kz.kase.iris.model.IrisApiDeals.DealsReply.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.DealsReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDealsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rangeBuilder_ == null) {
          range_ = null;
        } else {
          range_ = null;
          rangeBuilder_ = null;
        }
        if (dealsBuilder_ == null) {
          deals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dealsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsReply_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsReply getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsReply build() {
        kz.kase.iris.model.IrisApiDeals.DealsReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsReply buildPartial() {
        kz.kase.iris.model.IrisApiDeals.DealsReply result = new kz.kase.iris.model.IrisApiDeals.DealsReply(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (rangeBuilder_ == null) {
          result.range_ = range_;
        } else {
          result.range_ = rangeBuilder_.build();
        }
        if (dealsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            deals_ = java.util.Collections.unmodifiableList(deals_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.deals_ = deals_;
        } else {
          result.deals_ = dealsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.DealsReply) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.DealsReply other) {
        if (other == kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance()) return this;
        if (other.hasRange()) {
          mergeRange(other.getRange());
        }
        if (dealsBuilder_ == null) {
          if (!other.deals_.isEmpty()) {
            if (deals_.isEmpty()) {
              deals_ = other.deals_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDealsIsMutable();
              deals_.addAll(other.deals_);
            }
            onChanged();
          }
        } else {
          if (!other.deals_.isEmpty()) {
            if (dealsBuilder_.isEmpty()) {
              dealsBuilder_.dispose();
              dealsBuilder_ = null;
              deals_ = other.deals_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dealsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDealsFieldBuilder() : null;
            } else {
              dealsBuilder_.addAllMessages(other.deals_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.DealsReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.DealsReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private kz.kase.iris.model.IrisApiBase.Range range_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Range, kz.kase.iris.model.IrisApiBase.Range.Builder, kz.kase.iris.model.IrisApiBase.RangeOrBuilder> rangeBuilder_;
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      public boolean hasRange() {
        return rangeBuilder_ != null || range_ != null;
      }
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Range getRange() {
        if (rangeBuilder_ == null) {
          return range_ == null ? kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance() : range_;
        } else {
          return rangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      public Builder setRange(kz.kase.iris.model.IrisApiBase.Range value) {
        if (rangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          range_ = value;
          onChanged();
        } else {
          rangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      public Builder setRange(
          kz.kase.iris.model.IrisApiBase.Range.Builder builderForValue) {
        if (rangeBuilder_ == null) {
          range_ = builderForValue.build();
          onChanged();
        } else {
          rangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      public Builder mergeRange(kz.kase.iris.model.IrisApiBase.Range value) {
        if (rangeBuilder_ == null) {
          if (range_ != null) {
            range_ =
              kz.kase.iris.model.IrisApiBase.Range.newBuilder(range_).mergeFrom(value).buildPartial();
          } else {
            range_ = value;
          }
          onChanged();
        } else {
          rangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      public Builder clearRange() {
        if (rangeBuilder_ == null) {
          range_ = null;
          onChanged();
        } else {
          range_ = null;
          rangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Range.Builder getRangeBuilder() {
        
        onChanged();
        return getRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      public kz.kase.iris.model.IrisApiBase.RangeOrBuilder getRangeOrBuilder() {
        if (rangeBuilder_ != null) {
          return rangeBuilder_.getMessageOrBuilder();
        } else {
          return range_ == null ?
              kz.kase.iris.model.IrisApiBase.Range.getDefaultInstance() : range_;
        }
      }
      /**
       * <pre>
       * Диапазон записей в ответе.
       * </pre>
       *
       * <code>.IRIS.Range range = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Range, kz.kase.iris.model.IrisApiBase.Range.Builder, kz.kase.iris.model.IrisApiBase.RangeOrBuilder> 
          getRangeFieldBuilder() {
        if (rangeBuilder_ == null) {
          rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Range, kz.kase.iris.model.IrisApiBase.Range.Builder, kz.kase.iris.model.IrisApiBase.RangeOrBuilder>(
                  getRange(),
                  getParentForChildren(),
                  isClean());
          range_ = null;
        }
        return rangeBuilder_;
      }

      private java.util.List<kz.kase.iris.model.IrisApiDeals.Deal> deals_ =
        java.util.Collections.emptyList();
      private void ensureDealsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          deals_ = new java.util.ArrayList<kz.kase.iris.model.IrisApiDeals.Deal>(deals_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.Deal, kz.kase.iris.model.IrisApiDeals.Deal.Builder, kz.kase.iris.model.IrisApiDeals.DealOrBuilder> dealsBuilder_;

      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public java.util.List<kz.kase.iris.model.IrisApiDeals.Deal> getDealsList() {
        if (dealsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(deals_);
        } else {
          return dealsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public int getDealsCount() {
        if (dealsBuilder_ == null) {
          return deals_.size();
        } else {
          return dealsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.Deal getDeals(int index) {
        if (dealsBuilder_ == null) {
          return deals_.get(index);
        } else {
          return dealsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder setDeals(
          int index, kz.kase.iris.model.IrisApiDeals.Deal value) {
        if (dealsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDealsIsMutable();
          deals_.set(index, value);
          onChanged();
        } else {
          dealsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder setDeals(
          int index, kz.kase.iris.model.IrisApiDeals.Deal.Builder builderForValue) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          deals_.set(index, builderForValue.build());
          onChanged();
        } else {
          dealsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder addDeals(kz.kase.iris.model.IrisApiDeals.Deal value) {
        if (dealsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDealsIsMutable();
          deals_.add(value);
          onChanged();
        } else {
          dealsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder addDeals(
          int index, kz.kase.iris.model.IrisApiDeals.Deal value) {
        if (dealsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDealsIsMutable();
          deals_.add(index, value);
          onChanged();
        } else {
          dealsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder addDeals(
          kz.kase.iris.model.IrisApiDeals.Deal.Builder builderForValue) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          deals_.add(builderForValue.build());
          onChanged();
        } else {
          dealsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder addDeals(
          int index, kz.kase.iris.model.IrisApiDeals.Deal.Builder builderForValue) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          deals_.add(index, builderForValue.build());
          onChanged();
        } else {
          dealsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder addAllDeals(
          java.lang.Iterable<? extends kz.kase.iris.model.IrisApiDeals.Deal> values) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, deals_);
          onChanged();
        } else {
          dealsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder clearDeals() {
        if (dealsBuilder_ == null) {
          deals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dealsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public Builder removeDeals(int index) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          deals_.remove(index);
          onChanged();
        } else {
          dealsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.Deal.Builder getDealsBuilder(
          int index) {
        return getDealsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealOrBuilder getDealsOrBuilder(
          int index) {
        if (dealsBuilder_ == null) {
          return deals_.get(index);  } else {
          return dealsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public java.util.List<? extends kz.kase.iris.model.IrisApiDeals.DealOrBuilder> 
           getDealsOrBuilderList() {
        if (dealsBuilder_ != null) {
          return dealsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(deals_);
        }
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.Deal.Builder addDealsBuilder() {
        return getDealsFieldBuilder().addBuilder(
            kz.kase.iris.model.IrisApiDeals.Deal.getDefaultInstance());
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.Deal.Builder addDealsBuilder(
          int index) {
        return getDealsFieldBuilder().addBuilder(
            index, kz.kase.iris.model.IrisApiDeals.Deal.getDefaultInstance());
      }
      /**
       * <pre>
       * Список сделок.
       * </pre>
       *
       * <code>repeated .IRIS.Deal deals = 2;</code>
       */
      public java.util.List<kz.kase.iris.model.IrisApiDeals.Deal.Builder> 
           getDealsBuilderList() {
        return getDealsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.Deal, kz.kase.iris.model.IrisApiDeals.Deal.Builder, kz.kase.iris.model.IrisApiDeals.DealOrBuilder> 
          getDealsFieldBuilder() {
        if (dealsBuilder_ == null) {
          dealsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.Deal, kz.kase.iris.model.IrisApiDeals.Deal.Builder, kz.kase.iris.model.IrisApiDeals.DealOrBuilder>(
                  deals_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          deals_ = null;
        }
        return dealsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsReply)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsReply)
    private static final kz.kase.iris.model.IrisApiDeals.DealsReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.DealsReply();
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsReply>
        PARSER = new com.google.protobuf.AbstractParser<DealsReply>() {
      @java.lang.Override
      public DealsReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.DealsReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    java.util.List<kz.kase.iris.model.IrisApiDeals.ShortDealInfo> 
        getDealsList();
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.ShortDealInfo getDeals(int index);
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    int getDealsCount();
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    java.util.List<? extends kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder> 
        getDealsOrBuilderList();
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder getDealsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Оповещение о появлении новых сделок или наличии изменений. 
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsUpdate}
   */
  public  static final class DealsUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsUpdate)
      DealsUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsUpdate.newBuilder() to construct.
    private DealsUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsUpdate() {
      deals_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                deals_ = new java.util.ArrayList<kz.kase.iris.model.IrisApiDeals.ShortDealInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              deals_.add(
                  input.readMessage(kz.kase.iris.model.IrisApiDeals.ShortDealInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          deals_ = java.util.Collections.unmodifiableList(deals_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiDeals.DealsUpdate.class, kz.kase.iris.model.IrisApiDeals.DealsUpdate.Builder.class);
    }

    public static final int DEALS_FIELD_NUMBER = 2;
    private java.util.List<kz.kase.iris.model.IrisApiDeals.ShortDealInfo> deals_;
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    public java.util.List<kz.kase.iris.model.IrisApiDeals.ShortDealInfo> getDealsList() {
      return deals_;
    }
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    public java.util.List<? extends kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder> 
        getDealsOrBuilderList() {
      return deals_;
    }
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    public int getDealsCount() {
      return deals_.size();
    }
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.ShortDealInfo getDeals(int index) {
      return deals_.get(index);
    }
    /**
     * <pre>
     * Краткая информация о сделках.
     * </pre>
     *
     * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder getDealsOrBuilder(
        int index) {
      return deals_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < deals_.size(); i++) {
        output.writeMessage(2, deals_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < deals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, deals_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiDeals.DealsUpdate)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiDeals.DealsUpdate other = (kz.kase.iris.model.IrisApiDeals.DealsUpdate) obj;

      boolean result = true;
      result = result && getDealsList()
          .equals(other.getDealsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDealsCount() > 0) {
        hash = (37 * hash) + DEALS_FIELD_NUMBER;
        hash = (53 * hash) + getDealsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiDeals.DealsUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Оповещение о появлении новых сделок или наличии изменений. 
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsUpdate)
        kz.kase.iris.model.IrisApiDeals.DealsUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiDeals.DealsUpdate.class, kz.kase.iris.model.IrisApiDeals.DealsUpdate.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiDeals.DealsUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDealsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (dealsBuilder_ == null) {
          deals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dealsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiDeals.internal_static_IRIS_DealsUpdate_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsUpdate getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiDeals.DealsUpdate.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsUpdate build() {
        kz.kase.iris.model.IrisApiDeals.DealsUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiDeals.DealsUpdate buildPartial() {
        kz.kase.iris.model.IrisApiDeals.DealsUpdate result = new kz.kase.iris.model.IrisApiDeals.DealsUpdate(this);
        int from_bitField0_ = bitField0_;
        if (dealsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            deals_ = java.util.Collections.unmodifiableList(deals_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.deals_ = deals_;
        } else {
          result.deals_ = dealsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiDeals.DealsUpdate) {
          return mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiDeals.DealsUpdate other) {
        if (other == kz.kase.iris.model.IrisApiDeals.DealsUpdate.getDefaultInstance()) return this;
        if (dealsBuilder_ == null) {
          if (!other.deals_.isEmpty()) {
            if (deals_.isEmpty()) {
              deals_ = other.deals_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDealsIsMutable();
              deals_.addAll(other.deals_);
            }
            onChanged();
          }
        } else {
          if (!other.deals_.isEmpty()) {
            if (dealsBuilder_.isEmpty()) {
              dealsBuilder_.dispose();
              dealsBuilder_ = null;
              deals_ = other.deals_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dealsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDealsFieldBuilder() : null;
            } else {
              dealsBuilder_.addAllMessages(other.deals_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiDeals.DealsUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiDeals.DealsUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.kase.iris.model.IrisApiDeals.ShortDealInfo> deals_ =
        java.util.Collections.emptyList();
      private void ensureDealsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          deals_ = new java.util.ArrayList<kz.kase.iris.model.IrisApiDeals.ShortDealInfo>(deals_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.ShortDealInfo, kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder, kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder> dealsBuilder_;

      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public java.util.List<kz.kase.iris.model.IrisApiDeals.ShortDealInfo> getDealsList() {
        if (dealsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(deals_);
        } else {
          return dealsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public int getDealsCount() {
        if (dealsBuilder_ == null) {
          return deals_.size();
        } else {
          return dealsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.ShortDealInfo getDeals(int index) {
        if (dealsBuilder_ == null) {
          return deals_.get(index);
        } else {
          return dealsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder setDeals(
          int index, kz.kase.iris.model.IrisApiDeals.ShortDealInfo value) {
        if (dealsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDealsIsMutable();
          deals_.set(index, value);
          onChanged();
        } else {
          dealsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder setDeals(
          int index, kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder builderForValue) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          deals_.set(index, builderForValue.build());
          onChanged();
        } else {
          dealsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder addDeals(kz.kase.iris.model.IrisApiDeals.ShortDealInfo value) {
        if (dealsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDealsIsMutable();
          deals_.add(value);
          onChanged();
        } else {
          dealsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder addDeals(
          int index, kz.kase.iris.model.IrisApiDeals.ShortDealInfo value) {
        if (dealsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDealsIsMutable();
          deals_.add(index, value);
          onChanged();
        } else {
          dealsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder addDeals(
          kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder builderForValue) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          deals_.add(builderForValue.build());
          onChanged();
        } else {
          dealsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder addDeals(
          int index, kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder builderForValue) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          deals_.add(index, builderForValue.build());
          onChanged();
        } else {
          dealsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder addAllDeals(
          java.lang.Iterable<? extends kz.kase.iris.model.IrisApiDeals.ShortDealInfo> values) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, deals_);
          onChanged();
        } else {
          dealsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder clearDeals() {
        if (dealsBuilder_ == null) {
          deals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dealsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public Builder removeDeals(int index) {
        if (dealsBuilder_ == null) {
          ensureDealsIsMutable();
          deals_.remove(index);
          onChanged();
        } else {
          dealsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder getDealsBuilder(
          int index) {
        return getDealsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder getDealsOrBuilder(
          int index) {
        if (dealsBuilder_ == null) {
          return deals_.get(index);  } else {
          return dealsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public java.util.List<? extends kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder> 
           getDealsOrBuilderList() {
        if (dealsBuilder_ != null) {
          return dealsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(deals_);
        }
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder addDealsBuilder() {
        return getDealsFieldBuilder().addBuilder(
            kz.kase.iris.model.IrisApiDeals.ShortDealInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder addDealsBuilder(
          int index) {
        return getDealsFieldBuilder().addBuilder(
            index, kz.kase.iris.model.IrisApiDeals.ShortDealInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Краткая информация о сделках.
       * </pre>
       *
       * <code>repeated .IRIS.ShortDealInfo deals = 2;</code>
       */
      public java.util.List<kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder> 
           getDealsBuilderList() {
        return getDealsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.ShortDealInfo, kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder, kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder> 
          getDealsFieldBuilder() {
        if (dealsBuilder_ == null) {
          dealsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.ShortDealInfo, kz.kase.iris.model.IrisApiDeals.ShortDealInfo.Builder, kz.kase.iris.model.IrisApiDeals.ShortDealInfoOrBuilder>(
                  deals_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          deals_ = null;
        }
        return dealsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsUpdate)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsUpdate)
    private static final kz.kase.iris.model.IrisApiDeals.DealsUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiDeals.DealsUpdate();
    }

    public static kz.kase.iris.model.IrisApiDeals.DealsUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsUpdate>
        PARSER = new com.google.protobuf.AbstractParser<DealsUpdate>() {
      @java.lang.Override
      public DealsUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsUpdate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsUpdate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiDeals.DealsUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_Deal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_Deal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_ShortDealInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_ShortDealInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsBaseFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsBaseFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsSortRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsSortRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsCountRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsCountRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsCountReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsCountReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsUpdate_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024iris_api_deals.proto\022\004IRIS\032\023iris_api_b" +
      "ase.proto\032\023iris_api_secs.proto\"\246\004\n\004Deal\022" +
      "\017\n\007deal_id\030\001 \001(\003\022!\n\tdeal_time\030\002 \001(\0132\016.IR" +
      "IS.DateTime\022\025\n\rinstrument_id\030\003 \001(\005\022\020\n\010se" +
      "c_code\030\004 \001(\t\022\022\n\nactual_sin\030\005 \001(\t\022\020\n\010buye" +
      "r_id\030\006 \001(\005\022\021\n\tseller_id\030\007 \001(\005\022\034\n\005price\030\010" +
      " \001(\0132\r.IRIS.Decimal\022\022\n\nprice_unit\030\t \001(\t\022" +
      "\"\n\013dirty_price\030\n \001(\0132\r.IRIS.Decimal\022\016\n\006v" +
      "olume\030\013 \001(\003\022\036\n\007vol_kzt\030\014 \001(\0132\r.IRIS.Deci" +
      "mal\022\036\n\007vol_usd\030\r \001(\0132\r.IRIS.Decimal\022\037\n\010u" +
      "sd_rate\030\016 \001(\0132\r.IRIS.Decimal\022\034\n\005yield\030\017 " +
      "\001(\0132\r.IRIS.Decimal\022\020\n\010state_id\030\020 \001(\005\022!\n\t" +
      "deal_type\030\021 \001(\0162\016.IRIS.DealType\022\026\n\016deal_" +
      "type_desc\030\022 \001(\t\022)\n\rmarket_sector\030\023 \001(\0162\022" +
      ".IRIS.MarketSector\022\032\n\022market_sector_desc" +
      "\030\024 \001(\t\022\017\n\007version\030\025 \001(\003\"\211\001\n\rShortDealInf" +
      "o\022\017\n\007deal_id\030\001 \001(\003\022!\n\tdeal_time\030\002 \001(\0132\016." +
      "IRIS.DateTime\022#\n\nevent_type\030\003 \001(\0162\017.IRIS" +
      ".EventType\022\037\n\010sec_type\030\004 \001(\0162\r.IRIS.SecT" +
      "ype\"\320\001\n\017DealsBaseFilter\0223\n\022instruments_f" +
      "ilter\030\001 \001(\0132\027.IRIS.InstrumentsFilter\022!\n\t" +
      "deal_type\030\002 \003(\0162\016.IRIS.DealType\022)\n\rmarke" +
      "t_sector\030\003 \003(\0162\022.IRIS.MarketSector\022\024\n\014ve" +
      "rsion_from\030\004 \001(\003\022\021\n\tdeals_ids\030\005 \003(\003\022\021\n\tc" +
      "onfirmed\030\006 \001(\010\"\\\n\013DealsFilter\022 \n\006period\030" +
      "\001 \001(\0132\020.IRIS.DatePeriod\022+\n\014deals_filter\030" +
      "\002 \001(\0132\025.IRIS.DealsBaseFilter\"D\n\017DealsSor" +
      "tRecord\022#\n\005field\030\001 \001(\0162\024.IRIS.DealsSortF" +
      "ield\022\014\n\004desc\030\002 \001(\010\"6\n\021DealsCountRequest\022" +
      "!\n\006filter\030\001 \001(\0132\021.IRIS.DealsFilter\" \n\017De" +
      "alsCountReply\022\r\n\005count\030\001 \001(\005\"\224\001\n\014DealsRe" +
      "quest\022!\n\006filter\030\001 \001(\0132\021.IRIS.DealsFilter" +
      "\022\034\n\005range\030\002 \001(\0132\013.IRIS.RangeH\000\022\020\n\006bandle" +
      "\030\003 \001(\005H\000\022&\n\007sorting\030\005 \003(\0132\025.IRIS.DealsSo" +
      "rtRecordB\t\n\007records\"C\n\nDealsReply\022\032\n\005ran" +
      "ge\030\001 \001(\0132\013.IRIS.Range\022\031\n\005deals\030\002 \003(\0132\n.I" +
      "RIS.Deal\"1\n\013DealsUpdate\022\"\n\005deals\030\002 \003(\0132\023" +
      ".IRIS.ShortDealInfo*(\n\010DealType\022\t\n\005TRADE" +
      "\020\000\022\010\n\004NEGO\020\001\022\007\n\003OTC\020\002*X\n\014MarketSector\022\013\n" +
      "\007PRIMARY\020\000\022\r\n\tSECONDARY\020\001\022\016\n\nSBS_SECTOR\020" +
      "\002\022\014\n\010OFFERING\020\003\022\016\n\nREPURCHASE\020\004*\267\001\n\016Deal" +
      "sSortField\022\021\n\rDSF_DEAL_TIME\020\000\022\022\n\016DSF_INS" +
      "TRUMENT\020\001\022\r\n\tDSF_PRICE\020\002\022\023\n\017DSF_DIRTY_PR" +
      "ICE\020\003\022\016\n\nDSF_VOLUME\020\004\022\017\n\013DSF_VOL_KZT\020\005\022\r" +
      "\n\tDSF_YIELD\020\006\022\017\n\013DSF_VERSION\020\007\022\n\n\006DSF_ID" +
      "\020\010\022\r\n\tDSF_EXTID\020\tB\033\n\022kz.kase.iris.model\242" +
      "\002\004IRISb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          kz.kase.iris.model.IrisApiBase.getDescriptor(),
          kz.kase.iris.model.IrisApiSecs.getDescriptor(),
        }, assigner);
    internal_static_IRIS_Deal_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_IRIS_Deal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_Deal_descriptor,
        new java.lang.String[] { "DealId", "DealTime", "InstrumentId", "SecCode", "ActualSin", "BuyerId", "SellerId", "Price", "PriceUnit", "DirtyPrice", "Volume", "VolKzt", "VolUsd", "UsdRate", "Yield", "StateId", "DealType", "DealTypeDesc", "MarketSector", "MarketSectorDesc", "Version", });
    internal_static_IRIS_ShortDealInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_IRIS_ShortDealInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_ShortDealInfo_descriptor,
        new java.lang.String[] { "DealId", "DealTime", "EventType", "SecType", });
    internal_static_IRIS_DealsBaseFilter_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_IRIS_DealsBaseFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsBaseFilter_descriptor,
        new java.lang.String[] { "InstrumentsFilter", "DealType", "MarketSector", "VersionFrom", "DealsIds", "Confirmed", });
    internal_static_IRIS_DealsFilter_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_IRIS_DealsFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsFilter_descriptor,
        new java.lang.String[] { "Period", "DealsFilter", });
    internal_static_IRIS_DealsSortRecord_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_IRIS_DealsSortRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsSortRecord_descriptor,
        new java.lang.String[] { "Field", "Desc", });
    internal_static_IRIS_DealsCountRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_IRIS_DealsCountRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsCountRequest_descriptor,
        new java.lang.String[] { "Filter", });
    internal_static_IRIS_DealsCountReply_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_IRIS_DealsCountReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsCountReply_descriptor,
        new java.lang.String[] { "Count", });
    internal_static_IRIS_DealsRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_IRIS_DealsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsRequest_descriptor,
        new java.lang.String[] { "Filter", "Range", "Bandle", "Sorting", "Records", });
    internal_static_IRIS_DealsReply_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_IRIS_DealsReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsReply_descriptor,
        new java.lang.String[] { "Range", "Deals", });
    internal_static_IRIS_DealsUpdate_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_IRIS_DealsUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsUpdate_descriptor,
        new java.lang.String[] { "Deals", });
    kz.kase.iris.model.IrisApiBase.getDescriptor();
    kz.kase.iris.model.IrisApiSecs.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
