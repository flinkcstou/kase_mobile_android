// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iris_api_orders.proto

package kz.kase.iris.model;

public final class IrisApiOrders {
  private IrisApiOrders() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Направление поданной заявки (покупка, продажа). 
   * </pre>
   *
   * Protobuf enum {@code IRIS.OrderDirection}
   */
  public enum OrderDirection
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Покупка.
     * </pre>
     *
     * <code>BUY = 0;</code>
     */
    BUY(0),
    /**
     * <pre>
     * Продажа.
     * </pre>
     *
     * <code>SELL = 1;</code>
     */
    SELL(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Покупка.
     * </pre>
     *
     * <code>BUY = 0;</code>
     */
    public static final int BUY_VALUE = 0;
    /**
     * <pre>
     * Продажа.
     * </pre>
     *
     * <code>SELL = 1;</code>
     */
    public static final int SELL_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderDirection valueOf(int value) {
      return forNumber(value);
    }

    public static OrderDirection forNumber(int value) {
      switch (value) {
        case 0: return BUY;
        case 1: return SELL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderDirection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderDirection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderDirection>() {
            public OrderDirection findValueByNumber(int number) {
              return OrderDirection.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiOrders.getDescriptor().getEnumTypes().get(0);
    }

    private static final OrderDirection[] VALUES = values();

    public static OrderDirection valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderDirection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:IRIS.OrderDirection)
  }

  /**
   * <pre>
   * Статус поданной заявки. 
   * </pre>
   *
   * Protobuf enum {@code IRIS.OrderStatus}
   */
  public enum OrderStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Новая заявка.
     * </pre>
     *
     * <code>NEW_ORDER = 0;</code>
     */
    NEW_ORDER(0),
    /**
     * <pre>
     * Принятая заявка.
     * </pre>
     *
     * <code>ACCEPTED = 1;</code>
     */
    ACCEPTED(1),
    /**
     * <pre>
     * Отклонённая заявка.
     * </pre>
     *
     * <code>REJECTED = 2;</code>
     */
    REJECTED(2),
    /**
     * <pre>
     * Частично исполненная заявка.
     * </pre>
     *
     * <code>PARTIALLY = 3;</code>
     */
    PARTIALLY(3),
    /**
     * <pre>
     * Полностью исполненная заявка.
     * </pre>
     *
     * <code>FULLY = 4;</code>
     */
    FULLY(4),
    /**
     * <pre>
     * Заявка с истёкшим сроком действия.
     * </pre>
     *
     * <code>EXPIRED = 5;</code>
     */
    EXPIRED(5),
    /**
     * <pre>
     * Снятая заявка.
     * </pre>
     *
     * <code>CANCELED = 6;</code>
     */
    CANCELED(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Новая заявка.
     * </pre>
     *
     * <code>NEW_ORDER = 0;</code>
     */
    public static final int NEW_ORDER_VALUE = 0;
    /**
     * <pre>
     * Принятая заявка.
     * </pre>
     *
     * <code>ACCEPTED = 1;</code>
     */
    public static final int ACCEPTED_VALUE = 1;
    /**
     * <pre>
     * Отклонённая заявка.
     * </pre>
     *
     * <code>REJECTED = 2;</code>
     */
    public static final int REJECTED_VALUE = 2;
    /**
     * <pre>
     * Частично исполненная заявка.
     * </pre>
     *
     * <code>PARTIALLY = 3;</code>
     */
    public static final int PARTIALLY_VALUE = 3;
    /**
     * <pre>
     * Полностью исполненная заявка.
     * </pre>
     *
     * <code>FULLY = 4;</code>
     */
    public static final int FULLY_VALUE = 4;
    /**
     * <pre>
     * Заявка с истёкшим сроком действия.
     * </pre>
     *
     * <code>EXPIRED = 5;</code>
     */
    public static final int EXPIRED_VALUE = 5;
    /**
     * <pre>
     * Снятая заявка.
     * </pre>
     *
     * <code>CANCELED = 6;</code>
     */
    public static final int CANCELED_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderStatus valueOf(int value) {
      return forNumber(value);
    }

    public static OrderStatus forNumber(int value) {
      switch (value) {
        case 0: return NEW_ORDER;
        case 1: return ACCEPTED;
        case 2: return REJECTED;
        case 3: return PARTIALLY;
        case 4: return FULLY;
        case 5: return EXPIRED;
        case 6: return CANCELED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderStatus>() {
            public OrderStatus findValueByNumber(int number) {
              return OrderStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiOrders.getDescriptor().getEnumTypes().get(1);
    }

    private static final OrderStatus[] VALUES = values();

    public static OrderStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:IRIS.OrderStatus)
  }

  public interface OrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.Order)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Первичный ключ записи заявки в ИС IRIS.
     * </pre>
     *
     * <code>int64 order_id = 1;</code>
     */
    long getOrderId();

    /**
     * <pre>
     * Первичный ключ записи клиента в ИС IRIS.
     * </pre>
     *
     * <code>int32 client_id = 2;</code>
     */
    int getClientId();

    /**
     * <pre>
     * Первичный ключ записи инструмента в ИС IRIS.
     * </pre>
     *
     * <code>int32 instrument_id = 3;</code>
     */
    int getInstrumentId();

    /**
     * <pre>
     * Направление заявки (продажа или покупка).
     * </pre>
     *
     * <code>.IRIS.OrderDirection direction = 4;</code>
     */
    int getDirectionValue();
    /**
     * <pre>
     * Направление заявки (продажа или покупка).
     * </pre>
     *
     * <code>.IRIS.OrderDirection direction = 4;</code>
     */
    kz.kase.iris.model.IrisApiOrders.OrderDirection getDirection();

    /**
     * <pre>
     * Цена заявки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 5;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     * Цена заявки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 5;</code>
     */
    kz.kase.iris.model.IrisApiBase.Decimal getPrice();
    /**
     * <pre>
     * Цена заявки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 5;</code>
     */
    kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getPriceOrBuilder();

    /**
     * <pre>
     * Объём заявки.
     * </pre>
     *
     * <code>int64 volume = 6;</code>
     */
    long getVolume();

    /**
     * <pre>
     * Остаток объема заявки.
     * </pre>
     *
     * <code>int64 residue = 7;</code>
     */
    long getResidue();

    /**
     * <pre>
     * Текущее время в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
     * </pre>
     *
     * <code>int64 order_time = 8;</code>
     */
    long getOrderTime();

    /**
     * <pre>
     * Время до которого действует заявка в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
     * </pre>
     *
     * <code>int64 expire_time = 9;</code>
     */
    long getExpireTime();

    /**
     * <pre>
     * Статус заявки.
     * </pre>
     *
     * <code>.IRIS.OrderStatus status = 10;</code>
     */
    int getStatusValue();
    /**
     * <pre>
     * Статус заявки.
     * </pre>
     *
     * <code>.IRIS.OrderStatus status = 10;</code>
     */
    kz.kase.iris.model.IrisApiOrders.OrderStatus getStatus();
  }
  /**
   * <pre>
   * Структура для передачи данных о заявке. 
   * </pre>
   *
   * Protobuf type {@code IRIS.Order}
   */
  public  static final class Order extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.Order)
      OrderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Order.newBuilder() to construct.
    private Order(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Order() {
      orderId_ = 0L;
      clientId_ = 0;
      instrumentId_ = 0;
      direction_ = 0;
      volume_ = 0L;
      residue_ = 0L;
      orderTime_ = 0L;
      expireTime_ = 0L;
      status_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Order(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              orderId_ = input.readInt64();
              break;
            }
            case 16: {

              clientId_ = input.readInt32();
              break;
            }
            case 24: {

              instrumentId_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              direction_ = rawValue;
              break;
            }
            case 42: {
              kz.kase.iris.model.IrisApiBase.Decimal.Builder subBuilder = null;
              if (price_ != null) {
                subBuilder = price_.toBuilder();
              }
              price_ = input.readMessage(kz.kase.iris.model.IrisApiBase.Decimal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(price_);
                price_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {

              volume_ = input.readInt64();
              break;
            }
            case 56: {

              residue_ = input.readInt64();
              break;
            }
            case 64: {

              orderTime_ = input.readInt64();
              break;
            }
            case 72: {

              expireTime_ = input.readInt64();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApiOrders.internal_static_IRIS_Order_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApiOrders.internal_static_IRIS_Order_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApiOrders.Order.class, kz.kase.iris.model.IrisApiOrders.Order.Builder.class);
    }

    public static final int ORDER_ID_FIELD_NUMBER = 1;
    private long orderId_;
    /**
     * <pre>
     * Первичный ключ записи заявки в ИС IRIS.
     * </pre>
     *
     * <code>int64 order_id = 1;</code>
     */
    public long getOrderId() {
      return orderId_;
    }

    public static final int CLIENT_ID_FIELD_NUMBER = 2;
    private int clientId_;
    /**
     * <pre>
     * Первичный ключ записи клиента в ИС IRIS.
     * </pre>
     *
     * <code>int32 client_id = 2;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    public static final int INSTRUMENT_ID_FIELD_NUMBER = 3;
    private int instrumentId_;
    /**
     * <pre>
     * Первичный ключ записи инструмента в ИС IRIS.
     * </pre>
     *
     * <code>int32 instrument_id = 3;</code>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 4;
    private int direction_;
    /**
     * <pre>
     * Направление заявки (продажа или покупка).
     * </pre>
     *
     * <code>.IRIS.OrderDirection direction = 4;</code>
     */
    public int getDirectionValue() {
      return direction_;
    }
    /**
     * <pre>
     * Направление заявки (продажа или покупка).
     * </pre>
     *
     * <code>.IRIS.OrderDirection direction = 4;</code>
     */
    public kz.kase.iris.model.IrisApiOrders.OrderDirection getDirection() {
      @SuppressWarnings("deprecation")
      kz.kase.iris.model.IrisApiOrders.OrderDirection result = kz.kase.iris.model.IrisApiOrders.OrderDirection.valueOf(direction_);
      return result == null ? kz.kase.iris.model.IrisApiOrders.OrderDirection.UNRECOGNIZED : result;
    }

    public static final int PRICE_FIELD_NUMBER = 5;
    private kz.kase.iris.model.IrisApiBase.Decimal price_;
    /**
     * <pre>
     * Цена заявки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 5;</code>
     */
    public boolean hasPrice() {
      return price_ != null;
    }
    /**
     * <pre>
     * Цена заявки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 5;</code>
     */
    public kz.kase.iris.model.IrisApiBase.Decimal getPrice() {
      return price_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : price_;
    }
    /**
     * <pre>
     * Цена заявки.
     * </pre>
     *
     * <code>.IRIS.Decimal price = 5;</code>
     */
    public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getPriceOrBuilder() {
      return getPrice();
    }

    public static final int VOLUME_FIELD_NUMBER = 6;
    private long volume_;
    /**
     * <pre>
     * Объём заявки.
     * </pre>
     *
     * <code>int64 volume = 6;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int RESIDUE_FIELD_NUMBER = 7;
    private long residue_;
    /**
     * <pre>
     * Остаток объема заявки.
     * </pre>
     *
     * <code>int64 residue = 7;</code>
     */
    public long getResidue() {
      return residue_;
    }

    public static final int ORDER_TIME_FIELD_NUMBER = 8;
    private long orderTime_;
    /**
     * <pre>
     * Текущее время в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
     * </pre>
     *
     * <code>int64 order_time = 8;</code>
     */
    public long getOrderTime() {
      return orderTime_;
    }

    public static final int EXPIRE_TIME_FIELD_NUMBER = 9;
    private long expireTime_;
    /**
     * <pre>
     * Время до которого действует заявка в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
     * </pre>
     *
     * <code>int64 expire_time = 9;</code>
     */
    public long getExpireTime() {
      return expireTime_;
    }

    public static final int STATUS_FIELD_NUMBER = 10;
    private int status_;
    /**
     * <pre>
     * Статус заявки.
     * </pre>
     *
     * <code>.IRIS.OrderStatus status = 10;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * Статус заявки.
     * </pre>
     *
     * <code>.IRIS.OrderStatus status = 10;</code>
     */
    public kz.kase.iris.model.IrisApiOrders.OrderStatus getStatus() {
      @SuppressWarnings("deprecation")
      kz.kase.iris.model.IrisApiOrders.OrderStatus result = kz.kase.iris.model.IrisApiOrders.OrderStatus.valueOf(status_);
      return result == null ? kz.kase.iris.model.IrisApiOrders.OrderStatus.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (orderId_ != 0L) {
        output.writeInt64(1, orderId_);
      }
      if (clientId_ != 0) {
        output.writeInt32(2, clientId_);
      }
      if (instrumentId_ != 0) {
        output.writeInt32(3, instrumentId_);
      }
      if (direction_ != kz.kase.iris.model.IrisApiOrders.OrderDirection.BUY.getNumber()) {
        output.writeEnum(4, direction_);
      }
      if (price_ != null) {
        output.writeMessage(5, getPrice());
      }
      if (volume_ != 0L) {
        output.writeInt64(6, volume_);
      }
      if (residue_ != 0L) {
        output.writeInt64(7, residue_);
      }
      if (orderTime_ != 0L) {
        output.writeInt64(8, orderTime_);
      }
      if (expireTime_ != 0L) {
        output.writeInt64(9, expireTime_);
      }
      if (status_ != kz.kase.iris.model.IrisApiOrders.OrderStatus.NEW_ORDER.getNumber()) {
        output.writeEnum(10, status_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (orderId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, orderId_);
      }
      if (clientId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, clientId_);
      }
      if (instrumentId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, instrumentId_);
      }
      if (direction_ != kz.kase.iris.model.IrisApiOrders.OrderDirection.BUY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, direction_);
      }
      if (price_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPrice());
      }
      if (volume_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, volume_);
      }
      if (residue_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, residue_);
      }
      if (orderTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, orderTime_);
      }
      if (expireTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, expireTime_);
      }
      if (status_ != kz.kase.iris.model.IrisApiOrders.OrderStatus.NEW_ORDER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, status_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApiOrders.Order)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApiOrders.Order other = (kz.kase.iris.model.IrisApiOrders.Order) obj;

      boolean result = true;
      result = result && (getOrderId()
          == other.getOrderId());
      result = result && (getClientId()
          == other.getClientId());
      result = result && (getInstrumentId()
          == other.getInstrumentId());
      result = result && direction_ == other.direction_;
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && getPrice()
            .equals(other.getPrice());
      }
      result = result && (getVolume()
          == other.getVolume());
      result = result && (getResidue()
          == other.getResidue());
      result = result && (getOrderTime()
          == other.getOrderTime());
      result = result && (getExpireTime()
          == other.getExpireTime());
      result = result && status_ == other.status_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ORDER_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOrderId());
      hash = (37 * hash) + CLIENT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getClientId();
      hash = (37 * hash) + INSTRUMENT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getInstrumentId();
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + direction_;
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + getPrice().hashCode();
      }
      hash = (37 * hash) + VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVolume());
      hash = (37 * hash) + RESIDUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getResidue());
      hash = (37 * hash) + ORDER_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOrderTime());
      hash = (37 * hash) + EXPIRE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExpireTime());
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApiOrders.Order parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApiOrders.Order prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Структура для передачи данных о заявке. 
     * </pre>
     *
     * Protobuf type {@code IRIS.Order}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.Order)
        kz.kase.iris.model.IrisApiOrders.OrderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApiOrders.internal_static_IRIS_Order_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApiOrders.internal_static_IRIS_Order_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApiOrders.Order.class, kz.kase.iris.model.IrisApiOrders.Order.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApiOrders.Order.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        orderId_ = 0L;

        clientId_ = 0;

        instrumentId_ = 0;

        direction_ = 0;

        if (priceBuilder_ == null) {
          price_ = null;
        } else {
          price_ = null;
          priceBuilder_ = null;
        }
        volume_ = 0L;

        residue_ = 0L;

        orderTime_ = 0L;

        expireTime_ = 0L;

        status_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApiOrders.internal_static_IRIS_Order_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiOrders.Order getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApiOrders.Order.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiOrders.Order build() {
        kz.kase.iris.model.IrisApiOrders.Order result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApiOrders.Order buildPartial() {
        kz.kase.iris.model.IrisApiOrders.Order result = new kz.kase.iris.model.IrisApiOrders.Order(this);
        result.orderId_ = orderId_;
        result.clientId_ = clientId_;
        result.instrumentId_ = instrumentId_;
        result.direction_ = direction_;
        if (priceBuilder_ == null) {
          result.price_ = price_;
        } else {
          result.price_ = priceBuilder_.build();
        }
        result.volume_ = volume_;
        result.residue_ = residue_;
        result.orderTime_ = orderTime_;
        result.expireTime_ = expireTime_;
        result.status_ = status_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApiOrders.Order) {
          return mergeFrom((kz.kase.iris.model.IrisApiOrders.Order)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApiOrders.Order other) {
        if (other == kz.kase.iris.model.IrisApiOrders.Order.getDefaultInstance()) return this;
        if (other.getOrderId() != 0L) {
          setOrderId(other.getOrderId());
        }
        if (other.getClientId() != 0) {
          setClientId(other.getClientId());
        }
        if (other.getInstrumentId() != 0) {
          setInstrumentId(other.getInstrumentId());
        }
        if (other.direction_ != 0) {
          setDirectionValue(other.getDirectionValue());
        }
        if (other.hasPrice()) {
          mergePrice(other.getPrice());
        }
        if (other.getVolume() != 0L) {
          setVolume(other.getVolume());
        }
        if (other.getResidue() != 0L) {
          setResidue(other.getResidue());
        }
        if (other.getOrderTime() != 0L) {
          setOrderTime(other.getOrderTime());
        }
        if (other.getExpireTime() != 0L) {
          setExpireTime(other.getExpireTime());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApiOrders.Order parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApiOrders.Order) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long orderId_ ;
      /**
       * <pre>
       * Первичный ключ записи заявки в ИС IRIS.
       * </pre>
       *
       * <code>int64 order_id = 1;</code>
       */
      public long getOrderId() {
        return orderId_;
      }
      /**
       * <pre>
       * Первичный ключ записи заявки в ИС IRIS.
       * </pre>
       *
       * <code>int64 order_id = 1;</code>
       */
      public Builder setOrderId(long value) {
        
        orderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Первичный ключ записи заявки в ИС IRIS.
       * </pre>
       *
       * <code>int64 order_id = 1;</code>
       */
      public Builder clearOrderId() {
        
        orderId_ = 0L;
        onChanged();
        return this;
      }

      private int clientId_ ;
      /**
       * <pre>
       * Первичный ключ записи клиента в ИС IRIS.
       * </pre>
       *
       * <code>int32 client_id = 2;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <pre>
       * Первичный ключ записи клиента в ИС IRIS.
       * </pre>
       *
       * <code>int32 client_id = 2;</code>
       */
      public Builder setClientId(int value) {
        
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Первичный ключ записи клиента в ИС IRIS.
       * </pre>
       *
       * <code>int32 client_id = 2;</code>
       */
      public Builder clearClientId() {
        
        clientId_ = 0;
        onChanged();
        return this;
      }

      private int instrumentId_ ;
      /**
       * <pre>
       * Первичный ключ записи инструмента в ИС IRIS.
       * </pre>
       *
       * <code>int32 instrument_id = 3;</code>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <pre>
       * Первичный ключ записи инструмента в ИС IRIS.
       * </pre>
       *
       * <code>int32 instrument_id = 3;</code>
       */
      public Builder setInstrumentId(int value) {
        
        instrumentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Первичный ключ записи инструмента в ИС IRIS.
       * </pre>
       *
       * <code>int32 instrument_id = 3;</code>
       */
      public Builder clearInstrumentId() {
        
        instrumentId_ = 0;
        onChanged();
        return this;
      }

      private int direction_ = 0;
      /**
       * <pre>
       * Направление заявки (продажа или покупка).
       * </pre>
       *
       * <code>.IRIS.OrderDirection direction = 4;</code>
       */
      public int getDirectionValue() {
        return direction_;
      }
      /**
       * <pre>
       * Направление заявки (продажа или покупка).
       * </pre>
       *
       * <code>.IRIS.OrderDirection direction = 4;</code>
       */
      public Builder setDirectionValue(int value) {
        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Направление заявки (продажа или покупка).
       * </pre>
       *
       * <code>.IRIS.OrderDirection direction = 4;</code>
       */
      public kz.kase.iris.model.IrisApiOrders.OrderDirection getDirection() {
        @SuppressWarnings("deprecation")
        kz.kase.iris.model.IrisApiOrders.OrderDirection result = kz.kase.iris.model.IrisApiOrders.OrderDirection.valueOf(direction_);
        return result == null ? kz.kase.iris.model.IrisApiOrders.OrderDirection.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Направление заявки (продажа или покупка).
       * </pre>
       *
       * <code>.IRIS.OrderDirection direction = 4;</code>
       */
      public Builder setDirection(kz.kase.iris.model.IrisApiOrders.OrderDirection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        direction_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Направление заявки (продажа или покупка).
       * </pre>
       *
       * <code>.IRIS.OrderDirection direction = 4;</code>
       */
      public Builder clearDirection() {
        
        direction_ = 0;
        onChanged();
        return this;
      }

      private kz.kase.iris.model.IrisApiBase.Decimal price_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> priceBuilder_;
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      public boolean hasPrice() {
        return priceBuilder_ != null || price_ != null;
      }
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal getPrice() {
        if (priceBuilder_ == null) {
          return price_ == null ? kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : price_;
        } else {
          return priceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      public Builder setPrice(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (priceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          price_ = value;
          onChanged();
        } else {
          priceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      public Builder setPrice(
          kz.kase.iris.model.IrisApiBase.Decimal.Builder builderForValue) {
        if (priceBuilder_ == null) {
          price_ = builderForValue.build();
          onChanged();
        } else {
          priceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      public Builder mergePrice(kz.kase.iris.model.IrisApiBase.Decimal value) {
        if (priceBuilder_ == null) {
          if (price_ != null) {
            price_ =
              kz.kase.iris.model.IrisApiBase.Decimal.newBuilder(price_).mergeFrom(value).buildPartial();
          } else {
            price_ = value;
          }
          onChanged();
        } else {
          priceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      public Builder clearPrice() {
        if (priceBuilder_ == null) {
          price_ = null;
          onChanged();
        } else {
          price_ = null;
          priceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      public kz.kase.iris.model.IrisApiBase.Decimal.Builder getPriceBuilder() {
        
        onChanged();
        return getPriceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      public kz.kase.iris.model.IrisApiBase.DecimalOrBuilder getPriceOrBuilder() {
        if (priceBuilder_ != null) {
          return priceBuilder_.getMessageOrBuilder();
        } else {
          return price_ == null ?
              kz.kase.iris.model.IrisApiBase.Decimal.getDefaultInstance() : price_;
        }
      }
      /**
       * <pre>
       * Цена заявки.
       * </pre>
       *
       * <code>.IRIS.Decimal price = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder> 
          getPriceFieldBuilder() {
        if (priceBuilder_ == null) {
          priceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.Decimal, kz.kase.iris.model.IrisApiBase.Decimal.Builder, kz.kase.iris.model.IrisApiBase.DecimalOrBuilder>(
                  getPrice(),
                  getParentForChildren(),
                  isClean());
          price_ = null;
        }
        return priceBuilder_;
      }

      private long volume_ ;
      /**
       * <pre>
       * Объём заявки.
       * </pre>
       *
       * <code>int64 volume = 6;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       * Объём заявки.
       * </pre>
       *
       * <code>int64 volume = 6;</code>
       */
      public Builder setVolume(long value) {
        
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Объём заявки.
       * </pre>
       *
       * <code>int64 volume = 6;</code>
       */
      public Builder clearVolume() {
        
        volume_ = 0L;
        onChanged();
        return this;
      }

      private long residue_ ;
      /**
       * <pre>
       * Остаток объема заявки.
       * </pre>
       *
       * <code>int64 residue = 7;</code>
       */
      public long getResidue() {
        return residue_;
      }
      /**
       * <pre>
       * Остаток объема заявки.
       * </pre>
       *
       * <code>int64 residue = 7;</code>
       */
      public Builder setResidue(long value) {
        
        residue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Остаток объема заявки.
       * </pre>
       *
       * <code>int64 residue = 7;</code>
       */
      public Builder clearResidue() {
        
        residue_ = 0L;
        onChanged();
        return this;
      }

      private long orderTime_ ;
      /**
       * <pre>
       * Текущее время в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
       * </pre>
       *
       * <code>int64 order_time = 8;</code>
       */
      public long getOrderTime() {
        return orderTime_;
      }
      /**
       * <pre>
       * Текущее время в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
       * </pre>
       *
       * <code>int64 order_time = 8;</code>
       */
      public Builder setOrderTime(long value) {
        
        orderTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Текущее время в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
       * </pre>
       *
       * <code>int64 order_time = 8;</code>
       */
      public Builder clearOrderTime() {
        
        orderTime_ = 0L;
        onChanged();
        return this;
      }

      private long expireTime_ ;
      /**
       * <pre>
       * Время до которого действует заявка в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
       * </pre>
       *
       * <code>int64 expire_time = 9;</code>
       */
      public long getExpireTime() {
        return expireTime_;
      }
      /**
       * <pre>
       * Время до которого действует заявка в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
       * </pre>
       *
       * <code>int64 expire_time = 9;</code>
       */
      public Builder setExpireTime(long value) {
        
        expireTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Время до которого действует заявка в миллисекундах (как разница, измеренная в миллисекундах, между текущим временем и 01.01.1970 00:00:00 UTC).
       * </pre>
       *
       * <code>int64 expire_time = 9;</code>
       */
      public Builder clearExpireTime() {
        
        expireTime_ = 0L;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <pre>
       * Статус заявки.
       * </pre>
       *
       * <code>.IRIS.OrderStatus status = 10;</code>
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <pre>
       * Статус заявки.
       * </pre>
       *
       * <code>.IRIS.OrderStatus status = 10;</code>
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Статус заявки.
       * </pre>
       *
       * <code>.IRIS.OrderStatus status = 10;</code>
       */
      public kz.kase.iris.model.IrisApiOrders.OrderStatus getStatus() {
        @SuppressWarnings("deprecation")
        kz.kase.iris.model.IrisApiOrders.OrderStatus result = kz.kase.iris.model.IrisApiOrders.OrderStatus.valueOf(status_);
        return result == null ? kz.kase.iris.model.IrisApiOrders.OrderStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Статус заявки.
       * </pre>
       *
       * <code>.IRIS.OrderStatus status = 10;</code>
       */
      public Builder setStatus(kz.kase.iris.model.IrisApiOrders.OrderStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Статус заявки.
       * </pre>
       *
       * <code>.IRIS.OrderStatus status = 10;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.Order)
    }

    // @@protoc_insertion_point(class_scope:IRIS.Order)
    private static final kz.kase.iris.model.IrisApiOrders.Order DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApiOrders.Order();
    }

    public static kz.kase.iris.model.IrisApiOrders.Order getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Order>
        PARSER = new com.google.protobuf.AbstractParser<Order>() {
      @java.lang.Override
      public Order parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Order(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Order> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Order> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApiOrders.Order getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_Order_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_Order_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025iris_api_orders.proto\022\004IRIS\032\023iris_api_" +
      "base.proto\"\367\001\n\005Order\022\020\n\010order_id\030\001 \001(\003\022\021" +
      "\n\tclient_id\030\002 \001(\005\022\025\n\rinstrument_id\030\003 \001(\005" +
      "\022\'\n\tdirection\030\004 \001(\0162\024.IRIS.OrderDirectio" +
      "n\022\034\n\005price\030\005 \001(\0132\r.IRIS.Decimal\022\016\n\006volum" +
      "e\030\006 \001(\003\022\017\n\007residue\030\007 \001(\003\022\022\n\norder_time\030\010" +
      " \001(\003\022\023\n\013expire_time\030\t \001(\003\022!\n\006status\030\n \001(" +
      "\0162\021.IRIS.OrderStatus*#\n\016OrderDirection\022\007" +
      "\n\003BUY\020\000\022\010\n\004SELL\020\001*m\n\013OrderStatus\022\r\n\tNEW_" +
      "ORDER\020\000\022\014\n\010ACCEPTED\020\001\022\014\n\010REJECTED\020\002\022\r\n\tP" +
      "ARTIALLY\020\003\022\t\n\005FULLY\020\004\022\013\n\007EXPIRED\020\005\022\014\n\010CA" +
      "NCELED\020\006B\033\n\022kz.kase.iris.model\242\002\004IRISb\006p" +
      "roto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          kz.kase.iris.model.IrisApiBase.getDescriptor(),
        }, assigner);
    internal_static_IRIS_Order_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_IRIS_Order_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_Order_descriptor,
        new java.lang.String[] { "OrderId", "ClientId", "InstrumentId", "Direction", "Price", "Volume", "Residue", "OrderTime", "ExpireTime", "Status", });
    kz.kase.iris.model.IrisApiBase.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
