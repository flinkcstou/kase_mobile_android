// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iris_api.proto

package kz.kase.iris.model;

public final class IrisApi {
  private IrisApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DealsApiRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsApiRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Порядковый номер отправляемого запроса.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    long getSerialNum();

    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с deals_request.
     * </pre>
     *
     * <code>.IRIS.DealsCountRequest count_request = 2;</code>
     */
    boolean hasCountRequest();
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с deals_request.
     * </pre>
     *
     * <code>.IRIS.DealsCountRequest count_request = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsCountRequest getCountRequest();
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с deals_request.
     * </pre>
     *
     * <code>.IRIS.DealsCountRequest count_request = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsCountRequestOrBuilder getCountRequestOrBuilder();

    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.DealsRequest deals_request = 3;</code>
     */
    boolean hasDealsRequest();
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.DealsRequest deals_request = 3;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsRequest getDealsRequest();
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.DealsRequest deals_request = 3;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsRequestOrBuilder getDealsRequestOrBuilder();

    public kz.kase.iris.model.IrisApi.DealsApiRequest.RequestCase getRequestCase();
  }
  /**
   * <pre>
   * Запрос IRIS API в отношении сделок с ценными бумагами.
   * Сообщения count_request и deals_request взаимоисключаются.
   * Отправляется в очередь: "jms.queue.iris.Deals" (см. &lt;xref linkend="section_using_deals"/&gt;).
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsApiRequest}
   */
  public  static final class DealsApiRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsApiRequest)
      DealsApiRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsApiRequest.newBuilder() to construct.
    private DealsApiRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsApiRequest() {
      serialNum_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsApiRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              serialNum_ = input.readInt64();
              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiDeals.DealsCountRequest.Builder subBuilder = null;
              if (requestCase_ == 2) {
                subBuilder = ((kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(kz.kase.iris.model.IrisApiDeals.DealsCountRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 2;
              break;
            }
            case 26: {
              kz.kase.iris.model.IrisApiDeals.DealsRequest.Builder subBuilder = null;
              if (requestCase_ == 3) {
                subBuilder = ((kz.kase.iris.model.IrisApiDeals.DealsRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(kz.kase.iris.model.IrisApiDeals.DealsRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApi.DealsApiRequest.class, kz.kase.iris.model.IrisApi.DealsApiRequest.Builder.class);
    }

    private int requestCase_ = 0;
    private java.lang.Object request_;
    public enum RequestCase
        implements com.google.protobuf.Internal.EnumLite {
      COUNT_REQUEST(2),
      DEALS_REQUEST(3),
      REQUEST_NOT_SET(0);
      private final int value;
      private RequestCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestCase forNumber(int value) {
        switch (value) {
          case 2: return COUNT_REQUEST;
          case 3: return DEALS_REQUEST;
          case 0: return REQUEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RequestCase
    getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public static final int SERIAL_NUM_FIELD_NUMBER = 1;
    private long serialNum_;
    /**
     * <pre>
     * Порядковый номер отправляемого запроса.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    public long getSerialNum() {
      return serialNum_;
    }

    public static final int COUNT_REQUEST_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с deals_request.
     * </pre>
     *
     * <code>.IRIS.DealsCountRequest count_request = 2;</code>
     */
    public boolean hasCountRequest() {
      return requestCase_ == 2;
    }
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с deals_request.
     * </pre>
     *
     * <code>.IRIS.DealsCountRequest count_request = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsCountRequest getCountRequest() {
      if (requestCase_ == 2) {
         return (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_;
      }
      return kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance();
    }
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с deals_request.
     * </pre>
     *
     * <code>.IRIS.DealsCountRequest count_request = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsCountRequestOrBuilder getCountRequestOrBuilder() {
      if (requestCase_ == 2) {
         return (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_;
      }
      return kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance();
    }

    public static final int DEALS_REQUEST_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.DealsRequest deals_request = 3;</code>
     */
    public boolean hasDealsRequest() {
      return requestCase_ == 3;
    }
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.DealsRequest deals_request = 3;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsRequest getDealsRequest() {
      if (requestCase_ == 3) {
         return (kz.kase.iris.model.IrisApiDeals.DealsRequest) request_;
      }
      return kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance();
    }
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.DealsRequest deals_request = 3;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsRequestOrBuilder getDealsRequestOrBuilder() {
      if (requestCase_ == 3) {
         return (kz.kase.iris.model.IrisApiDeals.DealsRequest) request_;
      }
      return kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serialNum_ != 0L) {
        output.writeInt64(1, serialNum_);
      }
      if (requestCase_ == 2) {
        output.writeMessage(2, (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_);
      }
      if (requestCase_ == 3) {
        output.writeMessage(3, (kz.kase.iris.model.IrisApiDeals.DealsRequest) request_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serialNum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, serialNum_);
      }
      if (requestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_);
      }
      if (requestCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (kz.kase.iris.model.IrisApiDeals.DealsRequest) request_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApi.DealsApiRequest)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApi.DealsApiRequest other = (kz.kase.iris.model.IrisApi.DealsApiRequest) obj;

      boolean result = true;
      result = result && (getSerialNum()
          == other.getSerialNum());
      result = result && getRequestCase().equals(
          other.getRequestCase());
      if (!result) return false;
      switch (requestCase_) {
        case 2:
          result = result && getCountRequest()
              .equals(other.getCountRequest());
          break;
        case 3:
          result = result && getDealsRequest()
              .equals(other.getDealsRequest());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERIAL_NUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSerialNum());
      switch (requestCase_) {
        case 2:
          hash = (37 * hash) + COUNT_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getCountRequest().hashCode();
          break;
        case 3:
          hash = (37 * hash) + DEALS_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getDealsRequest().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApi.DealsApiRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Запрос IRIS API в отношении сделок с ценными бумагами.
     * Сообщения count_request и deals_request взаимоисключаются.
     * Отправляется в очередь: "jms.queue.iris.Deals" (см. &lt;xref linkend="section_using_deals"/&gt;).
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsApiRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsApiRequest)
        kz.kase.iris.model.IrisApi.DealsApiRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApi.DealsApiRequest.class, kz.kase.iris.model.IrisApi.DealsApiRequest.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApi.DealsApiRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serialNum_ = 0L;

        requestCase_ = 0;
        request_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiRequest_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.DealsApiRequest getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApi.DealsApiRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.DealsApiRequest build() {
        kz.kase.iris.model.IrisApi.DealsApiRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.DealsApiRequest buildPartial() {
        kz.kase.iris.model.IrisApi.DealsApiRequest result = new kz.kase.iris.model.IrisApi.DealsApiRequest(this);
        result.serialNum_ = serialNum_;
        if (requestCase_ == 2) {
          if (countRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = countRequestBuilder_.build();
          }
        }
        if (requestCase_ == 3) {
          if (dealsRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = dealsRequestBuilder_.build();
          }
        }
        result.requestCase_ = requestCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApi.DealsApiRequest) {
          return mergeFrom((kz.kase.iris.model.IrisApi.DealsApiRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApi.DealsApiRequest other) {
        if (other == kz.kase.iris.model.IrisApi.DealsApiRequest.getDefaultInstance()) return this;
        if (other.getSerialNum() != 0L) {
          setSerialNum(other.getSerialNum());
        }
        switch (other.getRequestCase()) {
          case COUNT_REQUEST: {
            mergeCountRequest(other.getCountRequest());
            break;
          }
          case DEALS_REQUEST: {
            mergeDealsRequest(other.getDealsRequest());
            break;
          }
          case REQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApi.DealsApiRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApi.DealsApiRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int requestCase_ = 0;
      private java.lang.Object request_;
      public RequestCase
          getRequestCase() {
        return RequestCase.forNumber(
            requestCase_);
      }

      public Builder clearRequest() {
        requestCase_ = 0;
        request_ = null;
        onChanged();
        return this;
      }


      private long serialNum_ ;
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public long getSerialNum() {
        return serialNum_;
      }
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder setSerialNum(long value) {
        
        serialNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder clearSerialNum() {
        
        serialNum_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsCountRequest, kz.kase.iris.model.IrisApiDeals.DealsCountRequest.Builder, kz.kase.iris.model.IrisApiDeals.DealsCountRequestOrBuilder> countRequestBuilder_;
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      public boolean hasCountRequest() {
        return requestCase_ == 2;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsCountRequest getCountRequest() {
        if (countRequestBuilder_ == null) {
          if (requestCase_ == 2) {
            return (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_;
          }
          return kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 2) {
            return countRequestBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      public Builder setCountRequest(kz.kase.iris.model.IrisApiDeals.DealsCountRequest value) {
        if (countRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          countRequestBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      public Builder setCountRequest(
          kz.kase.iris.model.IrisApiDeals.DealsCountRequest.Builder builderForValue) {
        if (countRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          countRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      public Builder mergeCountRequest(kz.kase.iris.model.IrisApiDeals.DealsCountRequest value) {
        if (countRequestBuilder_ == null) {
          if (requestCase_ == 2 &&
              request_ != kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance()) {
            request_ = kz.kase.iris.model.IrisApiDeals.DealsCountRequest.newBuilder((kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 2) {
            countRequestBuilder_.mergeFrom(value);
          }
          countRequestBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      public Builder clearCountRequest() {
        if (countRequestBuilder_ == null) {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
          }
          countRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsCountRequest.Builder getCountRequestBuilder() {
        return getCountRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsCountRequestOrBuilder getCountRequestOrBuilder() {
        if ((requestCase_ == 2) && (countRequestBuilder_ != null)) {
          return countRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 2) {
            return (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_;
          }
          return kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с deals_request.
       * </pre>
       *
       * <code>.IRIS.DealsCountRequest count_request = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsCountRequest, kz.kase.iris.model.IrisApiDeals.DealsCountRequest.Builder, kz.kase.iris.model.IrisApiDeals.DealsCountRequestOrBuilder> 
          getCountRequestFieldBuilder() {
        if (countRequestBuilder_ == null) {
          if (!(requestCase_ == 2)) {
            request_ = kz.kase.iris.model.IrisApiDeals.DealsCountRequest.getDefaultInstance();
          }
          countRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.DealsCountRequest, kz.kase.iris.model.IrisApiDeals.DealsCountRequest.Builder, kz.kase.iris.model.IrisApiDeals.DealsCountRequestOrBuilder>(
                  (kz.kase.iris.model.IrisApiDeals.DealsCountRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 2;
        onChanged();;
        return countRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsRequest, kz.kase.iris.model.IrisApiDeals.DealsRequest.Builder, kz.kase.iris.model.IrisApiDeals.DealsRequestOrBuilder> dealsRequestBuilder_;
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      public boolean hasDealsRequest() {
        return requestCase_ == 3;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsRequest getDealsRequest() {
        if (dealsRequestBuilder_ == null) {
          if (requestCase_ == 3) {
            return (kz.kase.iris.model.IrisApiDeals.DealsRequest) request_;
          }
          return kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 3) {
            return dealsRequestBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      public Builder setDealsRequest(kz.kase.iris.model.IrisApiDeals.DealsRequest value) {
        if (dealsRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          dealsRequestBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      public Builder setDealsRequest(
          kz.kase.iris.model.IrisApiDeals.DealsRequest.Builder builderForValue) {
        if (dealsRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          dealsRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      public Builder mergeDealsRequest(kz.kase.iris.model.IrisApiDeals.DealsRequest value) {
        if (dealsRequestBuilder_ == null) {
          if (requestCase_ == 3 &&
              request_ != kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance()) {
            request_ = kz.kase.iris.model.IrisApiDeals.DealsRequest.newBuilder((kz.kase.iris.model.IrisApiDeals.DealsRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 3) {
            dealsRequestBuilder_.mergeFrom(value);
          }
          dealsRequestBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      public Builder clearDealsRequest() {
        if (dealsRequestBuilder_ == null) {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
          }
          dealsRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsRequest.Builder getDealsRequestBuilder() {
        return getDealsRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsRequestOrBuilder getDealsRequestOrBuilder() {
        if ((requestCase_ == 3) && (dealsRequestBuilder_ != null)) {
          return dealsRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 3) {
            return (kz.kase.iris.model.IrisApiDeals.DealsRequest) request_;
          }
          return kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.DealsRequest deals_request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsRequest, kz.kase.iris.model.IrisApiDeals.DealsRequest.Builder, kz.kase.iris.model.IrisApiDeals.DealsRequestOrBuilder> 
          getDealsRequestFieldBuilder() {
        if (dealsRequestBuilder_ == null) {
          if (!(requestCase_ == 3)) {
            request_ = kz.kase.iris.model.IrisApiDeals.DealsRequest.getDefaultInstance();
          }
          dealsRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.DealsRequest, kz.kase.iris.model.IrisApiDeals.DealsRequest.Builder, kz.kase.iris.model.IrisApiDeals.DealsRequestOrBuilder>(
                  (kz.kase.iris.model.IrisApiDeals.DealsRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 3;
        onChanged();;
        return dealsRequestBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsApiRequest)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsApiRequest)
    private static final kz.kase.iris.model.IrisApi.DealsApiRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApi.DealsApiRequest();
    }

    public static kz.kase.iris.model.IrisApi.DealsApiRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsApiRequest>
        PARSER = new com.google.protobuf.AbstractParser<DealsApiRequest>() {
      @java.lang.Override
      public DealsApiRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsApiRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsApiRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsApiRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApi.DealsApiRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealsApiReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.DealsApiReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Порядковый номер запроса на который пришёл данный ответ.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    long getSerialNum();

    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с deals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
     */
    boolean hasDealsCountReply();
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с deals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsCountReply getDealsCountReply();
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с deals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsCountReplyOrBuilder getDealsCountReplyOrBuilder();

    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с deals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsReply deals_reply = 3;</code>
     */
    boolean hasDealsReply();
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с deals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsReply deals_reply = 3;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsReply getDealsReply();
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с deals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsReply deals_reply = 3;</code>
     */
    kz.kase.iris.model.IrisApiDeals.DealsReplyOrBuilder getDealsReplyOrBuilder();

    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с deals_count_reply, deals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    boolean hasErrorMessage();
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с deals_count_reply, deals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage();
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с deals_count_reply, deals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder();

    public kz.kase.iris.model.IrisApi.DealsApiReply.ReplayCase getReplayCase();
  }
  /**
   * <pre>
   **
   * Ответ IRIS API по сделкам с ценными бумагами.
   * Сообщения deals_count_reply, deals_reply и error_message взаимоисключаются.
   * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Deals.client" (см. &lt;xref linkend="section_using_deals"/&gt;).
   * </pre>
   *
   * Protobuf type {@code IRIS.DealsApiReply}
   */
  public  static final class DealsApiReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.DealsApiReply)
      DealsApiReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DealsApiReply.newBuilder() to construct.
    private DealsApiReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealsApiReply() {
      serialNum_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealsApiReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              serialNum_ = input.readInt64();
              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiDeals.DealsCountReply.Builder subBuilder = null;
              if (replayCase_ == 2) {
                subBuilder = ((kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_).toBuilder();
              }
              replay_ =
                  input.readMessage(kz.kase.iris.model.IrisApiDeals.DealsCountReply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_);
                replay_ = subBuilder.buildPartial();
              }
              replayCase_ = 2;
              break;
            }
            case 26: {
              kz.kase.iris.model.IrisApiDeals.DealsReply.Builder subBuilder = null;
              if (replayCase_ == 3) {
                subBuilder = ((kz.kase.iris.model.IrisApiDeals.DealsReply) replay_).toBuilder();
              }
              replay_ =
                  input.readMessage(kz.kase.iris.model.IrisApiDeals.DealsReply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiDeals.DealsReply) replay_);
                replay_ = subBuilder.buildPartial();
              }
              replayCase_ = 3;
              break;
            }
            case 34: {
              kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder subBuilder = null;
              if (replayCase_ == 4) {
                subBuilder = ((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_).toBuilder();
              }
              replay_ =
                  input.readMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
                replay_ = subBuilder.buildPartial();
              }
              replayCase_ = 4;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApi.DealsApiReply.class, kz.kase.iris.model.IrisApi.DealsApiReply.Builder.class);
    }

    private int replayCase_ = 0;
    private java.lang.Object replay_;
    public enum ReplayCase
        implements com.google.protobuf.Internal.EnumLite {
      DEALS_COUNT_REPLY(2),
      DEALS_REPLY(3),
      ERROR_MESSAGE(4),
      REPLAY_NOT_SET(0);
      private final int value;
      private ReplayCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReplayCase valueOf(int value) {
        return forNumber(value);
      }

      public static ReplayCase forNumber(int value) {
        switch (value) {
          case 2: return DEALS_COUNT_REPLY;
          case 3: return DEALS_REPLY;
          case 4: return ERROR_MESSAGE;
          case 0: return REPLAY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ReplayCase
    getReplayCase() {
      return ReplayCase.forNumber(
          replayCase_);
    }

    public static final int SERIAL_NUM_FIELD_NUMBER = 1;
    private long serialNum_;
    /**
     * <pre>
     * Порядковый номер запроса на который пришёл данный ответ.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    public long getSerialNum() {
      return serialNum_;
    }

    public static final int DEALS_COUNT_REPLY_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с deals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
     */
    public boolean hasDealsCountReply() {
      return replayCase_ == 2;
    }
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с deals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsCountReply getDealsCountReply() {
      if (replayCase_ == 2) {
         return (kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_;
      }
      return kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance();
    }
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с deals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsCountReplyOrBuilder getDealsCountReplyOrBuilder() {
      if (replayCase_ == 2) {
         return (kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_;
      }
      return kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance();
    }

    public static final int DEALS_REPLY_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с deals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsReply deals_reply = 3;</code>
     */
    public boolean hasDealsReply() {
      return replayCase_ == 3;
    }
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с deals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsReply deals_reply = 3;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsReply getDealsReply() {
      if (replayCase_ == 3) {
         return (kz.kase.iris.model.IrisApiDeals.DealsReply) replay_;
      }
      return kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance();
    }
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с deals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.DealsReply deals_reply = 3;</code>
     */
    public kz.kase.iris.model.IrisApiDeals.DealsReplyOrBuilder getDealsReplyOrBuilder() {
      if (replayCase_ == 3) {
         return (kz.kase.iris.model.IrisApiDeals.DealsReply) replay_;
      }
      return kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance();
    }

    public static final int ERROR_MESSAGE_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с deals_count_reply, deals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public boolean hasErrorMessage() {
      return replayCase_ == 4;
    }
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с deals_count_reply, deals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage() {
      if (replayCase_ == 4) {
         return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
      }
      return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
    }
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с deals_count_reply, deals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder() {
      if (replayCase_ == 4) {
         return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
      }
      return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serialNum_ != 0L) {
        output.writeInt64(1, serialNum_);
      }
      if (replayCase_ == 2) {
        output.writeMessage(2, (kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_);
      }
      if (replayCase_ == 3) {
        output.writeMessage(3, (kz.kase.iris.model.IrisApiDeals.DealsReply) replay_);
      }
      if (replayCase_ == 4) {
        output.writeMessage(4, (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serialNum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, serialNum_);
      }
      if (replayCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_);
      }
      if (replayCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (kz.kase.iris.model.IrisApiDeals.DealsReply) replay_);
      }
      if (replayCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApi.DealsApiReply)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApi.DealsApiReply other = (kz.kase.iris.model.IrisApi.DealsApiReply) obj;

      boolean result = true;
      result = result && (getSerialNum()
          == other.getSerialNum());
      result = result && getReplayCase().equals(
          other.getReplayCase());
      if (!result) return false;
      switch (replayCase_) {
        case 2:
          result = result && getDealsCountReply()
              .equals(other.getDealsCountReply());
          break;
        case 3:
          result = result && getDealsReply()
              .equals(other.getDealsReply());
          break;
        case 4:
          result = result && getErrorMessage()
              .equals(other.getErrorMessage());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERIAL_NUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSerialNum());
      switch (replayCase_) {
        case 2:
          hash = (37 * hash) + DEALS_COUNT_REPLY_FIELD_NUMBER;
          hash = (53 * hash) + getDealsCountReply().hashCode();
          break;
        case 3:
          hash = (37 * hash) + DEALS_REPLY_FIELD_NUMBER;
          hash = (53 * hash) + getDealsReply().hashCode();
          break;
        case 4:
          hash = (37 * hash) + ERROR_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getErrorMessage().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.DealsApiReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApi.DealsApiReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Ответ IRIS API по сделкам с ценными бумагами.
     * Сообщения deals_count_reply, deals_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Deals.client" (см. &lt;xref linkend="section_using_deals"/&gt;).
     * </pre>
     *
     * Protobuf type {@code IRIS.DealsApiReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.DealsApiReply)
        kz.kase.iris.model.IrisApi.DealsApiReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApi.DealsApiReply.class, kz.kase.iris.model.IrisApi.DealsApiReply.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApi.DealsApiReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serialNum_ = 0L;

        replayCase_ = 0;
        replay_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_DealsApiReply_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.DealsApiReply getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApi.DealsApiReply.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.DealsApiReply build() {
        kz.kase.iris.model.IrisApi.DealsApiReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.DealsApiReply buildPartial() {
        kz.kase.iris.model.IrisApi.DealsApiReply result = new kz.kase.iris.model.IrisApi.DealsApiReply(this);
        result.serialNum_ = serialNum_;
        if (replayCase_ == 2) {
          if (dealsCountReplyBuilder_ == null) {
            result.replay_ = replay_;
          } else {
            result.replay_ = dealsCountReplyBuilder_.build();
          }
        }
        if (replayCase_ == 3) {
          if (dealsReplyBuilder_ == null) {
            result.replay_ = replay_;
          } else {
            result.replay_ = dealsReplyBuilder_.build();
          }
        }
        if (replayCase_ == 4) {
          if (errorMessageBuilder_ == null) {
            result.replay_ = replay_;
          } else {
            result.replay_ = errorMessageBuilder_.build();
          }
        }
        result.replayCase_ = replayCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApi.DealsApiReply) {
          return mergeFrom((kz.kase.iris.model.IrisApi.DealsApiReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApi.DealsApiReply other) {
        if (other == kz.kase.iris.model.IrisApi.DealsApiReply.getDefaultInstance()) return this;
        if (other.getSerialNum() != 0L) {
          setSerialNum(other.getSerialNum());
        }
        switch (other.getReplayCase()) {
          case DEALS_COUNT_REPLY: {
            mergeDealsCountReply(other.getDealsCountReply());
            break;
          }
          case DEALS_REPLY: {
            mergeDealsReply(other.getDealsReply());
            break;
          }
          case ERROR_MESSAGE: {
            mergeErrorMessage(other.getErrorMessage());
            break;
          }
          case REPLAY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApi.DealsApiReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApi.DealsApiReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int replayCase_ = 0;
      private java.lang.Object replay_;
      public ReplayCase
          getReplayCase() {
        return ReplayCase.forNumber(
            replayCase_);
      }

      public Builder clearReplay() {
        replayCase_ = 0;
        replay_ = null;
        onChanged();
        return this;
      }


      private long serialNum_ ;
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public long getSerialNum() {
        return serialNum_;
      }
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder setSerialNum(long value) {
        
        serialNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder clearSerialNum() {
        
        serialNum_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsCountReply, kz.kase.iris.model.IrisApiDeals.DealsCountReply.Builder, kz.kase.iris.model.IrisApiDeals.DealsCountReplyOrBuilder> dealsCountReplyBuilder_;
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      public boolean hasDealsCountReply() {
        return replayCase_ == 2;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsCountReply getDealsCountReply() {
        if (dealsCountReplyBuilder_ == null) {
          if (replayCase_ == 2) {
            return (kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_;
          }
          return kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance();
        } else {
          if (replayCase_ == 2) {
            return dealsCountReplyBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      public Builder setDealsCountReply(kz.kase.iris.model.IrisApiDeals.DealsCountReply value) {
        if (dealsCountReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replay_ = value;
          onChanged();
        } else {
          dealsCountReplyBuilder_.setMessage(value);
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      public Builder setDealsCountReply(
          kz.kase.iris.model.IrisApiDeals.DealsCountReply.Builder builderForValue) {
        if (dealsCountReplyBuilder_ == null) {
          replay_ = builderForValue.build();
          onChanged();
        } else {
          dealsCountReplyBuilder_.setMessage(builderForValue.build());
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      public Builder mergeDealsCountReply(kz.kase.iris.model.IrisApiDeals.DealsCountReply value) {
        if (dealsCountReplyBuilder_ == null) {
          if (replayCase_ == 2 &&
              replay_ != kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance()) {
            replay_ = kz.kase.iris.model.IrisApiDeals.DealsCountReply.newBuilder((kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_)
                .mergeFrom(value).buildPartial();
          } else {
            replay_ = value;
          }
          onChanged();
        } else {
          if (replayCase_ == 2) {
            dealsCountReplyBuilder_.mergeFrom(value);
          }
          dealsCountReplyBuilder_.setMessage(value);
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      public Builder clearDealsCountReply() {
        if (dealsCountReplyBuilder_ == null) {
          if (replayCase_ == 2) {
            replayCase_ = 0;
            replay_ = null;
            onChanged();
          }
        } else {
          if (replayCase_ == 2) {
            replayCase_ = 0;
            replay_ = null;
          }
          dealsCountReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsCountReply.Builder getDealsCountReplyBuilder() {
        return getDealsCountReplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsCountReplyOrBuilder getDealsCountReplyOrBuilder() {
        if ((replayCase_ == 2) && (dealsCountReplyBuilder_ != null)) {
          return dealsCountReplyBuilder_.getMessageOrBuilder();
        } else {
          if (replayCase_ == 2) {
            return (kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_;
          }
          return kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с deals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsCountReply deals_count_reply = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsCountReply, kz.kase.iris.model.IrisApiDeals.DealsCountReply.Builder, kz.kase.iris.model.IrisApiDeals.DealsCountReplyOrBuilder> 
          getDealsCountReplyFieldBuilder() {
        if (dealsCountReplyBuilder_ == null) {
          if (!(replayCase_ == 2)) {
            replay_ = kz.kase.iris.model.IrisApiDeals.DealsCountReply.getDefaultInstance();
          }
          dealsCountReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.DealsCountReply, kz.kase.iris.model.IrisApiDeals.DealsCountReply.Builder, kz.kase.iris.model.IrisApiDeals.DealsCountReplyOrBuilder>(
                  (kz.kase.iris.model.IrisApiDeals.DealsCountReply) replay_,
                  getParentForChildren(),
                  isClean());
          replay_ = null;
        }
        replayCase_ = 2;
        onChanged();;
        return dealsCountReplyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsReply, kz.kase.iris.model.IrisApiDeals.DealsReply.Builder, kz.kase.iris.model.IrisApiDeals.DealsReplyOrBuilder> dealsReplyBuilder_;
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      public boolean hasDealsReply() {
        return replayCase_ == 3;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsReply getDealsReply() {
        if (dealsReplyBuilder_ == null) {
          if (replayCase_ == 3) {
            return (kz.kase.iris.model.IrisApiDeals.DealsReply) replay_;
          }
          return kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance();
        } else {
          if (replayCase_ == 3) {
            return dealsReplyBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      public Builder setDealsReply(kz.kase.iris.model.IrisApiDeals.DealsReply value) {
        if (dealsReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replay_ = value;
          onChanged();
        } else {
          dealsReplyBuilder_.setMessage(value);
        }
        replayCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      public Builder setDealsReply(
          kz.kase.iris.model.IrisApiDeals.DealsReply.Builder builderForValue) {
        if (dealsReplyBuilder_ == null) {
          replay_ = builderForValue.build();
          onChanged();
        } else {
          dealsReplyBuilder_.setMessage(builderForValue.build());
        }
        replayCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      public Builder mergeDealsReply(kz.kase.iris.model.IrisApiDeals.DealsReply value) {
        if (dealsReplyBuilder_ == null) {
          if (replayCase_ == 3 &&
              replay_ != kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance()) {
            replay_ = kz.kase.iris.model.IrisApiDeals.DealsReply.newBuilder((kz.kase.iris.model.IrisApiDeals.DealsReply) replay_)
                .mergeFrom(value).buildPartial();
          } else {
            replay_ = value;
          }
          onChanged();
        } else {
          if (replayCase_ == 3) {
            dealsReplyBuilder_.mergeFrom(value);
          }
          dealsReplyBuilder_.setMessage(value);
        }
        replayCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      public Builder clearDealsReply() {
        if (dealsReplyBuilder_ == null) {
          if (replayCase_ == 3) {
            replayCase_ = 0;
            replay_ = null;
            onChanged();
          }
        } else {
          if (replayCase_ == 3) {
            replayCase_ = 0;
            replay_ = null;
          }
          dealsReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsReply.Builder getDealsReplyBuilder() {
        return getDealsReplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      public kz.kase.iris.model.IrisApiDeals.DealsReplyOrBuilder getDealsReplyOrBuilder() {
        if ((replayCase_ == 3) && (dealsReplyBuilder_ != null)) {
          return dealsReplyBuilder_.getMessageOrBuilder();
        } else {
          if (replayCase_ == 3) {
            return (kz.kase.iris.model.IrisApiDeals.DealsReply) replay_;
          }
          return kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с deals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.DealsReply deals_reply = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiDeals.DealsReply, kz.kase.iris.model.IrisApiDeals.DealsReply.Builder, kz.kase.iris.model.IrisApiDeals.DealsReplyOrBuilder> 
          getDealsReplyFieldBuilder() {
        if (dealsReplyBuilder_ == null) {
          if (!(replayCase_ == 3)) {
            replay_ = kz.kase.iris.model.IrisApiDeals.DealsReply.getDefaultInstance();
          }
          dealsReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiDeals.DealsReply, kz.kase.iris.model.IrisApiDeals.DealsReply.Builder, kz.kase.iris.model.IrisApiDeals.DealsReplyOrBuilder>(
                  (kz.kase.iris.model.IrisApiDeals.DealsReply) replay_,
                  getParentForChildren(),
                  isClean());
          replay_ = null;
        }
        replayCase_ = 3;
        onChanged();;
        return dealsReplyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder> errorMessageBuilder_;
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public boolean hasErrorMessage() {
        return replayCase_ == 4;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage() {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4) {
            return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        } else {
          if (replayCase_ == 4) {
            return errorMessageBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder setErrorMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage value) {
        if (errorMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replay_ = value;
          onChanged();
        } else {
          errorMessageBuilder_.setMessage(value);
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder setErrorMessage(
          kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder builderForValue) {
        if (errorMessageBuilder_ == null) {
          replay_ = builderForValue.build();
          onChanged();
        } else {
          errorMessageBuilder_.setMessage(builderForValue.build());
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder mergeErrorMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage value) {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4 &&
              replay_ != kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance()) {
            replay_ = kz.kase.iris.model.IrisApiBase.ErrorMessage.newBuilder((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_)
                .mergeFrom(value).buildPartial();
          } else {
            replay_ = value;
          }
          onChanged();
        } else {
          if (replayCase_ == 4) {
            errorMessageBuilder_.mergeFrom(value);
          }
          errorMessageBuilder_.setMessage(value);
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder clearErrorMessage() {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4) {
            replayCase_ = 0;
            replay_ = null;
            onChanged();
          }
        } else {
          if (replayCase_ == 4) {
            replayCase_ = 0;
            replay_ = null;
          }
          errorMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder getErrorMessageBuilder() {
        return getErrorMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder() {
        if ((replayCase_ == 4) && (errorMessageBuilder_ != null)) {
          return errorMessageBuilder_.getMessageOrBuilder();
        } else {
          if (replayCase_ == 4) {
            return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с deals_count_reply, deals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder> 
          getErrorMessageFieldBuilder() {
        if (errorMessageBuilder_ == null) {
          if (!(replayCase_ == 4)) {
            replay_ = kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
          }
          errorMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder>(
                  (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_,
                  getParentForChildren(),
                  isClean());
          replay_ = null;
        }
        replayCase_ = 4;
        onChanged();;
        return errorMessageBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.DealsApiReply)
    }

    // @@protoc_insertion_point(class_scope:IRIS.DealsApiReply)
    private static final kz.kase.iris.model.IrisApi.DealsApiReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApi.DealsApiReply();
    }

    public static kz.kase.iris.model.IrisApi.DealsApiReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DealsApiReply>
        PARSER = new com.google.protobuf.AbstractParser<DealsApiReply>() {
      @java.lang.Override
      public DealsApiReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealsApiReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealsApiReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealsApiReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApi.DealsApiReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TotalsApiRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.TotalsApiRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Порядковый номер отправляемого запроса.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    long getSerialNum();

    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с totals_request.
     * </pre>
     *
     * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
     */
    boolean hasCountRequest();
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с totals_request.
     * </pre>
     *
     * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
     */
    kz.kase.iris.model.IrisApiTotals.TotalsCountRequest getCountRequest();
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с totals_request.
     * </pre>
     *
     * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
     */
    kz.kase.iris.model.IrisApiTotals.TotalsCountRequestOrBuilder getCountRequestOrBuilder();

    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.TotalsRequest totals_request = 3;</code>
     */
    boolean hasTotalsRequest();
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.TotalsRequest totals_request = 3;</code>
     */
    kz.kase.iris.model.IrisApiTotals.TotalsRequest getTotalsRequest();
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.TotalsRequest totals_request = 3;</code>
     */
    kz.kase.iris.model.IrisApiTotals.TotalsRequestOrBuilder getTotalsRequestOrBuilder();

    public kz.kase.iris.model.IrisApi.TotalsApiRequest.RequestCase getRequestCase();
  }
  /**
   * <pre>
   * Запрос IRIS API в отношении информации о торгах, сгруппированной за период.
   * Сообщения count_request и totals_request взаимоисключаются.
   * Отправляется в очередь: "jms.queue.iris.Totals" (см. &lt;xref linkend="section_using_totals"/&gt;).
   * </pre>
   *
   * Protobuf type {@code IRIS.TotalsApiRequest}
   */
  public  static final class TotalsApiRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.TotalsApiRequest)
      TotalsApiRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TotalsApiRequest.newBuilder() to construct.
    private TotalsApiRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TotalsApiRequest() {
      serialNum_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TotalsApiRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              serialNum_ = input.readInt64();
              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.Builder subBuilder = null;
              if (requestCase_ == 2) {
                subBuilder = ((kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 2;
              break;
            }
            case 26: {
              kz.kase.iris.model.IrisApiTotals.TotalsRequest.Builder subBuilder = null;
              if (requestCase_ == 3) {
                subBuilder = ((kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(kz.kase.iris.model.IrisApiTotals.TotalsRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApi.TotalsApiRequest.class, kz.kase.iris.model.IrisApi.TotalsApiRequest.Builder.class);
    }

    private int requestCase_ = 0;
    private java.lang.Object request_;
    public enum RequestCase
        implements com.google.protobuf.Internal.EnumLite {
      COUNT_REQUEST(2),
      TOTALS_REQUEST(3),
      REQUEST_NOT_SET(0);
      private final int value;
      private RequestCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestCase forNumber(int value) {
        switch (value) {
          case 2: return COUNT_REQUEST;
          case 3: return TOTALS_REQUEST;
          case 0: return REQUEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RequestCase
    getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public static final int SERIAL_NUM_FIELD_NUMBER = 1;
    private long serialNum_;
    /**
     * <pre>
     * Порядковый номер отправляемого запроса.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    public long getSerialNum() {
      return serialNum_;
    }

    public static final int COUNT_REQUEST_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с totals_request.
     * </pre>
     *
     * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
     */
    public boolean hasCountRequest() {
      return requestCase_ == 2;
    }
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с totals_request.
     * </pre>
     *
     * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
     */
    public kz.kase.iris.model.IrisApiTotals.TotalsCountRequest getCountRequest() {
      if (requestCase_ == 2) {
         return (kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_;
      }
      return kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.getDefaultInstance();
    }
    /**
     * <pre>
     * Запрос на количество сделок.
     * Взаимоисключается с totals_request.
     * </pre>
     *
     * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
     */
    public kz.kase.iris.model.IrisApiTotals.TotalsCountRequestOrBuilder getCountRequestOrBuilder() {
      if (requestCase_ == 2) {
         return (kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_;
      }
      return kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.getDefaultInstance();
    }

    public static final int TOTALS_REQUEST_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.TotalsRequest totals_request = 3;</code>
     */
    public boolean hasTotalsRequest() {
      return requestCase_ == 3;
    }
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.TotalsRequest totals_request = 3;</code>
     */
    public kz.kase.iris.model.IrisApiTotals.TotalsRequest getTotalsRequest() {
      if (requestCase_ == 3) {
         return (kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_;
      }
      return kz.kase.iris.model.IrisApiTotals.TotalsRequest.getDefaultInstance();
    }
    /**
     * <pre>
     * Запрос списка сделок.
     * Взаимоисключается с count_request.
     * </pre>
     *
     * <code>.IRIS.TotalsRequest totals_request = 3;</code>
     */
    public kz.kase.iris.model.IrisApiTotals.TotalsRequestOrBuilder getTotalsRequestOrBuilder() {
      if (requestCase_ == 3) {
         return (kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_;
      }
      return kz.kase.iris.model.IrisApiTotals.TotalsRequest.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serialNum_ != 0L) {
        output.writeInt64(1, serialNum_);
      }
      if (requestCase_ == 2) {
        output.writeMessage(2, (kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_);
      }
      if (requestCase_ == 3) {
        output.writeMessage(3, (kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serialNum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, serialNum_);
      }
      if (requestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_);
      }
      if (requestCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApi.TotalsApiRequest)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApi.TotalsApiRequest other = (kz.kase.iris.model.IrisApi.TotalsApiRequest) obj;

      boolean result = true;
      result = result && (getSerialNum()
          == other.getSerialNum());
      result = result && getRequestCase().equals(
          other.getRequestCase());
      if (!result) return false;
      switch (requestCase_) {
        case 2:
          result = result && getCountRequest()
              .equals(other.getCountRequest());
          break;
        case 3:
          result = result && getTotalsRequest()
              .equals(other.getTotalsRequest());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERIAL_NUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSerialNum());
      switch (requestCase_) {
        case 2:
          hash = (37 * hash) + COUNT_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getCountRequest().hashCode();
          break;
        case 3:
          hash = (37 * hash) + TOTALS_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getTotalsRequest().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApi.TotalsApiRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Запрос IRIS API в отношении информации о торгах, сгруппированной за период.
     * Сообщения count_request и totals_request взаимоисключаются.
     * Отправляется в очередь: "jms.queue.iris.Totals" (см. &lt;xref linkend="section_using_totals"/&gt;).
     * </pre>
     *
     * Protobuf type {@code IRIS.TotalsApiRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.TotalsApiRequest)
        kz.kase.iris.model.IrisApi.TotalsApiRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApi.TotalsApiRequest.class, kz.kase.iris.model.IrisApi.TotalsApiRequest.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApi.TotalsApiRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serialNum_ = 0L;

        requestCase_ = 0;
        request_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiRequest_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.TotalsApiRequest getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApi.TotalsApiRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.TotalsApiRequest build() {
        kz.kase.iris.model.IrisApi.TotalsApiRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.TotalsApiRequest buildPartial() {
        kz.kase.iris.model.IrisApi.TotalsApiRequest result = new kz.kase.iris.model.IrisApi.TotalsApiRequest(this);
        result.serialNum_ = serialNum_;
        if (requestCase_ == 2) {
          if (countRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = countRequestBuilder_.build();
          }
        }
        if (requestCase_ == 3) {
          if (totalsRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = totalsRequestBuilder_.build();
          }
        }
        result.requestCase_ = requestCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApi.TotalsApiRequest) {
          return mergeFrom((kz.kase.iris.model.IrisApi.TotalsApiRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApi.TotalsApiRequest other) {
        if (other == kz.kase.iris.model.IrisApi.TotalsApiRequest.getDefaultInstance()) return this;
        if (other.getSerialNum() != 0L) {
          setSerialNum(other.getSerialNum());
        }
        switch (other.getRequestCase()) {
          case COUNT_REQUEST: {
            mergeCountRequest(other.getCountRequest());
            break;
          }
          case TOTALS_REQUEST: {
            mergeTotalsRequest(other.getTotalsRequest());
            break;
          }
          case REQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApi.TotalsApiRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApi.TotalsApiRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int requestCase_ = 0;
      private java.lang.Object request_;
      public RequestCase
          getRequestCase() {
        return RequestCase.forNumber(
            requestCase_);
      }

      public Builder clearRequest() {
        requestCase_ = 0;
        request_ = null;
        onChanged();
        return this;
      }


      private long serialNum_ ;
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public long getSerialNum() {
        return serialNum_;
      }
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder setSerialNum(long value) {
        
        serialNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder clearSerialNum() {
        
        serialNum_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiTotals.TotalsCountRequest, kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.Builder, kz.kase.iris.model.IrisApiTotals.TotalsCountRequestOrBuilder> countRequestBuilder_;
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      public boolean hasCountRequest() {
        return requestCase_ == 2;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsCountRequest getCountRequest() {
        if (countRequestBuilder_ == null) {
          if (requestCase_ == 2) {
            return (kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_;
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 2) {
            return countRequestBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      public Builder setCountRequest(kz.kase.iris.model.IrisApiTotals.TotalsCountRequest value) {
        if (countRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          countRequestBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      public Builder setCountRequest(
          kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.Builder builderForValue) {
        if (countRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          countRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      public Builder mergeCountRequest(kz.kase.iris.model.IrisApiTotals.TotalsCountRequest value) {
        if (countRequestBuilder_ == null) {
          if (requestCase_ == 2 &&
              request_ != kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.getDefaultInstance()) {
            request_ = kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.newBuilder((kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 2) {
            countRequestBuilder_.mergeFrom(value);
          }
          countRequestBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      public Builder clearCountRequest() {
        if (countRequestBuilder_ == null) {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
          }
          countRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.Builder getCountRequestBuilder() {
        return getCountRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsCountRequestOrBuilder getCountRequestOrBuilder() {
        if ((requestCase_ == 2) && (countRequestBuilder_ != null)) {
          return countRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 2) {
            return (kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_;
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос на количество сделок.
       * Взаимоисключается с totals_request.
       * </pre>
       *
       * <code>.IRIS.TotalsCountRequest count_request = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiTotals.TotalsCountRequest, kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.Builder, kz.kase.iris.model.IrisApiTotals.TotalsCountRequestOrBuilder> 
          getCountRequestFieldBuilder() {
        if (countRequestBuilder_ == null) {
          if (!(requestCase_ == 2)) {
            request_ = kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.getDefaultInstance();
          }
          countRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiTotals.TotalsCountRequest, kz.kase.iris.model.IrisApiTotals.TotalsCountRequest.Builder, kz.kase.iris.model.IrisApiTotals.TotalsCountRequestOrBuilder>(
                  (kz.kase.iris.model.IrisApiTotals.TotalsCountRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 2;
        onChanged();;
        return countRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiTotals.TotalsRequest, kz.kase.iris.model.IrisApiTotals.TotalsRequest.Builder, kz.kase.iris.model.IrisApiTotals.TotalsRequestOrBuilder> totalsRequestBuilder_;
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      public boolean hasTotalsRequest() {
        return requestCase_ == 3;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsRequest getTotalsRequest() {
        if (totalsRequestBuilder_ == null) {
          if (requestCase_ == 3) {
            return (kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_;
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 3) {
            return totalsRequestBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      public Builder setTotalsRequest(kz.kase.iris.model.IrisApiTotals.TotalsRequest value) {
        if (totalsRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          totalsRequestBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      public Builder setTotalsRequest(
          kz.kase.iris.model.IrisApiTotals.TotalsRequest.Builder builderForValue) {
        if (totalsRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          totalsRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      public Builder mergeTotalsRequest(kz.kase.iris.model.IrisApiTotals.TotalsRequest value) {
        if (totalsRequestBuilder_ == null) {
          if (requestCase_ == 3 &&
              request_ != kz.kase.iris.model.IrisApiTotals.TotalsRequest.getDefaultInstance()) {
            request_ = kz.kase.iris.model.IrisApiTotals.TotalsRequest.newBuilder((kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 3) {
            totalsRequestBuilder_.mergeFrom(value);
          }
          totalsRequestBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      public Builder clearTotalsRequest() {
        if (totalsRequestBuilder_ == null) {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
          }
          totalsRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsRequest.Builder getTotalsRequestBuilder() {
        return getTotalsRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsRequestOrBuilder getTotalsRequestOrBuilder() {
        if ((requestCase_ == 3) && (totalsRequestBuilder_ != null)) {
          return totalsRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 3) {
            return (kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_;
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос списка сделок.
       * Взаимоисключается с count_request.
       * </pre>
       *
       * <code>.IRIS.TotalsRequest totals_request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiTotals.TotalsRequest, kz.kase.iris.model.IrisApiTotals.TotalsRequest.Builder, kz.kase.iris.model.IrisApiTotals.TotalsRequestOrBuilder> 
          getTotalsRequestFieldBuilder() {
        if (totalsRequestBuilder_ == null) {
          if (!(requestCase_ == 3)) {
            request_ = kz.kase.iris.model.IrisApiTotals.TotalsRequest.getDefaultInstance();
          }
          totalsRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiTotals.TotalsRequest, kz.kase.iris.model.IrisApiTotals.TotalsRequest.Builder, kz.kase.iris.model.IrisApiTotals.TotalsRequestOrBuilder>(
                  (kz.kase.iris.model.IrisApiTotals.TotalsRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 3;
        onChanged();;
        return totalsRequestBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.TotalsApiRequest)
    }

    // @@protoc_insertion_point(class_scope:IRIS.TotalsApiRequest)
    private static final kz.kase.iris.model.IrisApi.TotalsApiRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApi.TotalsApiRequest();
    }

    public static kz.kase.iris.model.IrisApi.TotalsApiRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TotalsApiRequest>
        PARSER = new com.google.protobuf.AbstractParser<TotalsApiRequest>() {
      @java.lang.Override
      public TotalsApiRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TotalsApiRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TotalsApiRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TotalsApiRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApi.TotalsApiRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TotalsApiReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.TotalsApiReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Порядковый номер запроса на который пришёл данный ответ.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    long getSerialNum();

    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с totals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
     */
    boolean hasTotalsCountReply();
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с totals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
     */
    kz.kase.iris.model.IrisApiTotals.TotalsCountReply getTotalsCountReply();
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с totals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
     */
    kz.kase.iris.model.IrisApiTotals.TotalsCountReplyOrBuilder getTotalsCountReplyOrBuilder();

    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с totals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsReply totals_reply = 3;</code>
     */
    boolean hasTotalsReply();
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с totals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsReply totals_reply = 3;</code>
     */
    kz.kase.iris.model.IrisApiTotals.TotalsReply getTotalsReply();
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с totals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsReply totals_reply = 3;</code>
     */
    kz.kase.iris.model.IrisApiTotals.TotalsReplyOrBuilder getTotalsReplyOrBuilder();

    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с totals_count_reply, totals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    boolean hasErrorMessage();
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с totals_count_reply, totals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage();
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с totals_count_reply, totals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder();

    public kz.kase.iris.model.IrisApi.TotalsApiReply.ReplayCase getReplayCase();
  }
  /**
   * <pre>
   **
   * Ответ IRIS API с информацией о торгах, сгруппированной за период.
   * Сообщения totals_count_reply, totals_reply и error_message взаимоисключаются.
   * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Totals.client" (см. &lt;xref linkend="section_using_totals"/&gt;).
   * </pre>
   *
   * Protobuf type {@code IRIS.TotalsApiReply}
   */
  public  static final class TotalsApiReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.TotalsApiReply)
      TotalsApiReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TotalsApiReply.newBuilder() to construct.
    private TotalsApiReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TotalsApiReply() {
      serialNum_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TotalsApiReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              serialNum_ = input.readInt64();
              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiTotals.TotalsCountReply.Builder subBuilder = null;
              if (replayCase_ == 2) {
                subBuilder = ((kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_).toBuilder();
              }
              replay_ =
                  input.readMessage(kz.kase.iris.model.IrisApiTotals.TotalsCountReply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_);
                replay_ = subBuilder.buildPartial();
              }
              replayCase_ = 2;
              break;
            }
            case 26: {
              kz.kase.iris.model.IrisApiTotals.TotalsReply.Builder subBuilder = null;
              if (replayCase_ == 3) {
                subBuilder = ((kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_).toBuilder();
              }
              replay_ =
                  input.readMessage(kz.kase.iris.model.IrisApiTotals.TotalsReply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_);
                replay_ = subBuilder.buildPartial();
              }
              replayCase_ = 3;
              break;
            }
            case 34: {
              kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder subBuilder = null;
              if (replayCase_ == 4) {
                subBuilder = ((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_).toBuilder();
              }
              replay_ =
                  input.readMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
                replay_ = subBuilder.buildPartial();
              }
              replayCase_ = 4;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApi.TotalsApiReply.class, kz.kase.iris.model.IrisApi.TotalsApiReply.Builder.class);
    }

    private int replayCase_ = 0;
    private java.lang.Object replay_;
    public enum ReplayCase
        implements com.google.protobuf.Internal.EnumLite {
      TOTALS_COUNT_REPLY(2),
      TOTALS_REPLY(3),
      ERROR_MESSAGE(4),
      REPLAY_NOT_SET(0);
      private final int value;
      private ReplayCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReplayCase valueOf(int value) {
        return forNumber(value);
      }

      public static ReplayCase forNumber(int value) {
        switch (value) {
          case 2: return TOTALS_COUNT_REPLY;
          case 3: return TOTALS_REPLY;
          case 4: return ERROR_MESSAGE;
          case 0: return REPLAY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ReplayCase
    getReplayCase() {
      return ReplayCase.forNumber(
          replayCase_);
    }

    public static final int SERIAL_NUM_FIELD_NUMBER = 1;
    private long serialNum_;
    /**
     * <pre>
     * Порядковый номер запроса на который пришёл данный ответ.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    public long getSerialNum() {
      return serialNum_;
    }

    public static final int TOTALS_COUNT_REPLY_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с totals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
     */
    public boolean hasTotalsCountReply() {
      return replayCase_ == 2;
    }
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с totals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
     */
    public kz.kase.iris.model.IrisApiTotals.TotalsCountReply getTotalsCountReply() {
      if (replayCase_ == 2) {
         return (kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_;
      }
      return kz.kase.iris.model.IrisApiTotals.TotalsCountReply.getDefaultInstance();
    }
    /**
     * <pre>
     * Ответ с количеством сделок.
     * Взаимоисключается с totals_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
     */
    public kz.kase.iris.model.IrisApiTotals.TotalsCountReplyOrBuilder getTotalsCountReplyOrBuilder() {
      if (replayCase_ == 2) {
         return (kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_;
      }
      return kz.kase.iris.model.IrisApiTotals.TotalsCountReply.getDefaultInstance();
    }

    public static final int TOTALS_REPLY_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с totals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsReply totals_reply = 3;</code>
     */
    public boolean hasTotalsReply() {
      return replayCase_ == 3;
    }
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с totals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsReply totals_reply = 3;</code>
     */
    public kz.kase.iris.model.IrisApiTotals.TotalsReply getTotalsReply() {
      if (replayCase_ == 3) {
         return (kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_;
      }
      return kz.kase.iris.model.IrisApiTotals.TotalsReply.getDefaultInstance();
    }
    /**
     * <pre>
     * Ответ со списком сделок.
     * Взаимоисключается с totals_count_reply, error_message.
     * </pre>
     *
     * <code>.IRIS.TotalsReply totals_reply = 3;</code>
     */
    public kz.kase.iris.model.IrisApiTotals.TotalsReplyOrBuilder getTotalsReplyOrBuilder() {
      if (replayCase_ == 3) {
         return (kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_;
      }
      return kz.kase.iris.model.IrisApiTotals.TotalsReply.getDefaultInstance();
    }

    public static final int ERROR_MESSAGE_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с totals_count_reply, totals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public boolean hasErrorMessage() {
      return replayCase_ == 4;
    }
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с totals_count_reply, totals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage() {
      if (replayCase_ == 4) {
         return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
      }
      return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
    }
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * Взаимоисключается с totals_count_reply, totals_reply.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder() {
      if (replayCase_ == 4) {
         return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
      }
      return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serialNum_ != 0L) {
        output.writeInt64(1, serialNum_);
      }
      if (replayCase_ == 2) {
        output.writeMessage(2, (kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_);
      }
      if (replayCase_ == 3) {
        output.writeMessage(3, (kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_);
      }
      if (replayCase_ == 4) {
        output.writeMessage(4, (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serialNum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, serialNum_);
      }
      if (replayCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_);
      }
      if (replayCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_);
      }
      if (replayCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApi.TotalsApiReply)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApi.TotalsApiReply other = (kz.kase.iris.model.IrisApi.TotalsApiReply) obj;

      boolean result = true;
      result = result && (getSerialNum()
          == other.getSerialNum());
      result = result && getReplayCase().equals(
          other.getReplayCase());
      if (!result) return false;
      switch (replayCase_) {
        case 2:
          result = result && getTotalsCountReply()
              .equals(other.getTotalsCountReply());
          break;
        case 3:
          result = result && getTotalsReply()
              .equals(other.getTotalsReply());
          break;
        case 4:
          result = result && getErrorMessage()
              .equals(other.getErrorMessage());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERIAL_NUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSerialNum());
      switch (replayCase_) {
        case 2:
          hash = (37 * hash) + TOTALS_COUNT_REPLY_FIELD_NUMBER;
          hash = (53 * hash) + getTotalsCountReply().hashCode();
          break;
        case 3:
          hash = (37 * hash) + TOTALS_REPLY_FIELD_NUMBER;
          hash = (53 * hash) + getTotalsReply().hashCode();
          break;
        case 4:
          hash = (37 * hash) + ERROR_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getErrorMessage().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.TotalsApiReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApi.TotalsApiReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Ответ IRIS API с информацией о торгах, сгруппированной за период.
     * Сообщения totals_count_reply, totals_reply и error_message взаимоисключаются.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Totals.client" (см. &lt;xref linkend="section_using_totals"/&gt;).
     * </pre>
     *
     * Protobuf type {@code IRIS.TotalsApiReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.TotalsApiReply)
        kz.kase.iris.model.IrisApi.TotalsApiReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApi.TotalsApiReply.class, kz.kase.iris.model.IrisApi.TotalsApiReply.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApi.TotalsApiReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serialNum_ = 0L;

        replayCase_ = 0;
        replay_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_TotalsApiReply_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.TotalsApiReply getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApi.TotalsApiReply.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.TotalsApiReply build() {
        kz.kase.iris.model.IrisApi.TotalsApiReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.TotalsApiReply buildPartial() {
        kz.kase.iris.model.IrisApi.TotalsApiReply result = new kz.kase.iris.model.IrisApi.TotalsApiReply(this);
        result.serialNum_ = serialNum_;
        if (replayCase_ == 2) {
          if (totalsCountReplyBuilder_ == null) {
            result.replay_ = replay_;
          } else {
            result.replay_ = totalsCountReplyBuilder_.build();
          }
        }
        if (replayCase_ == 3) {
          if (totalsReplyBuilder_ == null) {
            result.replay_ = replay_;
          } else {
            result.replay_ = totalsReplyBuilder_.build();
          }
        }
        if (replayCase_ == 4) {
          if (errorMessageBuilder_ == null) {
            result.replay_ = replay_;
          } else {
            result.replay_ = errorMessageBuilder_.build();
          }
        }
        result.replayCase_ = replayCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApi.TotalsApiReply) {
          return mergeFrom((kz.kase.iris.model.IrisApi.TotalsApiReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApi.TotalsApiReply other) {
        if (other == kz.kase.iris.model.IrisApi.TotalsApiReply.getDefaultInstance()) return this;
        if (other.getSerialNum() != 0L) {
          setSerialNum(other.getSerialNum());
        }
        switch (other.getReplayCase()) {
          case TOTALS_COUNT_REPLY: {
            mergeTotalsCountReply(other.getTotalsCountReply());
            break;
          }
          case TOTALS_REPLY: {
            mergeTotalsReply(other.getTotalsReply());
            break;
          }
          case ERROR_MESSAGE: {
            mergeErrorMessage(other.getErrorMessage());
            break;
          }
          case REPLAY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApi.TotalsApiReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApi.TotalsApiReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int replayCase_ = 0;
      private java.lang.Object replay_;
      public ReplayCase
          getReplayCase() {
        return ReplayCase.forNumber(
            replayCase_);
      }

      public Builder clearReplay() {
        replayCase_ = 0;
        replay_ = null;
        onChanged();
        return this;
      }


      private long serialNum_ ;
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public long getSerialNum() {
        return serialNum_;
      }
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder setSerialNum(long value) {
        
        serialNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder clearSerialNum() {
        
        serialNum_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiTotals.TotalsCountReply, kz.kase.iris.model.IrisApiTotals.TotalsCountReply.Builder, kz.kase.iris.model.IrisApiTotals.TotalsCountReplyOrBuilder> totalsCountReplyBuilder_;
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      public boolean hasTotalsCountReply() {
        return replayCase_ == 2;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsCountReply getTotalsCountReply() {
        if (totalsCountReplyBuilder_ == null) {
          if (replayCase_ == 2) {
            return (kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_;
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsCountReply.getDefaultInstance();
        } else {
          if (replayCase_ == 2) {
            return totalsCountReplyBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsCountReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      public Builder setTotalsCountReply(kz.kase.iris.model.IrisApiTotals.TotalsCountReply value) {
        if (totalsCountReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replay_ = value;
          onChanged();
        } else {
          totalsCountReplyBuilder_.setMessage(value);
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      public Builder setTotalsCountReply(
          kz.kase.iris.model.IrisApiTotals.TotalsCountReply.Builder builderForValue) {
        if (totalsCountReplyBuilder_ == null) {
          replay_ = builderForValue.build();
          onChanged();
        } else {
          totalsCountReplyBuilder_.setMessage(builderForValue.build());
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      public Builder mergeTotalsCountReply(kz.kase.iris.model.IrisApiTotals.TotalsCountReply value) {
        if (totalsCountReplyBuilder_ == null) {
          if (replayCase_ == 2 &&
              replay_ != kz.kase.iris.model.IrisApiTotals.TotalsCountReply.getDefaultInstance()) {
            replay_ = kz.kase.iris.model.IrisApiTotals.TotalsCountReply.newBuilder((kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_)
                .mergeFrom(value).buildPartial();
          } else {
            replay_ = value;
          }
          onChanged();
        } else {
          if (replayCase_ == 2) {
            totalsCountReplyBuilder_.mergeFrom(value);
          }
          totalsCountReplyBuilder_.setMessage(value);
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      public Builder clearTotalsCountReply() {
        if (totalsCountReplyBuilder_ == null) {
          if (replayCase_ == 2) {
            replayCase_ = 0;
            replay_ = null;
            onChanged();
          }
        } else {
          if (replayCase_ == 2) {
            replayCase_ = 0;
            replay_ = null;
          }
          totalsCountReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsCountReply.Builder getTotalsCountReplyBuilder() {
        return getTotalsCountReplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsCountReplyOrBuilder getTotalsCountReplyOrBuilder() {
        if ((replayCase_ == 2) && (totalsCountReplyBuilder_ != null)) {
          return totalsCountReplyBuilder_.getMessageOrBuilder();
        } else {
          if (replayCase_ == 2) {
            return (kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_;
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsCountReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с количеством сделок.
       * Взаимоисключается с totals_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsCountReply totals_count_reply = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiTotals.TotalsCountReply, kz.kase.iris.model.IrisApiTotals.TotalsCountReply.Builder, kz.kase.iris.model.IrisApiTotals.TotalsCountReplyOrBuilder> 
          getTotalsCountReplyFieldBuilder() {
        if (totalsCountReplyBuilder_ == null) {
          if (!(replayCase_ == 2)) {
            replay_ = kz.kase.iris.model.IrisApiTotals.TotalsCountReply.getDefaultInstance();
          }
          totalsCountReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiTotals.TotalsCountReply, kz.kase.iris.model.IrisApiTotals.TotalsCountReply.Builder, kz.kase.iris.model.IrisApiTotals.TotalsCountReplyOrBuilder>(
                  (kz.kase.iris.model.IrisApiTotals.TotalsCountReply) replay_,
                  getParentForChildren(),
                  isClean());
          replay_ = null;
        }
        replayCase_ = 2;
        onChanged();;
        return totalsCountReplyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiTotals.TotalsReply, kz.kase.iris.model.IrisApiTotals.TotalsReply.Builder, kz.kase.iris.model.IrisApiTotals.TotalsReplyOrBuilder> totalsReplyBuilder_;
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      public boolean hasTotalsReply() {
        return replayCase_ == 3;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsReply getTotalsReply() {
        if (totalsReplyBuilder_ == null) {
          if (replayCase_ == 3) {
            return (kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_;
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsReply.getDefaultInstance();
        } else {
          if (replayCase_ == 3) {
            return totalsReplyBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      public Builder setTotalsReply(kz.kase.iris.model.IrisApiTotals.TotalsReply value) {
        if (totalsReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replay_ = value;
          onChanged();
        } else {
          totalsReplyBuilder_.setMessage(value);
        }
        replayCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      public Builder setTotalsReply(
          kz.kase.iris.model.IrisApiTotals.TotalsReply.Builder builderForValue) {
        if (totalsReplyBuilder_ == null) {
          replay_ = builderForValue.build();
          onChanged();
        } else {
          totalsReplyBuilder_.setMessage(builderForValue.build());
        }
        replayCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      public Builder mergeTotalsReply(kz.kase.iris.model.IrisApiTotals.TotalsReply value) {
        if (totalsReplyBuilder_ == null) {
          if (replayCase_ == 3 &&
              replay_ != kz.kase.iris.model.IrisApiTotals.TotalsReply.getDefaultInstance()) {
            replay_ = kz.kase.iris.model.IrisApiTotals.TotalsReply.newBuilder((kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_)
                .mergeFrom(value).buildPartial();
          } else {
            replay_ = value;
          }
          onChanged();
        } else {
          if (replayCase_ == 3) {
            totalsReplyBuilder_.mergeFrom(value);
          }
          totalsReplyBuilder_.setMessage(value);
        }
        replayCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      public Builder clearTotalsReply() {
        if (totalsReplyBuilder_ == null) {
          if (replayCase_ == 3) {
            replayCase_ = 0;
            replay_ = null;
            onChanged();
          }
        } else {
          if (replayCase_ == 3) {
            replayCase_ = 0;
            replay_ = null;
          }
          totalsReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsReply.Builder getTotalsReplyBuilder() {
        return getTotalsReplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      public kz.kase.iris.model.IrisApiTotals.TotalsReplyOrBuilder getTotalsReplyOrBuilder() {
        if ((replayCase_ == 3) && (totalsReplyBuilder_ != null)) {
          return totalsReplyBuilder_.getMessageOrBuilder();
        } else {
          if (replayCase_ == 3) {
            return (kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_;
          }
          return kz.kase.iris.model.IrisApiTotals.TotalsReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ со списком сделок.
       * Взаимоисключается с totals_count_reply, error_message.
       * </pre>
       *
       * <code>.IRIS.TotalsReply totals_reply = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiTotals.TotalsReply, kz.kase.iris.model.IrisApiTotals.TotalsReply.Builder, kz.kase.iris.model.IrisApiTotals.TotalsReplyOrBuilder> 
          getTotalsReplyFieldBuilder() {
        if (totalsReplyBuilder_ == null) {
          if (!(replayCase_ == 3)) {
            replay_ = kz.kase.iris.model.IrisApiTotals.TotalsReply.getDefaultInstance();
          }
          totalsReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiTotals.TotalsReply, kz.kase.iris.model.IrisApiTotals.TotalsReply.Builder, kz.kase.iris.model.IrisApiTotals.TotalsReplyOrBuilder>(
                  (kz.kase.iris.model.IrisApiTotals.TotalsReply) replay_,
                  getParentForChildren(),
                  isClean());
          replay_ = null;
        }
        replayCase_ = 3;
        onChanged();;
        return totalsReplyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder> errorMessageBuilder_;
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public boolean hasErrorMessage() {
        return replayCase_ == 4;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage() {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4) {
            return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        } else {
          if (replayCase_ == 4) {
            return errorMessageBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder setErrorMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage value) {
        if (errorMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replay_ = value;
          onChanged();
        } else {
          errorMessageBuilder_.setMessage(value);
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder setErrorMessage(
          kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder builderForValue) {
        if (errorMessageBuilder_ == null) {
          replay_ = builderForValue.build();
          onChanged();
        } else {
          errorMessageBuilder_.setMessage(builderForValue.build());
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder mergeErrorMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage value) {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4 &&
              replay_ != kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance()) {
            replay_ = kz.kase.iris.model.IrisApiBase.ErrorMessage.newBuilder((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_)
                .mergeFrom(value).buildPartial();
          } else {
            replay_ = value;
          }
          onChanged();
        } else {
          if (replayCase_ == 4) {
            errorMessageBuilder_.mergeFrom(value);
          }
          errorMessageBuilder_.setMessage(value);
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder clearErrorMessage() {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4) {
            replayCase_ = 0;
            replay_ = null;
            onChanged();
          }
        } else {
          if (replayCase_ == 4) {
            replayCase_ = 0;
            replay_ = null;
          }
          errorMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder getErrorMessageBuilder() {
        return getErrorMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder() {
        if ((replayCase_ == 4) && (errorMessageBuilder_ != null)) {
          return errorMessageBuilder_.getMessageOrBuilder();
        } else {
          if (replayCase_ == 4) {
            return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * Взаимоисключается с totals_count_reply, totals_reply.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder> 
          getErrorMessageFieldBuilder() {
        if (errorMessageBuilder_ == null) {
          if (!(replayCase_ == 4)) {
            replay_ = kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
          }
          errorMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder>(
                  (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_,
                  getParentForChildren(),
                  isClean());
          replay_ = null;
        }
        replayCase_ = 4;
        onChanged();;
        return errorMessageBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.TotalsApiReply)
    }

    // @@protoc_insertion_point(class_scope:IRIS.TotalsApiReply)
    private static final kz.kase.iris.model.IrisApi.TotalsApiReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApi.TotalsApiReply();
    }

    public static kz.kase.iris.model.IrisApi.TotalsApiReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TotalsApiReply>
        PARSER = new com.google.protobuf.AbstractParser<TotalsApiReply>() {
      @java.lang.Override
      public TotalsApiReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TotalsApiReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TotalsApiReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TotalsApiReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApi.TotalsApiReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SecsApiRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.SecsApiRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Порядковый номер отправляемого запроса.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    long getSerialNum();

    /**
     * <pre>
     * Запрос на получение списка инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
     */
    boolean hasInstrumentRequest();
    /**
     * <pre>
     * Запрос на получение списка инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
     */
    kz.kase.iris.model.IrisApiSecs.InstrumentsRequest getInstrumentRequest();
    /**
     * <pre>
     * Запрос на получение списка инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
     */
    kz.kase.iris.model.IrisApiSecs.InstrumentsRequestOrBuilder getInstrumentRequestOrBuilder();

    public kz.kase.iris.model.IrisApi.SecsApiRequest.RequestCase getRequestCase();
  }
  /**
   * <pre>
   * Запрос IRIS API в отношении информации о ценных бумагах.
   * Отправляется в очередь: "jms.queue.iris.Secs" (см. &lt;xref linkend="section_using_secs"/&gt;).
   * </pre>
   *
   * Protobuf type {@code IRIS.SecsApiRequest}
   */
  public  static final class SecsApiRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.SecsApiRequest)
      SecsApiRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SecsApiRequest.newBuilder() to construct.
    private SecsApiRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SecsApiRequest() {
      serialNum_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SecsApiRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              serialNum_ = input.readInt64();
              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.Builder subBuilder = null;
              if (requestCase_ == 2) {
                subBuilder = ((kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApi.SecsApiRequest.class, kz.kase.iris.model.IrisApi.SecsApiRequest.Builder.class);
    }

    private int requestCase_ = 0;
    private java.lang.Object request_;
    public enum RequestCase
        implements com.google.protobuf.Internal.EnumLite {
      INSTRUMENT_REQUEST(2),
      REQUEST_NOT_SET(0);
      private final int value;
      private RequestCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestCase forNumber(int value) {
        switch (value) {
          case 2: return INSTRUMENT_REQUEST;
          case 0: return REQUEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RequestCase
    getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public static final int SERIAL_NUM_FIELD_NUMBER = 1;
    private long serialNum_;
    /**
     * <pre>
     * Порядковый номер отправляемого запроса.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    public long getSerialNum() {
      return serialNum_;
    }

    public static final int INSTRUMENT_REQUEST_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Запрос на получение списка инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
     */
    public boolean hasInstrumentRequest() {
      return requestCase_ == 2;
    }
    /**
     * <pre>
     * Запрос на получение списка инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
     */
    public kz.kase.iris.model.IrisApiSecs.InstrumentsRequest getInstrumentRequest() {
      if (requestCase_ == 2) {
         return (kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_;
      }
      return kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.getDefaultInstance();
    }
    /**
     * <pre>
     * Запрос на получение списка инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
     */
    public kz.kase.iris.model.IrisApiSecs.InstrumentsRequestOrBuilder getInstrumentRequestOrBuilder() {
      if (requestCase_ == 2) {
         return (kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_;
      }
      return kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serialNum_ != 0L) {
        output.writeInt64(1, serialNum_);
      }
      if (requestCase_ == 2) {
        output.writeMessage(2, (kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serialNum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, serialNum_);
      }
      if (requestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApi.SecsApiRequest)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApi.SecsApiRequest other = (kz.kase.iris.model.IrisApi.SecsApiRequest) obj;

      boolean result = true;
      result = result && (getSerialNum()
          == other.getSerialNum());
      result = result && getRequestCase().equals(
          other.getRequestCase());
      if (!result) return false;
      switch (requestCase_) {
        case 2:
          result = result && getInstrumentRequest()
              .equals(other.getInstrumentRequest());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERIAL_NUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSerialNum());
      switch (requestCase_) {
        case 2:
          hash = (37 * hash) + INSTRUMENT_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getInstrumentRequest().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApi.SecsApiRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Запрос IRIS API в отношении информации о ценных бумагах.
     * Отправляется в очередь: "jms.queue.iris.Secs" (см. &lt;xref linkend="section_using_secs"/&gt;).
     * </pre>
     *
     * Protobuf type {@code IRIS.SecsApiRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.SecsApiRequest)
        kz.kase.iris.model.IrisApi.SecsApiRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApi.SecsApiRequest.class, kz.kase.iris.model.IrisApi.SecsApiRequest.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApi.SecsApiRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serialNum_ = 0L;

        requestCase_ = 0;
        request_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiRequest_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.SecsApiRequest getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApi.SecsApiRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.SecsApiRequest build() {
        kz.kase.iris.model.IrisApi.SecsApiRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.SecsApiRequest buildPartial() {
        kz.kase.iris.model.IrisApi.SecsApiRequest result = new kz.kase.iris.model.IrisApi.SecsApiRequest(this);
        result.serialNum_ = serialNum_;
        if (requestCase_ == 2) {
          if (instrumentRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = instrumentRequestBuilder_.build();
          }
        }
        result.requestCase_ = requestCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApi.SecsApiRequest) {
          return mergeFrom((kz.kase.iris.model.IrisApi.SecsApiRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApi.SecsApiRequest other) {
        if (other == kz.kase.iris.model.IrisApi.SecsApiRequest.getDefaultInstance()) return this;
        if (other.getSerialNum() != 0L) {
          setSerialNum(other.getSerialNum());
        }
        switch (other.getRequestCase()) {
          case INSTRUMENT_REQUEST: {
            mergeInstrumentRequest(other.getInstrumentRequest());
            break;
          }
          case REQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApi.SecsApiRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApi.SecsApiRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int requestCase_ = 0;
      private java.lang.Object request_;
      public RequestCase
          getRequestCase() {
        return RequestCase.forNumber(
            requestCase_);
      }

      public Builder clearRequest() {
        requestCase_ = 0;
        request_ = null;
        onChanged();
        return this;
      }


      private long serialNum_ ;
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public long getSerialNum() {
        return serialNum_;
      }
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder setSerialNum(long value) {
        
        serialNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порядковый номер отправляемого запроса.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder clearSerialNum() {
        
        serialNum_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiSecs.InstrumentsRequest, kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsRequestOrBuilder> instrumentRequestBuilder_;
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      public boolean hasInstrumentRequest() {
        return requestCase_ == 2;
      }
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsRequest getInstrumentRequest() {
        if (instrumentRequestBuilder_ == null) {
          if (requestCase_ == 2) {
            return (kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_;
          }
          return kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 2) {
            return instrumentRequestBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      public Builder setInstrumentRequest(kz.kase.iris.model.IrisApiSecs.InstrumentsRequest value) {
        if (instrumentRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          instrumentRequestBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      public Builder setInstrumentRequest(
          kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.Builder builderForValue) {
        if (instrumentRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          instrumentRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      public Builder mergeInstrumentRequest(kz.kase.iris.model.IrisApiSecs.InstrumentsRequest value) {
        if (instrumentRequestBuilder_ == null) {
          if (requestCase_ == 2 &&
              request_ != kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.getDefaultInstance()) {
            request_ = kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.newBuilder((kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 2) {
            instrumentRequestBuilder_.mergeFrom(value);
          }
          instrumentRequestBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      public Builder clearInstrumentRequest() {
        if (instrumentRequestBuilder_ == null) {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
          }
          instrumentRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.Builder getInstrumentRequestBuilder() {
        return getInstrumentRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsRequestOrBuilder getInstrumentRequestOrBuilder() {
        if ((requestCase_ == 2) && (instrumentRequestBuilder_ != null)) {
          return instrumentRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 2) {
            return (kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_;
          }
          return kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Запрос на получение списка инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsRequest instrument_request = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiSecs.InstrumentsRequest, kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsRequestOrBuilder> 
          getInstrumentRequestFieldBuilder() {
        if (instrumentRequestBuilder_ == null) {
          if (!(requestCase_ == 2)) {
            request_ = kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.getDefaultInstance();
          }
          instrumentRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiSecs.InstrumentsRequest, kz.kase.iris.model.IrisApiSecs.InstrumentsRequest.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsRequestOrBuilder>(
                  (kz.kase.iris.model.IrisApiSecs.InstrumentsRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 2;
        onChanged();;
        return instrumentRequestBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.SecsApiRequest)
    }

    // @@protoc_insertion_point(class_scope:IRIS.SecsApiRequest)
    private static final kz.kase.iris.model.IrisApi.SecsApiRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApi.SecsApiRequest();
    }

    public static kz.kase.iris.model.IrisApi.SecsApiRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SecsApiRequest>
        PARSER = new com.google.protobuf.AbstractParser<SecsApiRequest>() {
      @java.lang.Override
      public SecsApiRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SecsApiRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SecsApiRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SecsApiRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApi.SecsApiRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SecsApiReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IRIS.SecsApiReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Порядковый номер запроса на который пришёл данный ответ.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    long getSerialNum();

    /**
     * <pre>
     * Ответ с запрошенным списком инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
     */
    boolean hasInstrumentReply();
    /**
     * <pre>
     * Ответ с запрошенным списком инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
     */
    kz.kase.iris.model.IrisApiSecs.InstrumentsReply getInstrumentReply();
    /**
     * <pre>
     * Ответ с запрошенным списком инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
     */
    kz.kase.iris.model.IrisApiSecs.InstrumentsReplyOrBuilder getInstrumentReplyOrBuilder();

    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    boolean hasErrorMessage();
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage();
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder();

    public kz.kase.iris.model.IrisApi.SecsApiReply.ReplayCase getReplayCase();
  }
  /**
   * <pre>
   **
   * Ответ IRIS API с информацией о ценных бумагах.
   * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Secs.client" (см. &lt;xref linkend="section_using_secs"/&gt;).
   * </pre>
   *
   * Protobuf type {@code IRIS.SecsApiReply}
   */
  public  static final class SecsApiReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IRIS.SecsApiReply)
      SecsApiReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SecsApiReply.newBuilder() to construct.
    private SecsApiReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SecsApiReply() {
      serialNum_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SecsApiReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              serialNum_ = input.readInt64();
              break;
            }
            case 18: {
              kz.kase.iris.model.IrisApiSecs.InstrumentsReply.Builder subBuilder = null;
              if (replayCase_ == 2) {
                subBuilder = ((kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_).toBuilder();
              }
              replay_ =
                  input.readMessage(kz.kase.iris.model.IrisApiSecs.InstrumentsReply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_);
                replay_ = subBuilder.buildPartial();
              }
              replayCase_ = 2;
              break;
            }
            case 34: {
              kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder subBuilder = null;
              if (replayCase_ == 4) {
                subBuilder = ((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_).toBuilder();
              }
              replay_ =
                  input.readMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
                replay_ = subBuilder.buildPartial();
              }
              replayCase_ = 4;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.kase.iris.model.IrisApi.SecsApiReply.class, kz.kase.iris.model.IrisApi.SecsApiReply.Builder.class);
    }

    private int replayCase_ = 0;
    private java.lang.Object replay_;
    public enum ReplayCase
        implements com.google.protobuf.Internal.EnumLite {
      INSTRUMENT_REPLY(2),
      ERROR_MESSAGE(4),
      REPLAY_NOT_SET(0);
      private final int value;
      private ReplayCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReplayCase valueOf(int value) {
        return forNumber(value);
      }

      public static ReplayCase forNumber(int value) {
        switch (value) {
          case 2: return INSTRUMENT_REPLY;
          case 4: return ERROR_MESSAGE;
          case 0: return REPLAY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ReplayCase
    getReplayCase() {
      return ReplayCase.forNumber(
          replayCase_);
    }

    public static final int SERIAL_NUM_FIELD_NUMBER = 1;
    private long serialNum_;
    /**
     * <pre>
     * Порядковый номер запроса на который пришёл данный ответ.
     * </pre>
     *
     * <code>int64 serial_num = 1;</code>
     */
    public long getSerialNum() {
      return serialNum_;
    }

    public static final int INSTRUMENT_REPLY_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Ответ с запрошенным списком инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
     */
    public boolean hasInstrumentReply() {
      return replayCase_ == 2;
    }
    /**
     * <pre>
     * Ответ с запрошенным списком инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
     */
    public kz.kase.iris.model.IrisApiSecs.InstrumentsReply getInstrumentReply() {
      if (replayCase_ == 2) {
         return (kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_;
      }
      return kz.kase.iris.model.IrisApiSecs.InstrumentsReply.getDefaultInstance();
    }
    /**
     * <pre>
     * Ответ с запрошенным списком инструментов.
     * </pre>
     *
     * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
     */
    public kz.kase.iris.model.IrisApiSecs.InstrumentsReplyOrBuilder getInstrumentReplyOrBuilder() {
      if (replayCase_ == 2) {
         return (kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_;
      }
      return kz.kase.iris.model.IrisApiSecs.InstrumentsReply.getDefaultInstance();
    }

    public static final int ERROR_MESSAGE_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public boolean hasErrorMessage() {
      return replayCase_ == 4;
    }
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage() {
      if (replayCase_ == 4) {
         return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
      }
      return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
    }
    /**
     * <pre>
     * Ответ с cообщением об ошибке.
     * </pre>
     *
     * <code>.IRIS.ErrorMessage error_message = 4;</code>
     */
    public kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder() {
      if (replayCase_ == 4) {
         return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
      }
      return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serialNum_ != 0L) {
        output.writeInt64(1, serialNum_);
      }
      if (replayCase_ == 2) {
        output.writeMessage(2, (kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_);
      }
      if (replayCase_ == 4) {
        output.writeMessage(4, (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serialNum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, serialNum_);
      }
      if (replayCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_);
      }
      if (replayCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.kase.iris.model.IrisApi.SecsApiReply)) {
        return super.equals(obj);
      }
      kz.kase.iris.model.IrisApi.SecsApiReply other = (kz.kase.iris.model.IrisApi.SecsApiReply) obj;

      boolean result = true;
      result = result && (getSerialNum()
          == other.getSerialNum());
      result = result && getReplayCase().equals(
          other.getReplayCase());
      if (!result) return false;
      switch (replayCase_) {
        case 2:
          result = result && getInstrumentReply()
              .equals(other.getInstrumentReply());
          break;
        case 4:
          result = result && getErrorMessage()
              .equals(other.getErrorMessage());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERIAL_NUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSerialNum());
      switch (replayCase_) {
        case 2:
          hash = (37 * hash) + INSTRUMENT_REPLY_FIELD_NUMBER;
          hash = (53 * hash) + getInstrumentReply().hashCode();
          break;
        case 4:
          hash = (37 * hash) + ERROR_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getErrorMessage().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kz.kase.iris.model.IrisApi.SecsApiReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.kase.iris.model.IrisApi.SecsApiReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Ответ IRIS API с информацией о ценных бумагах.
     * Для получения данного сообщения необходимо подписаться на топик: "jms.topic.iris.Secs.client" (см. &lt;xref linkend="section_using_secs"/&gt;).
     * </pre>
     *
     * Protobuf type {@code IRIS.SecsApiReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IRIS.SecsApiReply)
        kz.kase.iris.model.IrisApi.SecsApiReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.kase.iris.model.IrisApi.SecsApiReply.class, kz.kase.iris.model.IrisApi.SecsApiReply.Builder.class);
      }

      // Construct using kz.kase.iris.model.IrisApi.SecsApiReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serialNum_ = 0L;

        replayCase_ = 0;
        replay_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.kase.iris.model.IrisApi.internal_static_IRIS_SecsApiReply_descriptor;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.SecsApiReply getDefaultInstanceForType() {
        return kz.kase.iris.model.IrisApi.SecsApiReply.getDefaultInstance();
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.SecsApiReply build() {
        kz.kase.iris.model.IrisApi.SecsApiReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.kase.iris.model.IrisApi.SecsApiReply buildPartial() {
        kz.kase.iris.model.IrisApi.SecsApiReply result = new kz.kase.iris.model.IrisApi.SecsApiReply(this);
        result.serialNum_ = serialNum_;
        if (replayCase_ == 2) {
          if (instrumentReplyBuilder_ == null) {
            result.replay_ = replay_;
          } else {
            result.replay_ = instrumentReplyBuilder_.build();
          }
        }
        if (replayCase_ == 4) {
          if (errorMessageBuilder_ == null) {
            result.replay_ = replay_;
          } else {
            result.replay_ = errorMessageBuilder_.build();
          }
        }
        result.replayCase_ = replayCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.kase.iris.model.IrisApi.SecsApiReply) {
          return mergeFrom((kz.kase.iris.model.IrisApi.SecsApiReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.kase.iris.model.IrisApi.SecsApiReply other) {
        if (other == kz.kase.iris.model.IrisApi.SecsApiReply.getDefaultInstance()) return this;
        if (other.getSerialNum() != 0L) {
          setSerialNum(other.getSerialNum());
        }
        switch (other.getReplayCase()) {
          case INSTRUMENT_REPLY: {
            mergeInstrumentReply(other.getInstrumentReply());
            break;
          }
          case ERROR_MESSAGE: {
            mergeErrorMessage(other.getErrorMessage());
            break;
          }
          case REPLAY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kz.kase.iris.model.IrisApi.SecsApiReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kz.kase.iris.model.IrisApi.SecsApiReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int replayCase_ = 0;
      private java.lang.Object replay_;
      public ReplayCase
          getReplayCase() {
        return ReplayCase.forNumber(
            replayCase_);
      }

      public Builder clearReplay() {
        replayCase_ = 0;
        replay_ = null;
        onChanged();
        return this;
      }


      private long serialNum_ ;
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public long getSerialNum() {
        return serialNum_;
      }
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder setSerialNum(long value) {
        
        serialNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порядковый номер запроса на который пришёл данный ответ.
       * </pre>
       *
       * <code>int64 serial_num = 1;</code>
       */
      public Builder clearSerialNum() {
        
        serialNum_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiSecs.InstrumentsReply, kz.kase.iris.model.IrisApiSecs.InstrumentsReply.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsReplyOrBuilder> instrumentReplyBuilder_;
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      public boolean hasInstrumentReply() {
        return replayCase_ == 2;
      }
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsReply getInstrumentReply() {
        if (instrumentReplyBuilder_ == null) {
          if (replayCase_ == 2) {
            return (kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_;
          }
          return kz.kase.iris.model.IrisApiSecs.InstrumentsReply.getDefaultInstance();
        } else {
          if (replayCase_ == 2) {
            return instrumentReplyBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiSecs.InstrumentsReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      public Builder setInstrumentReply(kz.kase.iris.model.IrisApiSecs.InstrumentsReply value) {
        if (instrumentReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replay_ = value;
          onChanged();
        } else {
          instrumentReplyBuilder_.setMessage(value);
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      public Builder setInstrumentReply(
          kz.kase.iris.model.IrisApiSecs.InstrumentsReply.Builder builderForValue) {
        if (instrumentReplyBuilder_ == null) {
          replay_ = builderForValue.build();
          onChanged();
        } else {
          instrumentReplyBuilder_.setMessage(builderForValue.build());
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      public Builder mergeInstrumentReply(kz.kase.iris.model.IrisApiSecs.InstrumentsReply value) {
        if (instrumentReplyBuilder_ == null) {
          if (replayCase_ == 2 &&
              replay_ != kz.kase.iris.model.IrisApiSecs.InstrumentsReply.getDefaultInstance()) {
            replay_ = kz.kase.iris.model.IrisApiSecs.InstrumentsReply.newBuilder((kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_)
                .mergeFrom(value).buildPartial();
          } else {
            replay_ = value;
          }
          onChanged();
        } else {
          if (replayCase_ == 2) {
            instrumentReplyBuilder_.mergeFrom(value);
          }
          instrumentReplyBuilder_.setMessage(value);
        }
        replayCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      public Builder clearInstrumentReply() {
        if (instrumentReplyBuilder_ == null) {
          if (replayCase_ == 2) {
            replayCase_ = 0;
            replay_ = null;
            onChanged();
          }
        } else {
          if (replayCase_ == 2) {
            replayCase_ = 0;
            replay_ = null;
          }
          instrumentReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsReply.Builder getInstrumentReplyBuilder() {
        return getInstrumentReplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      public kz.kase.iris.model.IrisApiSecs.InstrumentsReplyOrBuilder getInstrumentReplyOrBuilder() {
        if ((replayCase_ == 2) && (instrumentReplyBuilder_ != null)) {
          return instrumentReplyBuilder_.getMessageOrBuilder();
        } else {
          if (replayCase_ == 2) {
            return (kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_;
          }
          return kz.kase.iris.model.IrisApiSecs.InstrumentsReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с запрошенным списком инструментов.
       * </pre>
       *
       * <code>.IRIS.InstrumentsReply instrument_reply = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiSecs.InstrumentsReply, kz.kase.iris.model.IrisApiSecs.InstrumentsReply.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsReplyOrBuilder> 
          getInstrumentReplyFieldBuilder() {
        if (instrumentReplyBuilder_ == null) {
          if (!(replayCase_ == 2)) {
            replay_ = kz.kase.iris.model.IrisApiSecs.InstrumentsReply.getDefaultInstance();
          }
          instrumentReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiSecs.InstrumentsReply, kz.kase.iris.model.IrisApiSecs.InstrumentsReply.Builder, kz.kase.iris.model.IrisApiSecs.InstrumentsReplyOrBuilder>(
                  (kz.kase.iris.model.IrisApiSecs.InstrumentsReply) replay_,
                  getParentForChildren(),
                  isClean());
          replay_ = null;
        }
        replayCase_ = 2;
        onChanged();;
        return instrumentReplyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder> errorMessageBuilder_;
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public boolean hasErrorMessage() {
        return replayCase_ == 4;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessage getErrorMessage() {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4) {
            return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        } else {
          if (replayCase_ == 4) {
            return errorMessageBuilder_.getMessage();
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder setErrorMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage value) {
        if (errorMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replay_ = value;
          onChanged();
        } else {
          errorMessageBuilder_.setMessage(value);
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder setErrorMessage(
          kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder builderForValue) {
        if (errorMessageBuilder_ == null) {
          replay_ = builderForValue.build();
          onChanged();
        } else {
          errorMessageBuilder_.setMessage(builderForValue.build());
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder mergeErrorMessage(kz.kase.iris.model.IrisApiBase.ErrorMessage value) {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4 &&
              replay_ != kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance()) {
            replay_ = kz.kase.iris.model.IrisApiBase.ErrorMessage.newBuilder((kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_)
                .mergeFrom(value).buildPartial();
          } else {
            replay_ = value;
          }
          onChanged();
        } else {
          if (replayCase_ == 4) {
            errorMessageBuilder_.mergeFrom(value);
          }
          errorMessageBuilder_.setMessage(value);
        }
        replayCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public Builder clearErrorMessage() {
        if (errorMessageBuilder_ == null) {
          if (replayCase_ == 4) {
            replayCase_ = 0;
            replay_ = null;
            onChanged();
          }
        } else {
          if (replayCase_ == 4) {
            replayCase_ = 0;
            replay_ = null;
          }
          errorMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder getErrorMessageBuilder() {
        return getErrorMessageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      public kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder getErrorMessageOrBuilder() {
        if ((replayCase_ == 4) && (errorMessageBuilder_ != null)) {
          return errorMessageBuilder_.getMessageOrBuilder();
        } else {
          if (replayCase_ == 4) {
            return (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_;
          }
          return kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Ответ с cообщением об ошибке.
       * </pre>
       *
       * <code>.IRIS.ErrorMessage error_message = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder> 
          getErrorMessageFieldBuilder() {
        if (errorMessageBuilder_ == null) {
          if (!(replayCase_ == 4)) {
            replay_ = kz.kase.iris.model.IrisApiBase.ErrorMessage.getDefaultInstance();
          }
          errorMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              kz.kase.iris.model.IrisApiBase.ErrorMessage, kz.kase.iris.model.IrisApiBase.ErrorMessage.Builder, kz.kase.iris.model.IrisApiBase.ErrorMessageOrBuilder>(
                  (kz.kase.iris.model.IrisApiBase.ErrorMessage) replay_,
                  getParentForChildren(),
                  isClean());
          replay_ = null;
        }
        replayCase_ = 4;
        onChanged();;
        return errorMessageBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IRIS.SecsApiReply)
    }

    // @@protoc_insertion_point(class_scope:IRIS.SecsApiReply)
    private static final kz.kase.iris.model.IrisApi.SecsApiReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.kase.iris.model.IrisApi.SecsApiReply();
    }

    public static kz.kase.iris.model.IrisApi.SecsApiReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SecsApiReply>
        PARSER = new com.google.protobuf.AbstractParser<SecsApiReply>() {
      @java.lang.Override
      public SecsApiReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SecsApiReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SecsApiReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SecsApiReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.kase.iris.model.IrisApi.SecsApiReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsApiRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsApiRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_DealsApiReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_DealsApiReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_TotalsApiRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_TotalsApiRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_TotalsApiReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_TotalsApiReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_SecsApiRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_SecsApiRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IRIS_SecsApiReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IRIS_SecsApiReply_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016iris_api.proto\022\004IRIS\032\023iris_api_base.pr" +
      "oto\032\023iris_api_secs.proto\032\024iris_api_deals" +
      ".proto\032\025iris_api_totals.proto\"\217\001\n\017DealsA" +
      "piRequest\022\022\n\nserial_num\030\001 \001(\003\0220\n\rcount_r" +
      "equest\030\002 \001(\0132\027.IRIS.DealsCountRequestH\000\022" +
      "+\n\rdeals_request\030\003 \001(\0132\022.IRIS.DealsReque" +
      "stH\000B\t\n\007request\"\267\001\n\rDealsApiReply\022\022\n\nser" +
      "ial_num\030\001 \001(\003\0222\n\021deals_count_reply\030\002 \001(\013" +
      "2\025.IRIS.DealsCountReplyH\000\022\'\n\013deals_reply" +
      "\030\003 \001(\0132\020.IRIS.DealsReplyH\000\022+\n\rerror_mess" +
      "age\030\004 \001(\0132\022.IRIS.ErrorMessageH\000B\010\n\006repla" +
      "y\"\223\001\n\020TotalsApiRequest\022\022\n\nserial_num\030\001 \001" +
      "(\003\0221\n\rcount_request\030\002 \001(\0132\030.IRIS.TotalsC" +
      "ountRequestH\000\022-\n\016totals_request\030\003 \001(\0132\023." +
      "IRIS.TotalsRequestH\000B\t\n\007request\"\274\001\n\016Tota" +
      "lsApiReply\022\022\n\nserial_num\030\001 \001(\003\0224\n\022totals" +
      "_count_reply\030\002 \001(\0132\026.IRIS.TotalsCountRep" +
      "lyH\000\022)\n\014totals_reply\030\003 \001(\0132\021.IRIS.Totals" +
      "ReplyH\000\022+\n\rerror_message\030\004 \001(\0132\022.IRIS.Er" +
      "rorMessageH\000B\010\n\006replay\"g\n\016SecsApiRequest" +
      "\022\022\n\nserial_num\030\001 \001(\003\0226\n\022instrument_reque" +
      "st\030\002 \001(\0132\030.IRIS.InstrumentsRequestH\000B\t\n\007" +
      "request\"\215\001\n\014SecsApiReply\022\022\n\nserial_num\030\001" +
      " \001(\003\0222\n\020instrument_reply\030\002 \001(\0132\026.IRIS.In" +
      "strumentsReplyH\000\022+\n\rerror_message\030\004 \001(\0132" +
      "\022.IRIS.ErrorMessageH\000B\010\n\006replayB\033\n\022kz.ka" +
      "se.iris.model\242\002\004IRISb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          kz.kase.iris.model.IrisApiBase.getDescriptor(),
          kz.kase.iris.model.IrisApiSecs.getDescriptor(),
          kz.kase.iris.model.IrisApiDeals.getDescriptor(),
          kz.kase.iris.model.IrisApiTotals.getDescriptor(),
        }, assigner);
    internal_static_IRIS_DealsApiRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_IRIS_DealsApiRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsApiRequest_descriptor,
        new java.lang.String[] { "SerialNum", "CountRequest", "DealsRequest", "Request", });
    internal_static_IRIS_DealsApiReply_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_IRIS_DealsApiReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_DealsApiReply_descriptor,
        new java.lang.String[] { "SerialNum", "DealsCountReply", "DealsReply", "ErrorMessage", "Replay", });
    internal_static_IRIS_TotalsApiRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_IRIS_TotalsApiRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_TotalsApiRequest_descriptor,
        new java.lang.String[] { "SerialNum", "CountRequest", "TotalsRequest", "Request", });
    internal_static_IRIS_TotalsApiReply_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_IRIS_TotalsApiReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_TotalsApiReply_descriptor,
        new java.lang.String[] { "SerialNum", "TotalsCountReply", "TotalsReply", "ErrorMessage", "Replay", });
    internal_static_IRIS_SecsApiRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_IRIS_SecsApiRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_SecsApiRequest_descriptor,
        new java.lang.String[] { "SerialNum", "InstrumentRequest", "Request", });
    internal_static_IRIS_SecsApiReply_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_IRIS_SecsApiReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IRIS_SecsApiReply_descriptor,
        new java.lang.String[] { "SerialNum", "InstrumentReply", "ErrorMessage", "Replay", });
    kz.kase.iris.model.IrisApiBase.getDescriptor();
    kz.kase.iris.model.IrisApiSecs.getDescriptor();
    kz.kase.iris.model.IrisApiDeals.getDescriptor();
    kz.kase.iris.model.IrisApiTotals.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
